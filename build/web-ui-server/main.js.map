{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///D:/Projects/GetDone/node_modules/object-assign/index.js","webpack:///D:/Projects/GetDone/node_modules/prop-types/checkPropTypes.js","webpack:///D:/Projects/GetDone/node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///D:/Projects/GetDone/node_modules/react/cjs/react.development.js","webpack:///D:/Projects/GetDone/node_modules/react/index.js","webpack:///./../ui-components/GetDoneApp/GetDoneApp.tsx","webpack:///./App.tsx","webpack:///./AppHandler.ts","webpack:///./index.html.ts","webpack:///./main.ts","webpack:///./node_modules/accept/lib/charset.js","webpack:///./node_modules/accept/lib/encoding.js","webpack:///./node_modules/accept/lib/index.js","webpack:///./node_modules/accept/lib/language.js","webpack:///./node_modules/accept/lib/mediatype.js","webpack:///./node_modules/ammo/lib/index.js","webpack:///./node_modules/b64/lib/decoder.js","webpack:///./node_modules/b64/lib/encoder.js","webpack:///./node_modules/b64/lib/index.js","webpack:///./node_modules/big-time/lib/index.js","webpack:///./node_modules/boom/lib/index.js","webpack:///./node_modules/bounce/lib/index.js","webpack:///./node_modules/call/lib/index.js","webpack:///./node_modules/call/lib/regex.js","webpack:///./node_modules/call/lib/segment.js","webpack:///./node_modules/catbox-memory/lib/index.js","webpack:///./node_modules/catbox/lib/client.js","webpack:///./node_modules/catbox/lib/index.js","webpack:///./node_modules/catbox/lib/pending.js","webpack:///./node_modules/catbox/lib/policy.js","webpack:///./node_modules/content/lib/index.js","webpack:///./node_modules/cryptiles/lib/index.js","webpack:///./node_modules/hapi/lib/auth.js","webpack:///./node_modules/hapi/lib/compression.js","webpack:///./node_modules/hapi/lib/config.js","webpack:///./node_modules/hapi/lib/core.js","webpack:///./node_modules/hapi/lib/cors.js","webpack:///./node_modules/hapi/lib/ext.js","webpack:///./node_modules/hapi/lib/handler.js","webpack:///./node_modules/hapi/lib/headers.js","webpack:///./node_modules/hapi/lib/index.js","webpack:///./node_modules/hapi/lib/methods.js","webpack:///./node_modules/hapi/lib/request.js","webpack:///./node_modules/hapi/lib/response.js","webpack:///./node_modules/hapi/lib/route.js","webpack:///./node_modules/hapi/lib/security.js","webpack:///./node_modules/hapi/lib/server.js","webpack:///./node_modules/hapi/lib/streams.js","webpack:///./node_modules/hapi/lib/toolkit.js","webpack:///./node_modules/hapi/lib/transmit.js","webpack:///./node_modules/hapi/lib/validation.js","webpack:///./node_modules/heavy/lib/index.js","webpack:///./node_modules/hoek/lib/escape.js","webpack:///./node_modules/hoek/lib/index.js","webpack:///./node_modules/inert/lib/directory.js","webpack:///./node_modules/inert/lib/etag.js","webpack:///./node_modules/inert/lib/file.js","webpack:///./node_modules/inert/lib/fs.js","webpack:///./node_modules/inert/lib/index.js","webpack:///./node_modules/iron/lib/index.js","webpack:///./node_modules/isemail/lib/index.js","webpack:///./node_modules/joi/lib/cast.js","webpack:///./node_modules/joi/lib/errors.js","webpack:///./node_modules/joi/lib/index.js","webpack:///./node_modules/joi/lib/language.js","webpack:///./node_modules/joi/lib/ref.js","webpack:///./node_modules/joi/lib/schemas.js","webpack:///./node_modules/joi/lib/set.js","webpack:///./node_modules/joi/lib/types/alternatives/index.js","webpack:///./node_modules/joi/lib/types/any/index.js","webpack:///./node_modules/joi/lib/types/any/settings.js","webpack:///./node_modules/joi/lib/types/array/index.js","webpack:///./node_modules/joi/lib/types/binary/index.js","webpack:///./node_modules/joi/lib/types/boolean/index.js","webpack:///./node_modules/joi/lib/types/date/index.js","webpack:///./node_modules/joi/lib/types/func/index.js","webpack:///./node_modules/joi/lib/types/lazy/index.js","webpack:///./node_modules/joi/lib/types/number/index.js","webpack:///./node_modules/joi/lib/types/object/index.js","webpack:///./node_modules/joi/lib/types/string/index.js","webpack:///./node_modules/joi/lib/types/string/ip.js","webpack:///./node_modules/joi/lib/types/string/rfc3986.js","webpack:///./node_modules/joi/lib/types/string/uri.js","webpack:///./node_modules/joi/lib/types/symbol/index.js","webpack:///./node_modules/lru-cache/index.js","webpack:///./node_modules/mime-db/index.js","webpack:///./node_modules/mimos/lib/index.js","webpack:///./node_modules/nigel/lib/index.js","webpack:///./node_modules/object-assign/index.js","webpack:///./node_modules/pez/lib/index.js","webpack:///./node_modules/podium/lib/index.js","webpack:///./node_modules/prop-types/checkPropTypes.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./node_modules/pseudomap/map.js","webpack:///./node_modules/pseudomap/pseudomap.js","webpack:///./node_modules/react-dom/cjs/react-dom-server.node.development.js","webpack:///./node_modules/react-dom/server.js","webpack:///./node_modules/react-dom/server.node.js","webpack:///./node_modules/react/cjs/react.development.js","webpack:///./node_modules/react/index.js","webpack:///./node_modules/shot/lib/index.js","webpack:///./node_modules/shot/lib/request.js","webpack:///./node_modules/shot/lib/response.js","webpack:///./node_modules/shot/lib/symbols.js","webpack:///./node_modules/statehood/lib/index.js","webpack:///./node_modules/subtext/lib/index.js","webpack:///./node_modules/teamwork/lib/index.js","webpack:///./node_modules/topo/lib/index.js","webpack:///./node_modules/vise/lib/index.js","webpack:///./node_modules/wreck/lib/index.js","webpack:///./node_modules/wreck/lib/payload.js","webpack:///./node_modules/wreck/lib/recorder.js","webpack:///./node_modules/wreck/lib/tap.js","webpack:///./node_modules/yallist/yallist.js","webpack:///external \"assert\"","webpack:///external \"crypto\"","webpack:///external \"events\"","webpack:///external \"fs\"","webpack:///external \"http\"","webpack:///external \"https\"","webpack:///external \"net\"","webpack:///external \"os\"","webpack:///external \"path\"","webpack:///external \"punycode\"","webpack:///external \"querystring\"","webpack:///external \"stream\"","webpack:///external \"url\"","webpack:///external \"util\"","webpack:///external \"zlib\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;;AAEa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB,sBAAsB;AACtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,IAAI,IAAqC;AACzC,6BAA6B,mBAAO,CAAC,6FAA4B;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAA4G;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;;;AAIb,IAAI,IAAqC;AACzC;AACA;;AAEA,cAAc,mBAAO,CAAC,gEAAe;AACrC,qBAAqB,mBAAO,CAAC,kFAA2B;;AAExD;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA,kDAAkD;;;AAGlD;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sFAAsF,aAAa;AACnG;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,4FAA4F,eAAe;AAC3G;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sFAAsF,aAAa;AACnG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qOAAqO;AACrO;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;;;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sFAAsF,aAAa;AACnG;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,cAAc;AACzB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,GAAG;AACd;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,0IAA0I,yCAAyC;AACnL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,iBAAiB;AAC5B,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,iBAAiB;AAC5B,WAAW,EAAE;AACb,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;;;AC7rDa;;AAEb,IAAI,KAAqC,EAAE,EAE1C;AACD,mBAAmB,mBAAO,CAAC,qFAA4B;AACvD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA,qGAA0B;AAE1B;IAAgC,8BAAe;IAA/C;;IAIA,CAAC;IAHG,2BAAM,GAAN;QACI,OAAO,wDAAoB,CAAC;IAChC,CAAC;IACL,iBAAC;AAAD,CAAC,CAJ+B,eAAK,CAAC,SAAS,GAI9C;AAJY,gCAAU;;;;;;;;;;;;;;;;;;ACFvB,iGAA0B;AAC1B,iGAAsD;AACtD,mIAAoE;AAEpE,SAAgB,4BAA4B;IACxC,OAAO,2BAAkB,CAAC,8BAAC,uBAAU,OAAG,CAAC;AAC7C,CAAC;AAFD,oEAEC;;;;;;;;;;;;;;;ACND,0DAAqD;AACrD,2DAAqC;AACrC,8EAA4D;AAE5D,SAAgB,UAAU,CAAC,OAAO,EAAE,CAAC;IACjC,IAAM,sBAAsB,GAAG,kCAA4B,EAAE,CAAC;IAC9D,IAAM,YAAY,GAAG,IAAI,oBAAW,EAAE,CAAC;IACvC,IAAM,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IAC1C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3B,IAAM,iBAAiB,GAAG,yBAAY,CAAC,OAAO,CAAC,2BAAc,CAAC,CAAC;IAC/D,IAAM,eAAe,GAAG,iBAAiB,GAAG,2BAAc,CAAC,MAAM,CAAC;IAClE,IAAM,UAAU,GAAG,yBAAY,CAAC,SAAS,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC;IAChE,IAAM,QAAQ,GAAG,yBAAY,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;IACzD,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9B,sBAAsB,CAAC,EAAE,CAAC,MAAM,EAAE,UAAC,KAAK;QACpC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IACH,sBAAsB,CAAC,EAAE,CAAC,KAAK,EAAE;QAC7B,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC5B,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IACH,OAAO,QAAQ,CAAC;AACpB,CAAC;AAlBD,gCAkBC;;;;;;;;;;;;;;;ACtBY,sBAAc,GAAG,aAAa,CAAC;AAE/B,oBAAY,GACzB,mSASqB,sBAAc,yEAG3B,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfT,kGAAwB;AACxB,sEAAwB;AACxB,qGAA0B;AAC1B,8EAA0C;AAE1C,SAAe,WAAW;;;;;;oBAChB,MAAM,GAAG,cAAI,CAAC,MAAM,CAAC;wBACvB,IAAI,EAAE,IAAI;qBACb,CAAC,CAAC;oBAEH,WAAM,MAAM,CAAC,QAAQ,CAAC,eAAK,CAAC;;oBAA5B,SAA4B,CAAC;oBAE7B,MAAM,CAAC,KAAK,CAAC;wBACT,MAAM,EAAE,KAAK;wBACb,IAAI,EAAE,kBAAkB;wBACxB,OAAO,EAAE;4BACL,SAAS,EAAE;gCACP,IAAI,EAAE,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,iBAAiB,CAAC;6BACnD;yBACJ;qBACJ,CAAC,CAAC;oBAEH,MAAM,CAAC,KAAK,CAAC;wBACT,MAAM,EAAE,KAAK;wBACb,IAAI,EAAE,eAAe;wBACrB,OAAO,EAAE;4BACL,SAAS,EAAE;gCACP,IAAI,EAAE,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,WAAW,CAAC;6BAC7C;yBACJ;qBACJ,CAAC,CAAC;oBAEH,MAAM,CAAC,KAAK,CAAC;wBACT,MAAM,EAAE,KAAK;wBACb,IAAI,EAAE,cAAc;wBACpB,OAAO,EAAE;4BACL,IAAI,EAAE,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,6BAA6B,CAAC;yBAC/D;qBACJ,CAAC,CAAC;oBAEH,MAAM,CAAC,KAAK,CAAC;wBACT,MAAM,EAAE,KAAK;wBACb,IAAI,EAAE,WAAW;wBACjB,OAAO,EAAE,uBAAU;qBACtB,CAAC,CAAC;oBAEH,WAAM,MAAM,CAAC,KAAK,EAAE;;oBAApB,SAAoB,CAAC;;;;;CACxB;AAED,WAAW,EAAE,CAAC;;;;;;;;;;;;;ACjDD;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;;AAGA;AACA,2CAA2C;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uDAAuD;;AAEvD;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,UAAU;;;AAGzC;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC5Ka;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,YAAY;AAC1C,0BAA0B,gBAAgB,UAAU;AACpD;;AAEA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA,kEAAkE;AAClE;AACA;;AAEA,oBAAoB;AACpB;AACA;;AAEA;AACA,oCAAoC,YAAY,sBAAsB,IAAI;;;AAG1E;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kBAAkB;AAClB,kBAAkB;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA,6BAA6B,aAAa;AAC1C;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;;;;;;;;;;;AC5Ia;;AAEb;;AAEA,gBAAgB,mBAAO,CAAC,uDAAW;AACnC,iBAAiB,mBAAO,CAAC,yDAAY;AACrC,iBAAiB,mBAAO,CAAC,yDAAY;AACrC,kBAAkB,mBAAO,CAAC,2DAAa;;;AAGvC;;AAEA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClCa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;;AAGA;AACA,8BAA8B,UAAU;;;AAGxC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,+BAA+B,UAAU;;;AAGzC;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;;;;;;;;;;;AClHa;;AAEb;;;AAGA;;AAEA;;;AAGA,mBAAmB;AACnB,cAAc,8BAA8B;AAC5C,gCAAgC,sBAAsB;AACtD,gCAAgC,4BAA4B;AAC5D,kCAAkC;AAClC,UAAU,iBAAiB,iBAAiB,mBAAmB,QAAQ,WAAW;;AAElF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,2CAA2C;;;AAG3C;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD;AACnD,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;;;;;;;;;;;ACjHa;;AAEb;;AAEA,eAAe,mBAAO,CAAC,sBAAQ;;AAE/B,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA,iCAAiC;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,mCAAmC;;AAEnC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACrKa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,mBAAO,CAAC,sBAAQ;;;AAG/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,4BAA4B;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,4BAA4B;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACjIa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,mBAAO,CAAC,sBAAQ;;;AAG/B;;AAEA;;;AAGA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACvDa;;AAEb;;AAEA,gBAAgB,mBAAO,CAAC,oDAAW;AACnC,gBAAgB,mBAAO,CAAC,oDAAW;;;AAGnC;AACA;;AAEA;AACA;;;;;;;;;;;;;ACZa;AACb,+BAA+B;;AAE/B;AACA,0CAA0C;;AAE1C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,6BAA6B;;AAE/D,kCAAkC,8CAA8C;;AAEhF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxDa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,eAAe,uDAAuD;AACtE,+DAA+D;AAC/D,6CAA6C;AAC7C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,4CAA4C,yDAAyD;AACrG;;AAEA,sDAAsD;;AAEtD,iDAAiD,qDAAqD;;AAEtG;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,4CAA4C,8DAA8D;AAC1G;;AAEA;;AAEA,4CAA4C,wDAAwD;AACpG;;AAEA;;AAEA,4CAA4C,uDAAuD;AACnG;;AAEA;;AAEA,iDAAiD,+DAA+D;;AAEhH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,4CAA4C,4DAA4D;AACxG;;AAEA;;AAEA,4CAA4C,gEAAgE;AAC5G;;AAEA;;AAEA,4CAA4C,4DAA4D;AACxG;;AAEA;;AAEA,4CAA4C,uDAAuD;AACnG;;AAEA;;AAEA,4CAA4C,2DAA2D;AACvG;;AAEA;;AAEA,4CAA4C,6DAA6D;AACzG;;AAEA;;AAEA,4CAA4C,iEAAiE;AAC7G;;AAEA;;AAEA,4CAA4C,6DAA6D;AACzG;;AAEA;;AAEA,4CAA4C,yDAAyD;AACrG;;AAEA;;AAEA,4CAA4C,mEAAmE;AAC/G;;AAEA;;AAEA,4CAA4C,kEAAkE;AAC9G;;AAEA;;AAEA,4CAA4C,gEAAgE;AAC5G;;AAEA;;AAEA,4CAA4C,qDAAqD;AACjG;;AAEA;;AAEA,4CAA4C,sDAAsD;AAClG;;AAEA;;AAEA,4CAA4C,qDAAqD;AACjG;;AAEA;;AAEA,4CAA4C,+DAA+D;AAC3G;;AAEA;;AAEA,4CAA4C,mEAAmE;AAC/G;;AAEA;;AAEA,4CAA4C,8DAA8D;AAC1G;;AAEA;;AAEA,4CAA4C,sDAAsD;AAClG;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA,6CAA6C,sBAAsB;AACnE;;AAEA,wCAAwC,yBAAyB;AACjE;;;;;;;;;;;;;ACpba;;AAEb;;AAEA,eAAe,mBAAO,CAAC,sBAAQ;;AAE/B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA,oDAAoD;;AAEpD;AACA;;;AAGA,mDAAmD;;AAEnD;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA,kGAAkG;;AAElG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,aAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACpJa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;;AAE3B,cAAc,mBAAO,CAAC,iDAAS;AAC/B,gBAAgB,mBAAO,CAAC,qDAAW;;;AAGnC;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,0EAA0E;;AAE1E,qBAAqB;AACrB,kBAAkB;AAClB,uBAAuB,kCAAkC;;AAEzD;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA,2BAA2B;AAC3B;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,YAAY;AACZ;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,uEAAuE;AACvE;AACA,iCAAiC;AACjC;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B;;AAE/B;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,sBAAsB,OAAO;AAChD;;AAEA;;AAEA,8BAA8B;AAC9B;AACA;AACA,2BAA2B,mBAAmB;AAC9C;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,KAAK;;AAEL;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACzYa;;AAEb;;;AAGA;;AAEA;;;AAGA;;AAEA;AACA,eAAe,MAAM,OAAO;AAC5B,eAAe,QAAQ;AACvB,eAAe;AACf,gBAAgB,MAAM;AACtB,UAAU;AACV;;AAEA;;AAEA,qDAAqD;AACrD,+BAA+B,EAAE;;AAEjC;AACA;AACA;;AAEA,4BAA4B,wBAAwB,GAAG,mCAAmC,EAAE,GAAG;AAC/F,kCAAkC,yCAAyC,MAAM,SAAS,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG;;AAE5G,gCAAgC,WAAW,GAAG,4CAA4C,EAAE,GAAG;AAC/F;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,gDAAgD,gCAAgC;;AAEhF;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACnDa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;;AAGA;;AAEA,sBAAsB,kBAAkB;AACxC,uBAAuB,iBAAiB,QAAQ;AAChD,0BAA0B,cAAc,WAAW,kBAAkB;AACrE,uBAAuB;AACvB,uBAAuB,kBAAkB,kBAAkB;AAC3D,0BAA0B,cAAc;AACxC;;;AAGA;;AAEA;AACA,SAAS,eAAe;AACxB,SAAS,eAAe,YAAY;AACpC,SAAS,iBAAiB,UAAU;AACpC,SAAS,iBAAiB,WAAW,EAAE;AACvC;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA,6CAA6C;;AAE7C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,mBAAmB,wBAAwB;AAC3C,6BAA6B,UAAU;AACvC;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA,+BAA+B,mBAAmB;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gBAAgB;AAChB;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA,oBAAoB;AACpB;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;;;;;;;;;;;;;ACxPa;;AAEb;;AAEA,gBAAgB,mBAAO,CAAC,sDAAU;AAClC,aAAa,mBAAO,CAAC,8CAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;;AAGA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA,8EAA8E;AAC9E;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iDAAiD;AACjD;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC7La;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;;AAGA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA,2EAA2E;AAC3E;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA,4CAA4C;AAC5C;;AAEA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;;;AAGA;;AAEA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA,eAAe;AACf;;AAEA;AACA;;;AAGA;;AAEA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA;;AAEA,oCAAoC;AACpC;;;AAGA;;AAEA;AACA;;;;;;;;;;;;;AClIa;;AAEb;;AAEA,eAAe,mBAAO,CAAC,qDAAU;AACjC,eAAe,mBAAO,CAAC,qDAAU;;;AAGjC;;AAEA;;;AAGA;;;AAGA;;;;;;;;;;;;;AChBa;;AAEb;;;AAGA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;;;AAGA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5Da;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,YAAY,mBAAO,CAAC,4CAAK;;AAEzB,gBAAgB,mBAAO,CAAC,uDAAW;;;AAGnC;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA,yCAAyC;AACzC,oDAAoD;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;;AAGA,uDAAuD,wBAAwB;;AAE/E;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,uDAAuD,yCAAyC;AAChG;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,iBAAiB;;AAEjB;;AAEA,yDAAyD;AACzD;;AAEA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;;AAEA,iDAAiD;AACjD,+BAA+B;;AAE/B;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,0EAA0E;AAC1E,wCAAwC;AACxC;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oDAAoD;AACpD;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,6BAA6B;AAC5D;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,6BAA6B;AACpE;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,yDAAyD,2DAA2D;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,0CAA0C,WAAW,EAAE,IAAI,eAAe,EAAE,IAAI,iBAAiB,eAAe;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,0FAA0F;AAC1F,wHAAwH;AACxH;;AAEA,8GAA8G;AAC9G,6HAA6H;;AAE7H;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC;AACA;;AAEA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C;AAC9C;;AAEA,6BAA6B;AAC7B;AACA;;AAEA;AACA;;AAEA,aAAa;AACb;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC7ba;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;;AAGA;AACA;;AAEA,2CAA2C;AAC3C;AACA;AACA;AACA;;AAEA;AACA,+CAA+C;;AAE/C;AACA,0BAA0B,6BAA6B;;;AAGvD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA,0EAA0E;AAC1E,qGAAqG;AACrG,qGAAqG;;AAErG;;AAEA;AACA;;AAEA,2GAA2G;AAC3G;AACA;;;AAGA,yDAAyD;;AAEzD;AACA,0EAA0E,mBAAmB,0BAA0B,gBAAgB;;AAEvI;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC5Ha;;AAEb;;AAEA,eAAe,mBAAO,CAAC,sBAAQ;;AAE/B,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA,4CAA4C;AAC5C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnFa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,eAAe,mBAAO,CAAC,kDAAQ;AAC/B,aAAa,mBAAO,CAAC,8CAAM;;AAE3B,eAAe,mBAAO,CAAC,mDAAU;;;AAGjC;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,gDAAgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,sEAAsE;;AAEtE;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sGAAsG,0BAA0B;;AAEhI;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2BAA2B;AAC3B;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,+BAA+B,+CAA+C;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,sCAAsC,2EAA2E;AACjH;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,0GAA0G,0BAA0B;;AAEpI;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,wDAAwD,4CAA4C;AACpG;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iGAAiG,cAAc;;AAE/G;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+FAA+F,qCAAqC;AACpI;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,IAAI,IAAI;;AAEtB;AACA;AACA;AACA;;AAEA;AACA;;;AAGA,4EAA4E;;AAE5E;;AAEA;;AAEA;AACA;AACA,yEAAyE,6BAA6B;AACtG,uBAAuB;AACvB;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACjhBa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,kBAAM;;AAE3B,eAAe,mBAAO,CAAC,kDAAQ;AAC/B,eAAe,mBAAO,CAAC,kDAAQ;AAC/B,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;;AAEA,oGAAoG,SAAS;AAC7G,mFAAmF,SAAS;AAC5F;AACA;AACA;AACA;;AAEA;;AAEA,oGAAoG,SAAS;AAC7G,mFAAmF,SAAS;AAC5F;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,+DAA+D,SAAS;AACxE;AACA;AACA;;;;;;;;;;;;;AC9Ga;;AAEb;;AAEA,WAAW,mBAAO,CAAC,cAAI;;AAEvB,YAAY,mBAAO,CAAC,4CAAK;AACzB,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;;AAGA;;;AAGA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA,0DAA0D;;AAE1D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB;AACnB,CAAC;;;AAGD,yDAAyD,gCAAgC;;;AAGzF;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,4BAA4B;AAC/E,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB;AACnB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,kCAAkC;AAC/F;AACA;AACA,KAAK;AACL;AACA,4DAA4D,6BAA6B;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;;;AAGA;AACA;AACA;AACA;AACA,CAAC;AACD,cAAc,qBAAqB,EAAE;;;AAGrC;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB;AACnB,CAAC;;;AAGD;AACA;AACA;AACA;AACA,6CAA6C,6CAA6C;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB;AACvB,KAAK;AACL;AACA,CAAC;AACD;AACA;;;AAGA;AACA;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C,KAAK;AACL,CAAC;;;;;;;;;;;;;ACxZY;;AAEb;;AAEA,aAAa,mBAAO,CAAC,kBAAM;AAC3B,cAAc,mBAAO,CAAC,oBAAO;AAC7B,WAAW,mBAAO,CAAC,cAAI;AACvB,aAAa,mBAAO,CAAC,kBAAM;;AAE3B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,eAAe,mBAAO,CAAC,kDAAQ;AAC/B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,eAAe,mBAAO,CAAC,kDAAQ;AAC/B,qBAAqB,mBAAO,CAAC,gEAAe;AAC5C,cAAc,mBAAO,CAAC,gDAAO;AAC7B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,cAAc,mBAAO,CAAC,gDAAO;AAC7B,eAAe,mBAAO,CAAC,kDAAQ;AAC/B,kBAAkB,mBAAO,CAAC,wDAAW;;AAErC,aAAa,mBAAO,CAAC,+CAAQ;AAC7B,oBAAoB,mBAAO,CAAC,6DAAe;AAC3C,eAAe,mBAAO,CAAC,mDAAU;AACjC,aAAa,mBAAO,CAAC,+CAAQ;AAC7B,YAAY,mBAAO,CAAC,6CAAO;AAC3B,gBAAgB,mBAAO,CAAC,qDAAW;AACnC,gBAAgB,mBAAO,CAAC,qDAAW;AACnC,cAAc,mBAAO,CAAC,iDAAS;AAC/B,gBAAgB,mBAAO,CAAC,qDAAW;;;AAGnC;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,SAAS,yDAAyD;AAClE,SAAS,oFAAoF;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA,yBAAyB;;AAEzB,eAAe,iBAAiB;;AAEhC;AACA;;AAEA;AACA;AACA,gCAAgC;AAChC;AACA,+BAA+B;AAC/B,4BAA4B,qDAAqD;AACjF,+BAA+B;AAC/B;AACA;AACA;AACA,yCAAyC;AACzC;AACA,iCAAiC;AACjC,0BAA0B;AAC1B;AACA,gCAAgC,oGAAoG,UAAU,UAAU;AACxJ,4BAA4B;AAC5B,+BAA+B;AAC/B;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA;AACA;;AAEA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,6BAA6B,YAAY,aAAa,YAAY,aAAa;AAC/E;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,sBAAsB;AACtD;;AAEA;AACA;AACA,gCAAgC,0BAA0B;AAC1D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC,uBAAuB,GAAG;AAC1D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mCAAmC,qBAAqB,kCAAkC;AAC1F;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B;;AAE5B,kDAAkD;;AAElD;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mDAAmD,8BAA8B,GAAG,gCAAgC,cAAc,gBAAgB;AAClJ,qDAAqD,8BAA8B,GAAG,kCAAkC,cAAc,gBAAgB;;AAEtJ;AACA;AACA;AACA;;AAEA,0BAA0B;;AAE1B;;AAEA;;AAEA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,qDAAqD,uBAAuB;;AAE5E;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6CAA6C;;AAE7C;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;;AAEA;AACA,qEAAqE,OAAO;AAC5E;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB;;AAErB;AACA,4BAA4B,yCAAyC;AACrE;;AAEA,0BAA0B,6BAA6B;AACvD;AACA;;;AAGA,wCAAwC;;AAExC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,YAAY;AACZ;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA,WAAW,YAAY;;AAEvB;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpqBa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;;AAE3B,iBAAiB;;;AAGjB;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA,qBAAqB,mBAAO,CAAC,iDAAS;;AAEtC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,GAAG;AACpB;AACA;AACA;AACA;AACA;;AAEA,iDAAiD,gBAAgB;AACjE;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB;AAChB;;AAEA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oFAAoF;;AAEpF;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,qFAAqF,eAAe;AACpG;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AClNa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACjGa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;;AAGA;;AAEA;;AAEA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;;AAEA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA,yEAAyE,gCAAgC;;AAEzG;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,8FAA8F,uCAAuC;AACrI;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA,mDAAmD;AACnD;AACA,iBAAiB;AACjB;AACA,mDAAmD,EAAE;AACrD;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACxKa;;AAEb;;AAEA,eAAe,mBAAO,CAAC,sBAAQ;;AAE/B,aAAa,mBAAO,CAAC,8CAAM;;AAE3B,iBAAiB,mBAAO,CAAC,uDAAY;;;AAGrC;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,gGAAgG;AAChG;AACA;AACA;;AAEA;AACA;;AAEA,0EAA0E,kBAAkB;AAC5F;;AAEA;AACA,qCAAqC;AACrC,sDAAsD;AACtD;;AAEA;AACA;AACA;;AAEA;;AAEA,iCAAiC;AACjC;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,6BAA6B,yBAAyB;AACtD;AACA;;AAEA;AACA,yBAAyB,cAAc;AACvC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,mHAAmH;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B;AAC9B,0DAA0D;AAC1D,qDAAqD;AACrD;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,6CAA6C,6BAA6B;AAC1E;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC9Ma;;AAEb;;AAEA,eAAe,mBAAO,CAAC,mDAAU;;;AAGjC;;AAEA;;;AAGA;;AAEA;;;;;;;;;;;;;ACda;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;;AAE3B,eAAe,mBAAO,CAAC,mDAAU;;;AAGjC;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,aAAa,OAAO,IAAI;;AAExB;AACA;AACA;AACA,gEAAgE;AAChE;AACA;;AAEA;;AAEA;AACA;AACA;AACA,qDAAqD,mBAAmB;;AAExE;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,2GAA2G,aAAa;AACxH;;AAEA,8BAA8B,gBAAgB;AAC9C;;AAEA;AACA;;AAEA;AACA;AACA,+GAA+G,aAAa;AAC5H;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA,mEAAmE;AACnE;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC9Ha;;AAEb;;AAEA,YAAY,mBAAO,CAAC,gBAAK;;AAEzB,aAAa,mBAAO,CAAC,8CAAM;AAC3B,eAAe,mBAAO,CAAC,kDAAQ;AAC/B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,eAAe,mBAAO,CAAC,kDAAQ;;AAE/B,aAAa,mBAAO,CAAC,+CAAQ;AAC7B,iBAAiB,mBAAO,CAAC,uDAAY;AACrC,iBAAiB,mBAAO,CAAC,uDAAY;;;AAGrC;;AAEA;AACA,wCAAwC,6BAA6B;AACrE;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA,4BAA4B;AAC5B,8BAA8B;AAC9B,4BAA4B;AAC5B;AACA,uGAAuG;AACvG,gCAAgC;AAChC,gEAAgE;AAChE;AACA;AACA,kCAAkC;;AAElC,gEAAgE,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,4EAA4E,EAAE;AAC9E,sBAAsB;AACtB,+BAA+B;AAC/B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,mEAAmE;;AAEnE;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,oFAAoF;AACpF;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D;;AAE5D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2DAA2D;;AAE3D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,+EAA+E,cAAc;;AAE7F;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,8BAA8B;AAC9B;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB,yDAAyD;AACzD;;AAEA,gDAAgD;AAChD;AACA;AACA;;AAEA;;AAEA;AACA,gDAAgD;;AAEhD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2DAA2D;;AAE3D;AACA;AACA;AACA;;AAEA;;AAEA;AACA,+BAA+B;AAC/B;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,0CAA0C;;AAE1C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kCAAkC;;AAElC,uBAAuB;;AAEvB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B,iEAAiE;AAC7F;AACA,kCAAkC,gEAAgE;AAClG;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gCAAgC,iCAAiC;AACjE;;AAEA;;AAEA;AACA;AACA;;;AAGA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS,GAAG,aAAa,GAAG,4BAA4B;;AAEvE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA,6BAA6B,UAAU;;AAEvC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA,6DAA6D,mBAAmB;AAChF;AACA;;;AAGA;;AAEA;AACA;;;;;;;;;;;;;AC9jBa;;AAEb;;AAEA,eAAe,mBAAO,CAAC,sBAAQ;;AAE/B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,eAAe,mBAAO,CAAC,kDAAQ;AAC/B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,eAAe,mBAAO,CAAC,kDAAQ;;AAE/B,gBAAgB,mBAAO,CAAC,qDAAW;;;AAGnC;;AAEA;AACA,wCAAwC,6BAA6B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,6CAA6C;;AAE7C;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;AAC7B,2BAA2B;AAC3B,qCAAqC;AACrC,iCAAiC;AACjC;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oCAAoC;;AAEpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iCAAiC;AAC1E;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC;;AAEnC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,wDAAwD;AACxD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kDAAkD;AAClD;AACA;;AAEA;;AAEA,kDAAkD;AAClD;AACA;;AAEA;;AAEA,oDAAoD;AACpD;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,yDAAyD;AACzD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;;AAEA,qFAAqF;AACrF;AACA;;AAEA;AACA;AACA,6DAA6D,+BAA+B;AAC5F;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,+CAA+C;AAC/C;AACA,0BAA0B;AAC1B;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvtBa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,eAAe,mBAAO,CAAC,kDAAQ;AAC/B,eAAe,mBAAO,CAAC,kDAAQ;AAC/B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,YAAY,mBAAO,CAAC,4CAAK;AACzB,gBAAgB,mBAAO,CAAC,oDAAS;;AAEjC,aAAa,mBAAO,CAAC,+CAAQ;AAC7B,eAAe,mBAAO,CAAC,mDAAU;AACjC,aAAa,mBAAO,CAAC,+CAAQ;AAC7B,YAAY,mBAAO,CAAC,6CAAO;AAC3B,gBAAgB,mBAAO,CAAC,qDAAW;AACnC,gBAAgB,mBAAO,CAAC,qDAAW;AACnC,iBAAiB,mBAAO,CAAC,uDAAY;AACrC,gBAAgB,mBAAO,CAAC,qDAAW;AACnC,mBAAmB,mBAAO,CAAC,2DAAc;;;AAGzC;;AAEA;;;AAGA;;AAEA,2CAA2C;;AAE3C;AACA;;AAEA;;AAEA,2BAA2B,aAAa,GAAG,WAAW;AACtD;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,uCAAuC;;AAEvC;;AAEA,iGAAiG;AACjG;AACA,oDAAoD,sBAAsB;AAC1E;;AAEA;;AAEA;AACA,mGAAmG;;AAEnG;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D;AAC5D,oDAAoD;;AAEpD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,6CAA6C,qFAAqF;AAClmDAAmD;AACnD;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,sBAAsB;AACjC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,2GAA2G,2BAA2B;AACtI;;;AAGA;;AAEA;AACA,oCAAoC;;AAEpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,gBAAgB;;AAE/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0GAA0G,6BAA6B;AACvI;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC3ea;;AAEb;;;AAGA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;;AAEA;AACA,oDAAoD;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA,uEAAuE,kBAAkB;AACzF;;AAEA;AACA,+DAA+D,kBAAkB;AACjF;;AAEA;AACA,gDAAgD,eAAe,kBAAkB;AACjF;;AAEA;AACA,0DAA0D,kBAAkB;AAC5E;;AAEA;AACA,+DAA+D,kBAAkB;AACjF;;AAEA;AACA,gEAAgE,kBAAkB;AAClF;AACA;;;;;;;;;;;;;ACxFa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,YAAY,mBAAO,CAAC,4CAAK;AACzB,aAAa,mBAAO,CAAC,8CAAM;;AAE3B,eAAe,mBAAO,CAAC,mDAAU;AACjC,aAAa,mBAAO,CAAC,+CAAQ;AAC7B,aAAa,mBAAO,CAAC,+CAAQ;AAC7B,YAAY,mBAAO,CAAC,6CAAO;AAC3B,gBAAgB,mBAAO,CAAC,yDAAiB;AACzC,gBAAgB,mBAAO,CAAC,qDAAW;AACnC,cAAc,mBAAO,CAAC,iDAAS;;;AAG/B;;AAEA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,6BAA6B;AAC7B,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,iDAAiD;;AAEjD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2DAA2D,KAAK,eAAe,aAAa;AAC5F,kEAAkE,KAAK,yCAAyC,aAAa;;AAE7H;AACA;AACA;AACA,mDAAmD,sCAAsC,+BAA+B,aAAa;AACrI;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,sCAAsC,gDAAgD;;AAEtF;AACA,2CAA2C,sBAAsB;AACjE;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC;;AAElC;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA,oDAAoD;;AAEpD,8CAA8C;AAC9C;AACA,sCAAsC;AACtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qCAAqC;;AAErC;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,wCAAwC;;AAExC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB,qBAAqB,UAAU,0BAA0B;AACzD,qBAAqB,UAAU,UAAU,0BAA0B,EAAE,yBAAyB;AAC9F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gDAAgD;AAChD;;AAEA;AACA,kDAAkD,kGAAkG;AACpJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iCAAiC;;AAEjC;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;AAC7B;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACthBa;;AAEb;;AAEA,iBAAiB,mBAAO,CAAC,sDAAU;;;AAGnC;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACxCa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,eAAe,mBAAO,CAAC,kDAAQ;AAC/B,aAAa,mBAAO,CAAC,8CAAM;;AAE3B,iBAAiB,mBAAO,CAAC,uDAAY;;;AAGrC;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iDAAiD,YAAY;AAC7D;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kDAAkD,6DAA6D;AAC/G;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5Ma;;AAEb;;AAEA,aAAa,mBAAO,CAAC,kBAAM;;AAE3B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,eAAe,mBAAO,CAAC,kDAAQ;AAC/B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,iBAAiB,mBAAO,CAAC,sDAAU;;AAEnC,eAAe,mBAAO,CAAC,mDAAU;AACjC,iBAAiB,mBAAO,CAAC,uDAAY;;;AAGrC;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4EAA4E;AAC5E;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,0CAA0C;;AAE1C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,gEAAgE;;AAEhE;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA,WAAW,wBAAwB;AACnC,gBAAgB;AAChB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,qFAAqF;AACrF;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,yCAAyC;AACzC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;;;;;;;;;;;AC7Wa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,YAAY,mBAAO,CAAC,4CAAK;;;AAGzB;;AAEA;;;AAGA;;AAEA;AACA;AACA,QAAQ,IAAI;;AAEZ;AACA,qBAAqB;AACrB;AACA;AACA,+DAA+D;;AAE/D;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA,oCAAoC;;AAEpC;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,uGAAuG,OAAO;AAC9G,yDAAyD,mCAAmC;AAC5F,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gHAAgH,gEAAgE;AAChL;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe;AACf;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2GAA2G,4CAA4C;AACvJ;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACjMa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,YAAY,mBAAO,CAAC,4CAAK;;;AAGzB;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACrHa;;AAEb;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA,mBAAmB,kBAAkB;;AAErC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA,mBAAmB,kBAAkB;;AAErC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC;;AAEA;AACA,sDAAsD;AACtD;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;AACA,gBAAgB;AAChB,eAAe;AACf,eAAe;AACf,iBAAiB;AACjB,kBAAkB;AAClB,kBAAkB;AAClB,mBAAmB;AACnB,oBAAoB;AACpB,kBAAkB;AAClB,iBAAiB;AACjB;;;AAGA;;AAEA;;AAEA,oBAAoB,SAAS;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACvKY;;AAEb;;AAEA,eAAe,mBAAO,CAAC,sBAAQ;AAC/B,eAAe,mBAAO,CAAC,sBAAQ;AAC/B,aAAa,mBAAO,CAAC,kBAAM;AAC3B,aAAa,mBAAO,CAAC,kBAAM;;AAE3B,eAAe,mBAAO,CAAC,mDAAU;;;AAGjC;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC;AACtC,8BAA8B;AAC9B;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA,mBAAmB;AACnB;AACA;;AAEA;;AAEA,2BAA2B;AAC3B;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,kDAAkD;AAClD,uCAAuC;AACvC,6CAA6C;AAC7C;AACA;;;AAGA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA;;AAEA;;AAEA,2BAA2B;AAC3B;AACA;;AAEA,mDAAmD;AACnD,+CAA+C;AAC/C,8CAA8C;AAC9C;AACA;;;AAGA;;AAEA;;AAEA,sBAAsB;AACtB,gDAAgD;AAChD;;AAEA,0BAA0B;;AAE1B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C;AAC1C;;AAEA;AACA;AACA,oBAAoB;AACpB;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,gBAAgB;AACvC;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B;;AAE5B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;;AAEA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB,SAAS;;AAET;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA,2BAA2B,wCAAwC;AACnE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uEAAuE;;AAEvE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA,8BAA8B,IAAI,IAAI;;AAEtC;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;;AAGA;;;AAGA;;AAEA,QAAQ,aAAoB;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA,iCAAiC;AACjC,gEAAgE,EAAE;AAClE;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA,iDAAiD,WAAW,EAAE;;AAE9D,mDAAmD,gBAAgB,IAAI;;AAEvE,kEAAkE;AAClE;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;;AAGA,8BAA8B;;;AAG9B;;;AAGA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,2BAA2B;AAC3B;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;;;;;;;;;;;ACz7Ba;;AAEb;;AAEA,aAAa,mBAAO,CAAC,kBAAM;;AAE3B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,eAAe,mBAAO,CAAC,kDAAQ;AAC/B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,YAAY,mBAAO,CAAC,4CAAK;;AAEzB,aAAa,mBAAO,CAAC,gDAAQ;AAC7B,WAAW,mBAAO,CAAC,4CAAM;;;AAGzB;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;;AAEA;;AAEA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA,wDAAwD;;AAExD,2EAA2E;AAC3E;AACA,iHAAiH;AACjH;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC;AACpC;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA,yDAAyD;AACzD;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;;;;;;;;;;;ACnPa;;AAEb;;AAEA,eAAe,mBAAO,CAAC,sBAAQ;;AAE/B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,eAAe,mBAAO,CAAC,kDAAQ;AAC/B,iBAAiB,mBAAO,CAAC,oDAAW;;;AAGpC;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA,8DAA8D,mBAAmB;AACjF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wCAAwC,6BAA6B,EAAE;AACxG;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,aAAa;AAC1C;AACA;;;AAGA;;;;;;;;;;;;;AC1Ha;;AAEb;;AAEA,aAAa,mBAAO,CAAC,kBAAM;;AAE3B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,eAAe,mBAAO,CAAC,kDAAQ;AAC/B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,YAAY,mBAAO,CAAC,4CAAK;;AAEzB,aAAa,mBAAO,CAAC,gDAAQ;AAC7B,WAAW,mBAAO,CAAC,4CAAM;;;AAGzB;;AAEA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;;AAEA;AACA,+CAA+C,8BAA8B;AAC7E;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,6CAA6C,+EAA+E;AAC5H;;;AAGA;;AAEA;;AAEA;AACA,oCAAoC,iBAAiB;AACrD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,qFAAqF;AACrF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iDAAiD,qBAAqB,EAAE,UAAU;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,wEAAwE;;AAExE;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9Pa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,kBAAM;;AAE3B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,eAAe,mBAAO,CAAC,kDAAQ;AAC/B,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAiC,uCAAuC;AACxE;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA,wCAAwC,kCAAkC;AAC1E;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,wCAAwC,kBAAkB,EAAE;AAC7F;AACA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA,6BAA6B,wBAAwB;;AAErD;;AAEA;AACA,uBAAuB;AACvB;;AAEA;AACA;;;AAGA;;AAEA,eAAe,mBAAO,CAAC,cAAI;AAC3B,eAAe,kCAAkC;AACjD;AACA;AACA;;AAEA,eAAe,uCAAuC;AACtD;AACA;AACA;;;;;;;;;;;;;ACrHa;;AAEb;;AAEA,kBAAkB,mBAAO,CAAC,0DAAa;AACvC,aAAa,mBAAO,CAAC,gDAAQ;AAC7B,aAAa,mBAAO,CAAC,gDAAQ;AAC7B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,YAAY,mBAAO,CAAC,4CAAK;;;AAGzB;;AAEA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA,SAAS,mBAAO,CAAC,0DAAiB;AAClC;;AAEA;;AAEA;AACA,uFAAuF;;AAEvF;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACnDa;;AAEb;;AAEA,eAAe,mBAAO,CAAC,sBAAQ;;AAE/B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,kBAAkB,mBAAO,CAAC,wDAAW;;;AAGrC;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,oBAAoB,4BAA4B;AAChD,oBAAoB,4BAA4B;AAChD,eAAe;AACf;;;AAGA;;AAEA,+BAA+B;AAC/B;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,YAAY;AACZ;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA,2CAA2C,4BAA4B;AACvE,4CAA4C,aAAa,KAAK;;AAE9D;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA,4CAA4C,aAAa,KAAK;AAC9D;;AAEA;;AAEA,gEAAgE;;AAEhE;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,WAAW,iBAAiB;;AAE5B;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA,4CAA4C,aAAa,KAAK,MAAM,wBAAwB;AAC5F;;AAEA;;AAEA,gEAAgE;;AAEhE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;ACtXa;;AAEb;;AAEA,iBAAiB,mBAAO,CAAC,0BAAU;AACnC,aAAa,mBAAO,CAAC,kBAAM;;AAE3B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,8BAA8B,QAAQ;AACtC;AACA;;AAEA,mBAAmB,qBAAqB;AACxC;AACA;;AAEA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;;AAEA;;AAEA;AACA;AACA,CAAC;;AAED;AACA,mDAAmD,EAAE;AACrD,uBAAuB,IAAI;AAC3B;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,YAAY;AACzB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,eAAe;AAC1B;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,MAAM,EAAE;AACR,MAAM,EAAE;AACR,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,MAAM,EAAE;AACR;AACA,MAAM,EAAE;AACR,MAAM,EAAE;AACR,MAAM,EAAE;AACR,MAAM,EAAE;AACR;AACA,WAAW,yBAAyB;AACpC,YAAY;AACZ;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,cAAc;AACd,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,yFAAyF;AACzF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;;AAEA;AACA;AACA;AACA,uDAAuD;AACvD,uDAAuD;AACvD,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D,6DAA6D;AAC7D,6DAA6D;AAC7D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvuDAAuD;AACvD,uDAAuD;AACvD,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D,6DAA6D;AAC7D,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD,oDAAoD;AACpD;AACA,4DAA4D;AAC5D,yDAAyD;AACzD;AACA;AACA,gDAAgD;AAChD,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,gDAAgD;AAChD,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,gDAAgD;AAChD,gDAAgD;;AAEhD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2DAA2D;AAC3D,2DAA2D;AAC3D,2DAA2D;AAC3D;AACA;AACA;AACA,2DAA2D;AAC3D,2DAA2D;AAC3D,2DAA2D;AAC3D,2DAA2D;AAC3D,2DAA2D;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oEAAoE;AACpE,oEAAoE;AACpE,oEAAoE;AACpE;AACA;AACA;AACA;AACA,oEAAoE;AACpE,oEAAoE;AACpE,oEAAoE;AACpE,oEAAoE;AACpE,oEAAoE;AACpE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD,oDAAoD;AACpD;AACA;AACA;AACA,oDAAoD;AACpD,oDAAoD;AACpD,oDAAoD;AACpD,oDAAoD;AACpD,oDAAoD;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yDAAyD;AACzD,yDAAyD;AACzD,yDAAyD;AACzD;AACA;AACA;AACA;AACA,yDAAyD;AACzD,yDAAyD;AACzD,yDAAyD;AACzD,yDAAyD;AACzD,yDAAyD;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;;AAEA;AACA,CAAC;;;AAGD;;;;;;;;;;;;;ACp5Ca;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,YAAY,mBAAO,CAAC,4CAAO;;AAE3B;;;AAGA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;;;;;;;;;;;AC/Da;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,iBAAiB,mBAAO,CAAC,sDAAY;;;AAGrC;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B,kBAAkB;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,kCAAkC,UAAU;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,EAAE,UAAU,EAAE;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,EAAE,SAAS,KAAK,EAAE;;AAEnD;AACA;AACA;AACA,SAAS;AACT;;AAEA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,uBAAuB,wBAAwB;AAC/C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC,kBAAkB;AACrD;AACA,qDAAqD,wCAAwC;AAC7F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB;AACzD;AACA,iCAAiC,SAAS,SAAS,+CAA+C;AAClG;AACA;;AAEA;AACA,mCAAmC,wBAAwB;AAC3D;AACA,yCAAyC,WAAW,GAAG,gCAAgC;AACvF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6CAA6C;;AAE7C,yCAAyC,QAAQ,OAAO;AACxD;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;;AAEA;AACA,kCAAkC;AAClC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mGAAmG,WAAW,aAAa;AAC3H;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAiD,YAAY,GAAG,GAAG,GAAG,SAAS;AAC/E,uDAAuD,YAAY,GAAG,GAAG,GAAG,SAAS,EAAE,YAAY,IAAI,GAAG,kBAAkB,SAAS;AACrI,4DAA4D,GAAG,GAAG,YAAY,GAAG,GAAG,GAAG,SAAS;AAChG;;AAEA,iBAAiB,QAAQ,IAAI,YAAY;;AAEzC,mBAAmB,yBAAyB;AAC5C;AACA,qBAAqB,QAAQ,KAAK,IAAI,IAAI,wBAAwB;AAClE;;AAEA;;AAEA;AACA;;;;;;;;;;;;;AC1Wa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,YAAY,mBAAO,CAAC,8DAAa;AACjC,aAAa,mBAAO,CAAC,8CAAQ;AAC7B,eAAe,mBAAO,CAAC,kDAAU;AACjC,aAAa,mBAAO,CAAC,gEAAc;AACnC,YAAY,mBAAO,CAAC,4CAAO;AAC3B,iBAAiB,mBAAO,CAAC,0EAAsB;;;AAG/C;;AAEA;AACA,kBAAkB,mBAAO,CAAC,gFAAsB;AAChD,WAAW,mBAAO,CAAC,kEAAe;AAClC,aAAa,mBAAO,CAAC,sEAAiB;AACtC,YAAY,mBAAO,CAAC,oEAAgB;AACpC,UAAU,mBAAO,CAAC,gEAAc;AAChC,UAAU,mBAAO,CAAC,gEAAc;AAChC,YAAY,mBAAO,CAAC,oEAAgB;AACpC,YAAY,mBAAO,CAAC,oEAAgB;AACpC,YAAY,mBAAO,CAAC,oEAAgB;AACpC,YAAY,mBAAO,CAAC,oEAAgB;AACpuCAAuC,QAAQ,GAAG,iBAAiB;AACnE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,8CAA8C;;AAE9C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C;;AAEA;AACA;AACA;;AAEA;;AAEA,gEAAgE;AAChE;AACA,6CAA6C;;AAE7C;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gCAAgC;AAChC;;AAEA,4BAA4B;AAC5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gCAAgC;AAChC;;AAEA,4BAA4B;AAC5B;AACA;;AAEA;AACA,+BAA+B,4BAA4B;AAC3D;AACA;AACA;AACA;AACA;;AAEA,qEAAqE;;AAErE;AACA;AACA;;AAEA;AACA;;AAEA,uCAAuC,qBAAqB;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gGAAgG,WAAW,KAAK,UAAU;AAC1H;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;;AAEA,mBAAmB,mBAAO,CAAC,wDAAiB;;AAE5C;AACA;;;AAGA;;;;;;;;;;;;;AC9ba;;AAEb;;;AAGA;;AAEA;;;AAGA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iCAAiC,KAAK;AACtC,4CAA4C,QAAQ;AACpD,oCAAoC,KAAK,iBAAiB,QAAQ;AAClE,+CAA+C,QAAQ,kBAAkB,QAAQ;AACjF,sDAAsD,eAAe;AACrE,oDAAoD,aAAa;AACjE,kDAAkD,aAAa,OAAO,eAAe;AACrF,iCAAiC,KAAK;AACtC,4CAA4C,QAAQ;AACpD,sCAAsC,OAAO;AAC7C,mDAAmD,OAAO;AAC1D,gCAAgC,OAAO;AACvC,gCAAgC,KAAK,iBAAiB,QAAQ;AAC9D,sCAAsC,KAAK,4CAA4C,OAAO;AAC9F,4BAA4B,KAAK;AACjC;AACA,4BAA4B,KAAK;AACjC,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,iCAAiC,OAAO;AACxC,8CAA8C,OAAO;AACrD,2BAA2B,OAAO;AAClC,KAAK;AACL;AACA;AACA,sEAAsE,QAAQ;AAC9E;AACA,iDAAiD,OAAO;AACxD,+CAA+C,OAAO;AACtD,oCAAoC,OAAO;AAC3C,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA,SAAS;AACT,4BAA4B,KAAK;AACjC,KAAK;AACL;AACA;AACA,wCAAwC,GAAG;AAC3C,4DAA4D,GAAG;AAC/D,2DAA2D,GAAG;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,2BAA2B,QAAQ,kBAAkB,QAAQ;AAC7D,mCAAmC,OAAO;AAC1C,gDAAgD,OAAO;AACvD,6BAA6B,OAAO;AACpC,4BAA4B,QAAQ;AACpC,oBAAoB,eAAe,2BAA2B,eAAe;AAC7E,uBAAuB,eAAe,kCAAkC,eAAe;AACvF,iDAAiD,iBAAiB;AAClE,4DAA4D,iBAAiB;AAC7E,4CAA4C,iBAAiB;AAC7D,yBAAyB,mBAAmB,8BAA8B,mBAAmB;AAC7F,oBAAoB,eAAe,uCAAuC,iBAAiB;AAC3F,sBAAsB,KAAK,+BAA+B,KAAK,cAAc,SAAS;AACtF;AACA,8CAA8C,MAAM,kFAAkF,IAAI;AAC1I,8CAA8C,MAAM,6CAA6C,IAAI;AACrG;AACA,oDAAoD,MAAM,iFAAiF,IAAI;AAC/I,oDAAoD,MAAM,4CAA4C,IAAI;AAC1G;AACA,SAAS;AACT,yCAAyC,MAAM;AAC/C;AACA,KAAK;AACL;AACA;AACA,gDAAgD,OAAO;AACvD,8CAA8C,OAAO;AACrD,mCAAmC,OAAO;AAC1C,yCAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA,6CAA6C,OAAO;AACpD,4BAA4B,KAAK;AACjC,2CAA2C,UAAU;AACrD;AACA,KAAK;AACL;AACA;AACA,wCAAwC,OAAO;AAC/C,qDAAqD,OAAO;AAC5D,kCAAkC,OAAO;AACzC;AACA;AACA;AACA,iCAAiC,QAAQ,yCAAyC,SAAS;AAC3F,iCAAiC,QAAQ,uBAAuB,MAAM;AACtE;AACA,qCAAqC,QAAQ,kCAAkC,SAAS;AACxF,qCAAqC,QAAQ,yBAAyB,MAAM;AAC5E;AACA,SAAS;AACT;AACA;AACA;AACA,2EAA2E,QAAQ;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,MAAM;AAC9D;AACA;AACA;AACA;AACA,4BAA4B,KAAK;AACjC,iDAAiD,MAAM;AACvD,kFAAkF,SAAS,UAAU,MAAM;AAC3G,KAAK;AACL;AACA;AACA,+BAA+B,KAAK;AACpC;AACA;;;;;;;;;;;;;ACpKa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;;AAGA;;AAEA;;AAEA,yCAAyC;;AAEzC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACpDa;;AAEb;;AAEA,YAAY,mBAAO,CAAC,gDAAS;;;AAG7B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,gDAAgD;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACxBY;;AAEb,YAAY,mBAAO,CAAC,4CAAO;;;AAG3B;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,iCAAiC;AACjC;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjLa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,YAAY,mBAAO,CAAC,yDAAQ;AAC5B,aAAa,mBAAO,CAAC,kDAAY;AACjC,YAAY,mBAAO,CAAC,gDAAW;;;AAG/B;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAiC;AACjC;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,iDAAiD,iBAAiB;AACtF;;AAEA,gBAAgB;AAChB;;AAEA;;AAEA;AACA;;AAEA;;AAEA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA,qCAAqC,eAAe;AACpD;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;;;;;;;;;;;;;AChMa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,iBAAiB,mBAAO,CAAC,gEAAY;AACrC,YAAY,mBAAO,CAAC,gDAAW;AAC/B,eAAe,mBAAO,CAAC,sDAAc;AACrC,wBAAwB;AACxB;;;AAGA;;AAEA;AACA,SAAS,mBAAO,CAAC,gDAAW;AAC5B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA,uBAAuB,mBAAO,CAAC,kDAAY;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB;AACzB;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,wBAAwB,mBAAO,CAAC,wDAAe;AAC/C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B,0BAA0B;AACrD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,mBAAmB;AAC1D;AACA;;AAEA,uCAAuC,mBAAmB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,yBAAyB,2BAA2B;AACpD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,wDAAwD,UAAU;AAClE;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,uCAAuC,mBAAO,CAAC,2EAAiB;;AAEhE,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,0BAA0B;;AAE1B;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iEAAiE,4BAA4B;AAC7F;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oEAAoE,iBAAiB;AACrF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,sFAAsF,yCAAyC,uBAAuB,GAAG;AACzJ;AACA,sCAAsC;;AAEtC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,8FAA8F,yCAAyC,uBAAuB,GAAG;AACjK;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2DAA2D,qCAAqC,uBAAuB,GAAG;AAC1H;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;;AAEA,uBAAuB,wBAAwB;AAC/C;AACA,0BAA0B;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;AAGA,2CAA2C;;AAE3C;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACx3Ba;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA,gCAAgC;;AAEhC;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AClCa;;AAEb;;AAEA,YAAY,mBAAO,CAAC,yDAAQ;AAC5B,aAAa,mBAAO,CAAC,kDAAY;AACjC,YAAY,mBAAO,CAAC,gDAAW;AAC/B,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;;AAEA;;AAEA;AACA,oEAAoE,gDAAgD;;AAEpH;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,2BAA2B,mCAAmC;AAC9D,8EAA8E,EAAE;;AAEhF;AACA,wGAAwG,sBAAsB,GAAG,wCAAwC;AACzK;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,gDAAgD;;AAEhI;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,0CAA0C,GAAG,wCAAwC;AAC5J;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,6CAA6C,GAAG,wCAAwC;AACjK;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4EAA4E,gDAAgD;;AAE5H;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,QAAQ;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,gDAAgD;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8GAA8G,0CAA0C,GAAG,wCAAwC;AACnM;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oGAAoG,sBAAsB,GAAG,wCAAwC;;AAErK;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,2BAA2B,iCAAiC;AAC5D;AACA;AACA;;AAEA;AACA;;AAEA,2BAA2B,8BAA8B;AACzD;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,0DAA0D,iBAAiB;AAC3E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kDAAkD,eAAe;AACjE,SAAS;AACT;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,0DAA0D,iBAAiB;AAC3E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kDAAkD,eAAe;AACjE,SAAS;AACT;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,0DAA0D,iBAAiB;AAC3E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qDAAqD,eAAe;AACpE,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2BAA2B,kBAAkB;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4EAA4E,6BAA6B,GAAG,mCAAmC;AAC/I;AACA;AACA,8EAA8E,cAAc,GAAG,mCAAmC;AAClI;AACA;AACA;AACA,4EAA4E,gBAAgB,GAAG,mCAAmC;AAClI;AACA;;;AAGA;;AAEA;;AAEA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;;AAGA;;;;;;;;;;;;;AC5pBa;;AAEb;;AAEA,YAAY,mBAAO,CAAC,yDAAQ;AAC5B,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,mDAAmD,eAAe;AAClE,SAAS;AACT;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,mDAAmD,eAAe;AAClE,SAAS;AACT;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,sDAAsD,eAAe;AACrE,SAAS;AACT;;AAEA;;;AAGA;;;;;;;;;;;;;ACnGa;;AAEb;;AAEA,YAAY,mBAAO,CAAC,yDAAQ;AAC5B,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;AACA,SAAS,mBAAO,CAAC,gDAAW;AAC5B;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;;;;;;ACjGa;;AAEb;;AAEA,YAAY,mBAAO,CAAC,yDAAQ;AAC5B,YAAY,mBAAO,CAAC,gDAAW;AAC/B,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;AAEA,gCAAgC,EAAE,QAAQ,EAAE,MAAM,EAAE,yHAAyH,EAAE;AAC/K;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,sBAAsB;AAC1D;AACA;AACA;AACA;;AAEA,qDAAqD,KAAK;AAC1D;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yDAAyD,gBAAgB;AACzE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qDAAqD,6BAA6B;AAClF,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;;;;;;;;;;;;;AClLa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,mBAAmB,mBAAO,CAAC,+DAAW;AACtC,YAAY,mBAAO,CAAC,gDAAW;;;AAG/B;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,uDAAuD,IAAI;AAC3D,SAAS;AACT;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,0DAA0D,IAAI;AAC9D,SAAS;AACT;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,0DAA0D,IAAI;AAC9D,SAAS;AACT;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;;;;;;;;;;;;;ACzFa;;AAEb;;AAEA,YAAY,mBAAO,CAAC,yDAAQ;AAC5B,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;ACpDa;;AAEb;;AAEA,YAAY,mBAAO,CAAC,yDAAQ;AAC5B,YAAY,mBAAO,CAAC,gDAAW;AAC/B,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,2EAA2E,QAAQ;AACnF;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,uDAAuD,gBAAgB;AACvE;;AAEA;AACA;AACA;;AAEA,wDAAwD,wBAAwB;AAChF,SAAS;AACT;;AAEA;;AAEA;;AAEA,6FAA6F,QAAQ;AACrG,SAAS;AACT;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,wDAAwD,QAAQ;AAChE,SAAS;AACT;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,wDAAwD,QAAQ;AAChE,SAAS;AACT;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yDAAyD,eAAe;AACxE,SAAS;;AAET;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,wDAAwD,QAAQ;AAChE;;AAEA;AACA,SAAS;AACT;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,2DAA2D,iBAAiB;AAC5E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uDAAuD,0BAA0B;AACjF,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;;;;;;;;;;;;;ACxLa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,YAAY,mBAAO,CAAC,yDAAQ;AAC5B,eAAe,mBAAO,CAAC,sDAAc;AACrC,aAAa,mBAAO,CAAC,kDAAY;;;AAGjC;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,gCAAgC;AACvD;;AAEA;AACA;AACA;;AAEA,+BAA+B,uBAAuB;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kFAAkF,yCAAyC;AAC3H;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kFAAkF,yCAAyC;AAC3H;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mCAAmC,8BAA8B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4EAA4E,mCAAmC;AAC/G;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4EAA4E,mCAAmC;AAC/G;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,2BAA2B,iCAAiC;AAC5D;AACA;AACA;;AAEA;;AAEA,oCAAoC;AACpC;AACA;AACA,kEAAkE,iEAAiE;;AAEnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,uBAAuB;AAClD;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,iCAAiC;AAChE;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yEAAyE,wBAAwB;AACjG;AACA;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;;AAEA;;AAEA,uBAAuB,qCAAqC;AAC5D;AACA,gHAAgH,iFAAiF;AACjM;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,gCAAgC;AAC3D;;AAEA;AACA;AACA,qCAAqC,uCAAuC;AAC5E;AACA;AACA;;AAEA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB,GAAG,gCAAgC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,sDAAsD,QAAQ;AAC9D,SAAS;AACT;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,mDAAmD,QAAQ;AAC3D,SAAS;AACT;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,mDAAmD,QAAQ;AAC3D,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,uFAAuF;AACvF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sCAAsC,+BAA+B;AACrE;AACA;AACA,sCAAsC,gCAAgC;AACtE;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,uBAAuB,gCAAgC;AACvD;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iFAAiF;AACjF;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2BAA2B,gCAAgC;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,uBAAuB,kBAAkB;AACzC;AACA;;AAEA;AACA,sCAAsC,mBAAmB;AACzD;AACA;;AAEA;;AAEA;;AAEA;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B,iCAAiC;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,2BAA2B,iCAAiC;AAC5D;AACA;AACA,+CAA+C,iEAAiE;AAChH;AACA;AACA,+CAA+C,mEAAmE;AAClH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,qCAAqC,cAAc;;AAEnD;AACA;AACA;AACA;;AAEA,4CAA4C;AAC5C;AACA;AACA,sDAAsD,qBAAqB;AAC3E,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,oDAAoD,sBAAsB;AAC1E,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;;;;;;;;;;;;;AC/5Ba;;AAEb;;AAEA,YAAY,mBAAO,CAAC,gBAAK;AACzB,aAAa,mBAAO,CAAC,8CAAM;AAC3B,YAAY;AACZ,YAAY,mBAAO,CAAC,yDAAQ;AAC5B,YAAY,mBAAO,CAAC,gDAAW;AAC/B,gBAAgB,mBAAO,CAAC,2DAAS;AACjC,YAAY,mBAAO,CAAC,yDAAO;AAC3B,WAAW,mBAAO,CAAC,uDAAM;;AAEzB;;AAEA;AACA;AACA;AACA;AACA,UAAU,KAAK;AACf,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,+BAA+B,qCAAqC;AACpE;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,wBAAwB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,MAAM;AAClC;AACA;;AAEA;AACA;AACA,0FAA0F,QAAQ;AAClG;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0EAA0E,QAAQ;AAClF,SAAS;AACT;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,gDAAgD,kEAAkE;AAClH,SAAS;AACT;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,wDAAwD,QAAQ;AAChE,SAAS;AACT;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,qDAAqD,QAAQ;AAC7D,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,iCAAiC,mBAAO,CAAC,oDAAS;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;AAEvB,qDAAqD,QAAQ;AAC7D,SAAS;AACT;;AAEA,qBAAqB;;AAErB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,6DAA6D,iDAAiD;AAC9G;;AAEA,kDAAkD,8BAA8B;AAChF,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sFAAsF,eAAe;;AAErG;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,+BAA+B,8BAA8B;AAC7D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,mEAAmE,QAAQ;AAC3E;;AAEA;AACA,mEAAmE,8BAA8B;AACjG;;AAEA,mDAAmD,QAAQ;AAC3D,SAAS;AACT;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uDAAuD,QAAQ;AAC/D,SAAS;AACT;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6CAA6C,eAAe,EAAE,gBAAgB,EAAE,OAAO,2BAA2B,UAAU,EAAE,OAAO,mCAAmC,UAAU,EAAE,aAAa,GAAG,MAAM;;AAE1M;;AAEA;;AAEA;AACA,wDAAwD,QAAQ;AAChE;;AAEA;AACA;AACA,wDAAwD,QAAQ;AAChE;;AAEA;AACA,SAAS;AACT;;AAEA,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,gEAAgE,QAAQ;AACxE;AACA;AACA;;AAEA,mDAAmD,QAAQ;AAC3D,SAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA,6BAA6B;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,EAAE,oBAAoB,EAAE,kBAAkB,EAAE;AAC5E;AACA,kCAAkC,EAAE,oBAAoB,EAAE,qBAAqB,EAAE;;AAEjF;;AAEA;AACA;AACA;;AAEA,sDAAsD,QAAQ;AAC9D,SAAS;AACT;;AAEA,+BAA+B;;AAE/B,uCAAuC;;AAEvC;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,EAAE,oBAAoB,EAAE,kBAAkB,EAAE;AAC5E,kCAAkC,EAAE,oBAAoB,EAAE,qBAAqB,EAAE;;AAEjF;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uDAAuD,QAAQ;AAC/D,SAAS;AACT;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,wDAAwD,QAAQ;AAChE,SAAS;AACT;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,yDAAyD,cAAc;AACvE,SAAS;;AAET;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,yDAAyD,QAAQ;AACjE,SAAS;;AAET;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,yDAAyD,QAAQ;AACjE,SAAS;;AAET;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wDAAwD,QAAQ;AAChE,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,2DAA2D,iBAAiB;AAC5E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uDAAuD,oCAAoC;AAC3F,SAAS;AACT;AACA;;;AAGA;;AAEA;AACA;AACA,CAAC;;;AAGD;;AAEA;AACA;AACA,CAAC;;;AAGD;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;;;;;;;;;;;;;AC7rBa;;AAEb;;AAEA,gBAAgB,mBAAO,CAAC,iEAAW;;;AAGnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;ACrDa;;AAEb;;;AAGA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA;;AAEA;AACA;AACA,0CAA0C;AAC1C,2CAA2C;AAC3C,2CAA2C;AAC3C;AACA;;AAEA;AACA;AACA,2CAA2C;AAC3C,2CAA2C;AAC3C,2CAA2C;AAC3C,2CAA2C;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4EAA4E;AAC5E;AACA,4CAA4C;;AAE5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C,2CAA2C;AAC3C,2CAA2C;AAC3C,2CAA2C;AAC3C,2CAA2C;AAC3C;AACA;;AAEA;AACA;AACA;AACA,8DAA8D,EAAE;;AAEhE;AACA,wBAAwB;AACxB,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,IAAI;AACrC;AACA,yCAAyC,EAAE;AAC3C,4CAA4C,EAAE;AAC9C,4DAA4D,EAAE;AAC9D,8CAA8C,IAAI,gCAAgC,EAAE;AACpF,4CAA4C,IAAI,gCAAgC,EAAE;AAClF,4CAA4C,IAAI;AAChD,6CAA6C,IAAI;AACjD,8CAA8C,IAAI;AAClD,8CAA8C,IAAI;AAClD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mEAAmE,MAAM;;AAEzE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC;AACxC,wCAAwC;AACxC,wCAAwC;AACxC,wCAAwC;AACxC,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8DAA8D;;AAE9D;AACA;AACA;AACA,iGAAiG;;AAEjG;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;;;;;;;;;;;;AC1Na;;AAEb;;AAEA,gBAAgB,mBAAO,CAAC,iEAAW;;;AAGnC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;;;;;;AC7Ca;;AAEb;;AAEA,aAAa,mBAAO,CAAC,kBAAM;;AAE3B,YAAY,mBAAO,CAAC,yDAAQ;AAC5B,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iGAAiG,uBAAuB;AACxH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AC5FY;;AAEZ;;AAEA;AACA;AACA,UAAU,mBAAO,CAAC,kDAAW;AAC7B,WAAW,mBAAO,CAAC,kBAAM;;AAEzB;AACA,cAAc,mBAAO,CAAC,kDAAS;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH,oBAAoB,iCAAiC;AACrD;AACA,CAAC;;AAED;AACA,oBAAoB,sBAAsB;AAC1C;AACA,CAAC;;AAED;AACA,oBAAoB,+BAA+B;AACnD;AACA,CAAC;;AAED;AACA;AACA,wCAAwC,iBAAiB;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,iBAAiB;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,WAAW;;AAEX;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACldA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,iDAAW;;;;;;;;;;;;;ACVvB;;AAEb;;AAEA,aAAa,mBAAO,CAAC,kBAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,eAAe,mBAAO,CAAC,gDAAS;;;AAGhC;;AAEA;;;AAGA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,qCAAqC;;;;;;;;;;;;;AC9FxB;;AAEb;;AAEA,eAAe,mBAAO,CAAC,sBAAQ;;AAE/B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B,iDAAiD;AACjD;;AAEA;AACA,mBAAmB,UAAU,OAAO;AACpC;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA,uBAAuB,sCAAsC,GAAG;AAChE;AACA;AACA;;AAEA;AACA;;AAEA,2CAA2C;AAC3C;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA,uBAAuB,iCAAiC;;AAExD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA,mBAAmB,sCAAsC,OAAO;AAChE;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;;AAEA,4BAA4B;;AAE5B;AACA,SAAS;AACT,KAAK;AACL;;AAEA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2EAA2E;AAC3E;AACA,cAAc,2BAA2B;AACzC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;;;AAGA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;;;;;;;;;;;;;ACrMA;AACA;AACA;AACA;AACA;;AAEa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB,sBAAsB;AACtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACzFa;;AAEb;;AAEA,eAAe,mBAAO,CAAC,sBAAQ;;AAE/B,YAAY,mBAAO,CAAC,4CAAK;AACzB,aAAa,mBAAO,CAAC,8CAAM;AAC3B,gBAAgB,mBAAO,CAAC,oDAAS;AACjC,aAAa,mBAAO,CAAC,8CAAM;AAC3B,cAAc,mBAAO,CAAC,gDAAO;;;AAG7B;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;AAC7B,KAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mEAAmE;AACnE;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,sFAAsF;AACtF;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,qCAAqC;AACrC;;;AAGA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA,mDAAmD;AACnD;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC1Ya;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,YAAY,mBAAO,CAAC,4CAAK;;;AAGzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA,KAAK;;AAEL;AACA;;;AAGA,yEAAyE;;AAEzE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA,yCAAyC;AACzC;AACA;;AAEA;AACA;AACA,+CAA+C,KAAK;AACpD;AACA;;AAEA,sCAAsC;AACtC;;AAEA;AACA,gDAAgD;AAChD;AACA,SAAS;AACT,KAAK;AACL;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8CAA8C;AAC9C;AACA,SAAS;AACT,KAAK;AACL;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA,wCAAwC,KAAK;AAC7C;AACA,gIAAgI,iBAAiB;AACjJ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gDAAgD;AAChD,uBAAuB,qBAAqB;AAC5C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD;AACpD;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA,2BAA2B;AAC3B;;AAEA;;AAEA;AACA;AACA,wCAAwC,KAAK;AAC7C,sLAAsL,kDAAkD;;AAExO;AACA;;AAEA;AACA;;;AAGA;;AAEA,4DAA4D,WAAW;;AAEvE;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA,6DAA6D,KAAK;AAClE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA,6DAA6D,KAAK;AAClE;AACA;AACA;;;AAGA;;AAEA,6DAA6D,KAAK;AAClE;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA,4CAA4C,iBAAiB;AAC7D;;;AAGA;;AAEA;AACA;;;;;;;;;;;;;ACxUA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,IAAI,IAAqC;AACzC,6BAA6B,mBAAO,CAAC,yFAA4B;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAA4G;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA;;;;;;;;;;;;ACXA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD,mBAAmB,mBAAO,CAAC,0DAAa;AACxC;;;;;;;;;;;;ACRA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH,sBAAsB;AACtB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;;;AAIb,IAAI,IAAqC;AACzC;AACA;;AAEA,cAAc,mBAAO,CAAC,4DAAe;AACrC,YAAY,mBAAO,CAAC,4CAAO;AAC3B,qBAAqB,mBAAO,CAAC,8EAA2B;AACxD,aAAa,mBAAO,CAAC,sBAAQ;;AAE7B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sFAAsF,aAAa;AACnG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sFAAsF,aAAa;AACnG;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,4FAA4F,eAAe;AAC3G;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sFAAsF,aAAa;AACnG;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA,kDAAkD;AAClD;;AAEA;;;AAGA;;;AAGA;;;AAGA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,wBAAwB,EAAE,8BAA8B;AACxD;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4KAA4K,YAAY;AACxL;AACA;AACA;AACA;AACA,uLAAuL,+BAA+B;AACtN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;;AAE5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA,SAAS;AACT;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AACliKAAiK,iBAAiB;AAClL,OAAO;AACP,iKAAiK,iBAAiB,wDAAwD,mBAAmB,gBAAgB,8BAA8B;AAC3S;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+GAA+G,GAAG;AAClH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,0CAA0C,qBAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yBAAyB,wBAAwB;AACjD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mDAAmD,0CAA0C,0DAA0D,EAAE;;AAEzJ,iDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,0CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;;AAEA;AACA;;AAEA;AACA;;AAEA,wEAAwE;AACxE;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;;;ACvlGa;;AAEb,iBAAiB,mBAAO,CAAC,8DAAe;;;;;;;;;;;;;ACF3B;;AAEb,IAAI,KAAqC,EAAE,EAE1C;AACD,mBAAmB,mBAAO,CAAC,qHAA4C;AACvE;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;;;AAIb,IAAI,IAAqC;AACzC;AACA;;AAEA,cAAc,mBAAO,CAAC,4DAAe;AACrC,qBAAqB,mBAAO,CAAC,8EAA2B;;AAExD;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA,kDAAkD;;;AAGlD;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sFAAsF,aAAa;AACnG;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,4FAA4F,eAAe;AAC3G;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sFAAsF,aAAa;AACnG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qOAAqO;AACrO;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;;;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sFAAsF,aAAa;AACnG;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,cAAc;AACzB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,GAAG;AACd;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,0IAA0I,yCAAyC;AACnL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,iBAAiB;AAC5B,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,iBAAiB;AAC5B,WAAW,EAAE;AACb,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;;;AC7rDa;;AAEb,IAAI,KAAqC,EAAE,EAE1C;AACD,mBAAmB,mBAAO,CAAC,iFAA4B;AACvD;;;;;;;;;;;;;ACNa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,YAAY,mBAAO,CAAC,4CAAK;;AAEzB,gBAAgB,mBAAO,CAAC,qDAAW;AACnC,iBAAiB,mBAAO,CAAC,uDAAY;AACrC,gBAAgB,mBAAO,CAAC,qDAAW;;;AAGnC;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;;AAGD;;AAEA,8CAA8C,eAAe;;AAE7D,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;;;;;;;;;;;;;ACvEa;;AAEb;;AAEA,eAAe,mBAAO,CAAC,sBAAQ;AAC/B,YAAY,mBAAO,CAAC,gBAAK;AACzB,aAAa,mBAAO,CAAC,kBAAM;;AAE3B,gBAAgB,mBAAO,CAAC,qDAAW;;;AAGnC;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;;AAEA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gDAAgD;AAChD;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;;;;;;;;;;;;;ACjKa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,kBAAM;AAC3B,eAAe,mBAAO,CAAC,sBAAQ;;AAE/B,gBAAgB,mBAAO,CAAC,qDAAW;;;AAGnC;;AAEA;;;AAGA;;AAEA;;AAEA,eAAe,+DAA+D;AAC9E,sBAAsB,4BAA4B;AAClD,2BAA2B;AAC3B;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;;AAEA,6CAA6C,iBAAiB;;AAE9D;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA,oBAAoB;AACpB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;ACxHa;;AAEb;;;AAGA;;AAEA;;;AAGA;;;;;;;;;;;;;ACVa;;AAEb;;AAEA,oBAAoB,mBAAO,CAAC,gCAAa;;AAEzC,aAAa,mBAAO,CAAC,8CAAM;AAC3B,eAAe,mBAAO,CAAC,kDAAQ;AAC/B,kBAAkB,mBAAO,CAAC,wDAAW;AACrC,aAAa,mBAAO,CAAC,8CAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,YAAY,mBAAO,CAAC,4CAAK;;;AAGzB;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,0EAA0E;AAC1E;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA,sEAAsE;AACtE;;AAEA;AACA;AACA;;;AAGA;;;AAGA;;AAEA;AACA,+DAA+D,WAAW;;AAE1E;AACA;AACA,uCAAuC,iBAAiB,EAAE;AAC1D;AACA,KAAK;AACL;AACA,mCAAmC;AACnC,uCAAuC;AACvC,KAAK;AACL;AACA,qCAAqC,KAAK,eAAe,KAAK;AAC9D,6BAA6B;AAC7B;;AAEA;AACA,6CAA6C,UAAU;;;AAGvD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA,sBAAsB;;AAEtB;AACA;AACA;AACA;;AAEA,qBAAqB,wEAAwE,OAAO,GAAG;AACvG;;AAEA;;AAEA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,uBAAuB,kBAAkB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,oBAAoB;AACvC;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,2CAA2C;;AAE3C;AACA,kCAAkC,mDAAmD;AACrF;;AAEA;AACA,kCAAkC;AAClC;;AAEA;AACA,kCAAkC;AAClC;;AAEA;AACA,kCAAkC,YAAY,sBAAsB;AACpE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC;AAClC;;AAEA;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA,0CAA0C;AAC1C;;AAEA;AACA,KAAK;;AAEL;AACA;;;;;;;;;;;;;AC5fa;;AAEb;;AAEA,WAAW,mBAAO,CAAC,cAAI;AACvB,WAAW,mBAAO,CAAC,cAAI;AACvB,oBAAoB,mBAAO,CAAC,gCAAa;AACzC,eAAe,mBAAO,CAAC,sBAAQ;AAC/B,aAAa,mBAAO,CAAC,kBAAM;;AAE3B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,gBAAgB,mBAAO,CAAC,oDAAS;AACjC,aAAa,mBAAO,CAAC,8CAAM;AAC3B,YAAY,mBAAO,CAAC,4CAAK;AACzB,cAAc,mBAAO,CAAC,gDAAO;;;AAG7B;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAwB;;AAExB;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,kCAAkC;AAClC;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,0CAA0C;AAC1C;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,8CAA8C,uDAAuD;AACrG;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA,kCAAkC;AAClC;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,qCAAqC,uDAAuD;AAC5F;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,qEAAqE;AACrE;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT,KAAK;AACL;;;AAGA;;AAEA;;AAEA;AACA;;AAEA,gEAAgE,6BAA6B;AAC7F;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,gCAAgC;AAChC;AACA;AACA;AACA,uBAAuB,cAAc;;AAErC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd,mDAAmD;;AAEnD,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC;AACpC,iFAAiF,iEAAiE;;AAElJ;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA,iDAAiD,cAAc;AAC/D;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC,6BAA6B;AAC7D;;AAEA;AACA,0DAA0D;AAC1D,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC/aa;;AAEb;;;AAGA;;AAEA;;;AAGA,kEAAkE;;AAElE;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACtCa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA,4CAA4C;AAC5C;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA,6BAA6B;AAC7B;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;;AAEA;AACA,uBAAuB,2BAA2B;AAClD;AACA;;AAEA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;;AAEA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;;AAEA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,mBAAmB,wBAAwB,OAAO;AAClD;;AAEA;AACA;AACA,2BAA2B,wBAAwB,OAAO;AAC1D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;;;;;;;;;;;;ACnOa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;;;AAG3B;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,uCAAuC;AAC1D;;AAEA;AACA,cAAc,gCAAgC;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC1Ka;;AAEb;;AAEA,eAAe,mBAAO,CAAC,sBAAQ;AAC/B,aAAa,mBAAO,CAAC,kBAAM;AAC3B,cAAc,mBAAO,CAAC,oBAAO;AAC7B,eAAe,mBAAO,CAAC,sBAAQ;AAC/B,YAAY,mBAAO,CAAC,gBAAK;AACzB,aAAa,mBAAO,CAAC,kBAAM;;AAE3B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;;AAE3B,gBAAgB,mBAAO,CAAC,sDAAW;AACnC,iBAAiB,mBAAO,CAAC,wDAAY;AACrC,YAAY,mBAAO,CAAC,8CAAO;;;AAG3B;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA,yCAAyC;;AAEzC;;AAEA;;AAEA;AACA,gCAAgC,uBAAuB;AACvD,8BAA8B,uBAAuB;AACrD,iDAAiD,kDAAkD;AACnG;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2DAA2D,GAAG;AAC9D,0CAA0C;;AAE1C;AACA;;;AAGA,wEAAwE;;AAExE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sFAAsF;;AAEtF;AACA,iBAAiB,0BAA0B;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAsB;AACtB;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4DAA4D;AAC5D;;AAEA;;AAEA,0FAA0F,uBAAuB;;AAEjH;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,uBAAuB;AAChE;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA,6DAA6D;;AAE7D;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT,KAAK;AACL;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,yCAAyC;;AAEzC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iCAAiC,6BAA6B;;AAE9D;;AAEA,0BAA0B;AAC1B;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,+CAA+C,iBAAiB,EAAE;AAClE;AACA;;AAEA;AACA,2DAA2D,iBAAiB,EAAE,qCAAqC,iBAAiB,EAAE;;AAEtI;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA,gFAAgF;;AAEhF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,eAAe,GAAG,kBAAkB,IAAI,mCAAmC;AACjH;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA,kDAAkD,kBAAkB;AACpE;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;;;;;;;;;;;;AC5oBa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,eAAe,mBAAO,CAAC,sBAAQ;;;AAG/B;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC1Ca;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,aAAa,mBAAO,CAAC,8CAAM;AAC3B,eAAe,mBAAO,CAAC,sBAAQ;;;AAG/B;;AAEA;;;AAGA;;AAEA;;AAEA,4BAA4B;AAC5B;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5Ca;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8CAAM;AAC3B,eAAe,mBAAO,CAAC,sBAAQ;AAC/B,gBAAgB,mBAAO,CAAC,sDAAW;;;AAGnC;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;;;;;;;;;;;ACjCA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,yCAAyC,OAAO;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,iBAAiB;AACpE;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,0BAA0B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,0BAA0B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA,+BAA+B,iBAAiB;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,6BAA6B;AAClE;AACA;AACA,QAAQ,2BAA2B;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,2BAA2B;AAC1E;AACA;AACA,QAAQ,6BAA6B;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;ACjXA,mC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,iC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./main.ts\");\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          )\n\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/** @license React v16.5.2\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar _assign = require('object-assign');\nvar checkPropTypes = require('prop-types/checkPropTypes');\n\n// TODO: this is special because it gets imported during build.\n\nvar ReactVersion = '16.5.2';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\n\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_PLACEHOLDER_TYPE = hasSymbol ? Symbol.for('react.placeholder') : 0xead1;\n\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n\n// Exports ReactDOM.createRoot\n\n\n// Experimental error-boundary API that can recover from errors within a single\n// render phase\n\n// Suspense\nvar enableSuspense = false;\n// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:\n\n\n// In some cases, StrictMode should also double-render lifecycles.\n// This can be confusing for tests though,\n// And it can be bad for performance in production.\n// This feature flag can be used to control the behavior:\n\n\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n// replay the begin phase of a failed component inside invokeGuardedCallback.\n\n\n// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\n\n\n// Warn about legacy context API\n\n\n// Gather advanced timing metrics for Profiler subtrees.\n\n\n// Trace which interactions trigger each commit.\n\n\n// Only used in www builds.\n\n\n// Only used in www builds.\n\n\n// React Fire: prevent the value and checked attributes from syncing\n// with their related DOM properties\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function () {};\n\n{\n  validateFormat = function (format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error = void 0;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\n// Relying on the `invariant()` implementation lets us\n// preserve the format and params in the www builds.\n\n/**\n * Forked from fbjs/warning:\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n *\n * Only change is we use console.warn instead of console.error,\n * and do nothing when 'console' is not supported.\n * This really simplifies the code.\n * ---\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar lowPriorityWarning = function () {};\n\n{\n  var printWarning = function (format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.warn(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  lowPriorityWarning = function (condition, format) {\n    if (format === undefined) {\n      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nvar lowPriorityWarning$1 = lowPriorityWarning;\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warningWithoutStack = function () {};\n\n{\n  warningWithoutStack = function (condition, format) {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    if (format === undefined) {\n      throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (args.length > 8) {\n      // Check before the condition to catch violations early.\n      throw new Error('warningWithoutStack() currently supports at most 8 arguments.');\n    }\n    if (condition) {\n      return;\n    }\n    if (typeof console !== 'undefined') {\n      var _args$map = args.map(function (item) {\n        return '' + item;\n      }),\n          a = _args$map[0],\n          b = _args$map[1],\n          c = _args$map[2],\n          d = _args$map[3],\n          e = _args$map[4],\n          f = _args$map[5],\n          g = _args$map[6],\n          h = _args$map[7];\n\n      var message = 'Warning: ' + format;\n\n      // We intentionally don't use spread (or .apply) because it breaks IE9:\n      // https://github.com/facebook/react/issues/13610\n      switch (args.length) {\n        case 0:\n          console.error(message);\n          break;\n        case 1:\n          console.error(message, a);\n          break;\n        case 2:\n          console.error(message, a, b);\n          break;\n        case 3:\n          console.error(message, a, b, c);\n          break;\n        case 4:\n          console.error(message, a, b, c, d);\n          break;\n        case 5:\n          console.error(message, a, b, c, d, e);\n          break;\n        case 6:\n          console.error(message, a, b, c, d, e, f);\n          break;\n        case 7:\n          console.error(message, a, b, c, d, e, f, g);\n          break;\n        case 8:\n          console.error(message, a, b, c, d, e, f, g, h);\n          break;\n        default:\n          throw new Error('warningWithoutStack() currently supports at most 8 arguments.');\n      }\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      var argIndex = 0;\n      var _message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      throw new Error(_message);\n    } catch (x) {}\n  };\n}\n\nvar warningWithoutStack$1 = warningWithoutStack;\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + '.' + callerName;\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n    warningWithoutStack$1(false, \"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar emptyObject = {};\n{\n  Object.freeze(emptyObject);\n}\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n        return undefined;\n      }\n    });\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\n\n/**\n * Convenience component with default shallow equality check for sCU.\n */\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n  {\n    Object.seal(refObject);\n  }\n  return refObject;\n}\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null,\n  currentDispatcher: null\n};\n\nvar BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\nvar describeComponentFrame = function (name, source, ownerName) {\n  var sourceInfo = '';\n  if (source) {\n    var path = source.fileName;\n    var fileName = path.replace(BEFORE_SLASH_RE, '');\n    {\n      // In DEV, include code for a common special case:\n      // prefer \"folder/index.js\" instead of just \"index.js\".\n      if (/^index\\./.test(fileName)) {\n        var match = path.match(BEFORE_SLASH_RE);\n        if (match) {\n          var pathBeforeSlash = match[1];\n          if (pathBeforeSlash) {\n            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n            fileName = folderName + '/' + fileName;\n          }\n        }\n      }\n    }\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n};\n\nvar Resolved = 1;\n\n\n\n\nfunction refineResolvedThenable(thenable) {\n  return thenable._reactStatus === Resolved ? thenable._reactResult : null;\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n  {\n    if (typeof type.tag === 'number') {\n      warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_ASYNC_MODE_TYPE:\n      return 'AsyncMode';\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n    case REACT_PLACEHOLDER_TYPE:\n      return 'Placeholder';\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return 'Context.Consumer';\n      case REACT_PROVIDER_TYPE:\n        return 'Context.Provider';\n      case REACT_FORWARD_REF_TYPE:\n        var renderFn = type.render;\n        var functionName = renderFn.displayName || renderFn.name || '';\n        return type.displayName || (functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef');\n    }\n    if (typeof type.then === 'function') {\n      var thenable = type;\n      var resolvedThenable = refineResolvedThenable(thenable);\n      if (resolvedThenable) {\n        return getComponentName(resolvedThenable);\n      }\n    }\n  }\n  return null;\n}\n\nvar ReactDebugCurrentFrame = {};\n\nvar currentlyValidatingElement = null;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    currentlyValidatingElement = element;\n  }\n}\n\n{\n  // Stack implementation injected by the current renderer.\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = '';\n\n    // Add an extra top frame while an element is being validated\n    if (currentlyValidatingElement) {\n      var name = getComponentName(currentlyValidatingElement.type);\n      var owner = currentlyValidatingElement._owner;\n      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));\n    }\n\n    // Delegate to the injected renderer-specific implementation\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\nvar ReactSharedInternals = {\n  ReactCurrentOwner: ReactCurrentOwner,\n  // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n  assign: _assign\n};\n\n{\n  _assign(ReactSharedInternals, {\n    // These should not be included in production.\n    ReactDebugCurrentFrame: ReactDebugCurrentFrame,\n    // Shim for React DOM 16.0.0 which still destructured (but not used) this.\n    // TODO: remove in React 17.0.\n    ReactComponentTreeHook: {}\n  });\n}\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = warningWithoutStack$1;\n\n{\n  warning = function (condition, format) {\n    if (condition) {\n      return;\n    }\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n    // eslint-disable-next-line react-internal/warning-and-invariant-args\n\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));\n  };\n}\n\nvar warning$1 = warning;\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\nvar specialPropKeyWarningShown = void 0;\nvar specialPropRefWarningShown = void 0;\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    if (!specialPropKeyWarningShown) {\n      specialPropKeyWarningShown = true;\n      warningWithoutStack$1(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    if (!specialPropRefWarningShown) {\n      specialPropRefWarningShown = true;\n      warningWithoutStack$1(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, no instanceof check\n * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    });\n    // self and source are DEV only properties.\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    });\n    // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\nfunction createElement(type, config, children) {\n  var propName = void 0;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://reactjs.org/docs/react-api.html#createfactory\n */\n\n\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n}\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\nfunction cloneElement(element, config, children) {\n  !!(element === null || element === undefined) ? invariant(false, 'React.cloneElement(...): The argument must be a React element, but you passed %s.', element) : void 0;\n\n  var propName = void 0;\n\n  // Original props are copied\n  var props = _assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    var defaultProps = void 0;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\nvar POOL_SIZE = 10;\nvar traverseContextPool = [];\nfunction getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {\n  if (traverseContextPool.length) {\n    var traverseContext = traverseContextPool.pop();\n    traverseContext.result = mapResult;\n    traverseContext.keyPrefix = keyPrefix;\n    traverseContext.func = mapFunction;\n    traverseContext.context = mapContext;\n    traverseContext.count = 0;\n    return traverseContext;\n  } else {\n    return {\n      result: mapResult,\n      keyPrefix: keyPrefix,\n      func: mapFunction,\n      context: mapContext,\n      count: 0\n    };\n  }\n}\n\nfunction releaseTraverseContext(traverseContext) {\n  traverseContext.result = null;\n  traverseContext.keyPrefix = null;\n  traverseContext.func = null;\n  traverseContext.context = null;\n  traverseContext.count = 0;\n  if (traverseContextPool.length < POOL_SIZE) {\n    traverseContextPool.push(traverseContext);\n  }\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n    }\n  }\n\n  if (invokeCallback) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child = void 0;\n  var nextName = void 0;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (typeof iteratorFn === 'function') {\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === children.entries) {\n          !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(children);\n      var step = void 0;\n      var ii = 0;\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\n        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();\n      }\n      var childrenString = '' + children;\n      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof component === 'object' && component !== null && component.key != null) {\n    // Explicit key\n    return escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n\n\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {\n      return c;\n    });\n  } else if (mappedChild != null) {\n    if (isValidElement(mappedChild)) {\n      mappedChild = cloneAndReplaceKey(mappedChild,\n      // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children) {\n  return traverseAllChildren(children, function () {\n    return null;\n  }, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, function (child) {\n    return child;\n  });\n  return result;\n}\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;\n  return children;\n}\n\nfunction readContext(context, observedBits) {\n  var dispatcher = ReactCurrentOwner.currentDispatcher;\n  !(dispatcher !== null) ? invariant(false, 'Context.unstable_read(): Context can only be read while React is rendering, e.g. inside the render method or getDerivedStateFromProps.') : void 0;\n  return dispatcher.readContext(context, observedBits);\n}\n\nfunction createContext(defaultValue, calculateChangedBits) {\n  if (calculateChangedBits === undefined) {\n    calculateChangedBits = null;\n  } else {\n    {\n      !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warningWithoutStack$1(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;\n    }\n  }\n\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _calculateChangedBits: calculateChangedBits,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // These are circular\n    Provider: null,\n    Consumer: null,\n    unstable_read: null\n  };\n\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  context.Consumer = context;\n  context.unstable_read = readContext.bind(null, context);\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nfunction lazy(ctor) {\n  var thenable = null;\n  return {\n    then: function (resolve, reject) {\n      if (thenable === null) {\n        // Lazily create thenable by wrapping in an extra thenable.\n        thenable = ctor();\n        ctor = null;\n      }\n      return thenable.then(resolve, reject);\n    },\n\n    // React uses these fields to store the result.\n    _reactStatus: -1,\n    _reactResult: null\n  };\n}\n\nfunction forwardRef(render) {\n  {\n    if (typeof render !== 'function') {\n      warningWithoutStack$1(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      !(\n      // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object\n      render.length === 0 || render.length === 2) ? warningWithoutStack$1(false, 'forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.') : void 0;\n    }\n\n    if (render != null) {\n      !(render.defaultProps == null && render.propTypes == null) ? warningWithoutStack$1(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;\n    }\n  }\n\n  return {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n}\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' ||\n  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_ASYNC_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_PLACEHOLDER_TYPE || typeof type === 'object' && type !== null && (typeof type.then === 'function' || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);\n}\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\nvar propTypesMisspellWarningShown = void 0;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentName(ReactCurrentOwner.current.type);\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(elementProps) {\n  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {\n    var source = elementProps.__source;\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n    if (parentName) {\n      info = '\\n\\nCheck the top-level render call using <' + parentName + '>.';\n    }\n  }\n  return info;\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  var childOwner = '';\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = ' It was passed a child from ' + getComponentName(element._owner.type) + '.';\n  }\n\n  setCurrentlyValidatingElement(element);\n  {\n    warning$1(false, 'Each child in an array or iterator should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);\n  }\n  setCurrentlyValidatingElement(null);\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step = void 0;\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  var type = element.type;\n  var name = void 0,\n      propTypes = void 0;\n  if (typeof type === 'function') {\n    // Class or functional component\n    name = type.displayName || type.name;\n    propTypes = type.propTypes;\n  } else if (typeof type === 'object' && type !== null && type.$$typeof === REACT_FORWARD_REF_TYPE) {\n    // ForwardRef\n    var functionName = type.render.displayName || type.render.name || '';\n    name = type.displayName || (functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef');\n    propTypes = type.propTypes;\n  } else {\n    return;\n  }\n  if (propTypes) {\n    setCurrentlyValidatingElement(element);\n    checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);\n    setCurrentlyValidatingElement(null);\n  } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n    propTypesMisspellWarningShown = true;\n    warningWithoutStack$1(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\n  }\n  if (typeof type.getDefaultProps === 'function') {\n    !type.getDefaultProps.isReactClassApproved ? warningWithoutStack$1(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;\n  }\n}\n\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\nfunction validateFragmentProps(fragment) {\n  setCurrentlyValidatingElement(fragment);\n\n  var keys = Object.keys(fragment.props);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (key !== 'children' && key !== 'key') {\n      warning$1(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n      break;\n    }\n  }\n\n  if (fragment.ref !== null) {\n    warning$1(false, 'Invalid attribute `ref` supplied to `React.Fragment`.');\n  }\n\n  setCurrentlyValidatingElement(null);\n}\n\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type);\n\n  // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n  if (!validType) {\n    var info = '';\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendum(props);\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString = void 0;\n    if (type === null) {\n      typeString = 'null';\n    } else if (Array.isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = '<' + (getComponentName(type.type) || 'Unknown') + ' />';\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    warning$1(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n  }\n\n  var element = createElement.apply(this, arguments);\n\n  // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n  if (element == null) {\n    return element;\n  }\n\n  // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\n\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n  // Legacy hook: remove it\n  {\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\n\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n  validatePropTypes(newElement);\n  return newElement;\n}\n\nvar React = {\n  Children: {\n    map: mapChildren,\n    forEach: forEachChildren,\n    count: countChildren,\n    toArray: toArray,\n    only: onlyChild\n  },\n\n  createRef: createRef,\n  Component: Component,\n  PureComponent: PureComponent,\n\n  createContext: createContext,\n  forwardRef: forwardRef,\n\n  Fragment: REACT_FRAGMENT_TYPE,\n  StrictMode: REACT_STRICT_MODE_TYPE,\n  unstable_AsyncMode: REACT_ASYNC_MODE_TYPE,\n  unstable_Profiler: REACT_PROFILER_TYPE,\n\n  createElement: createElementWithValidation,\n  cloneElement: cloneElementWithValidation,\n  createFactory: createFactoryWithValidation,\n  isValidElement: isValidElement,\n\n  version: ReactVersion,\n\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals\n};\n\nif (enableSuspense) {\n  React.Placeholder = REACT_PLACEHOLDER_TYPE;\n  React.lazy = lazy;\n}\n\n\n\nvar React$2 = Object.freeze({\n\tdefault: React\n});\n\nvar React$3 = ( React$2 && React ) || React$2;\n\n// TODO: decide on the top-level export form.\n// This is hacky but makes it work with both Rollup and Jest.\nvar react = React$3.default || React$3;\n\nmodule.exports = react;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","import React from 'react';\r\n\r\nexport class GetDoneApp extends React.Component {\r\n    render() {\r\n        return <h1>Hello World</h1>;\r\n    }\r\n}","import React from 'react';\r\nimport { renderToNodeStream } from 'react-dom/server';\r\nimport { GetDoneApp } from '../ui-components/GetDoneApp/GetDoneApp';\r\n\r\nexport function createGetDoneAppRenderStream() {\r\n    return renderToNodeStream(<GetDoneApp />)\r\n}","import { createGetDoneAppRenderStream } from \"./App\";\r\nimport { PassThrough } from \"stream\";\r\nimport { indexContent, indexDelimiter } from \"./index.html\";\r\n\r\nexport function appHandler(request, h) {\r\n    const getDoneAppRenderStream = createGetDoneAppRenderStream();\r\n    const renderStream = new PassThrough();\r\n    const response = h.response(renderStream);\r\n    response.type('text/html');\r\n    const indexContentStart = indexContent.indexOf(indexDelimiter);\r\n    const indexContentEnd = indexContentStart + indexDelimiter.length;\r\n    const startChunk = indexContent.substring(0, indexContentStart);\r\n    const endChunk = indexContent.substring(indexContentEnd);\r\n    renderStream.push(startChunk);\r\n    getDoneAppRenderStream.on('data', (chunk) => {\r\n        renderStream.push(chunk);\r\n    });\r\n    getDoneAppRenderStream.on('end', () => {\r\n        renderStream.push(endChunk);\r\n        renderStream.push(null);\r\n    });\r\n    return response;\r\n}","export const indexDelimiter = `{{content}}`;\r\n\r\nexport const indexContent =\r\n`<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n    <title>Hello World</title>\r\n</head>\r\n<body>\r\n    <div id='root'>${indexDelimiter}</div>\r\n    <script src=\"/src/main.js\"></script>\r\n</body>\r\n</html>`;","import Hapi from 'hapi';\r\nimport path from 'path';\r\nimport Inert from 'inert';\r\nimport { appHandler } from './AppHandler';\r\n\r\nasync function startServer() {\r\n    const server = Hapi.server({\r\n        port: 3000\r\n    });\r\n\r\n    await server.register(Inert);\r\n\r\n    server.route({\r\n        method: 'GET',\r\n        path: '/static/{param*}',\r\n        handler: {\r\n            directory: {\r\n                path: path.resolve(__dirname, '../../ui-static')\r\n            }\r\n        }\r\n    });\r\n\r\n    server.route({\r\n        method: 'GET',\r\n        path: '/src/{param*}',\r\n        handler: {\r\n            directory: {\r\n                path: path.resolve(__dirname, '../web-ui')\r\n            }\r\n        }\r\n    });\r\n\r\n    server.route({\r\n        method: 'GET',\r\n        path: '/favicon.ico',\r\n        handler: {\r\n            file: path.resolve(__dirname, '../../ui-static/favicon.ico')\r\n        }\r\n    });\r\n\r\n    server.route({\r\n        method: 'GET',\r\n        path: '/{param*}',\r\n        handler: appHandler\r\n    });\r\n\r\n    await server.start();\r\n}\r\n\r\nstartServer();","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\n// From https://tools.ietf.org/html/rfc7231#section-5.3.3\n// Accept-Charset: iso-8859-5, unicode-1-1;q=0.8\n\nexports.charset = function (header, preferences) {\n\n    Hoek.assert(!preferences || Array.isArray(preferences), 'Preferences must be an array');\n    const charsets = header\n        .split(',')\n        .map(internals.getParts)\n        .filter(internals.removeEmpty)\n        .sort(internals.compareByWeight);\n\n    // Tack on a default return\n\n    charsets.push({\n        weight: 0.001,\n        charset: ''\n    });\n\n    // No preferences.  Take the first non-disallowed charset\n\n    if (!preferences || preferences.length === 0) {\n        return charsets.filter(internals.removeDisallowed)[0].charset;\n    }\n\n    // Lower case all preferences\n\n    preferences = preferences.map(internals.lowerCase);\n\n    // Remove any disallowed preferences\n\n    internals.removeDisallowedPreferences(charsets, preferences);\n\n    // If charsets includes * (that isn't disallowed *;q=0) return first preference\n\n    const splatLocation = internals.findCharsetItem(charsets, '*');\n    if (splatLocation !== -1 && charsets[splatLocation].weight > 0) {\n        return preferences[0];\n    }\n\n    // Try to find the first match in the array of preferences, ignoring case\n\n    for (let i = 0; i < charsets.length; ++i) {\n        if (preferences.indexOf(charsets[i].charset.toLowerCase()) !== -1 && charsets[i].weight > 0) {\n            return charsets[i].charset;\n        }\n    }\n\n    return '';\n};\n\n\nexports.charsets = function (header) {\n\n    if (header === undefined || typeof header !== 'string') {\n        return [];\n    }\n\n    header = header.toLowerCase();\n\n    return header\n        .split(',')\n        .map(internals.getParts)\n        .filter(internals.removeEmptyAndDisallowed)\n        .sort(internals.compareByWeight)\n        .map(internals.partToCharset);\n};\n\n\ninternals.getParts = function (item) {\n\n    const result = {\n        weight: 1,\n        charset: ''\n    };\n\n    const match = item.match(internals.partsRegex);\n    if (!match) {\n        return result;\n    }\n\n    result.charset = match[1];\n    if (match[2] && internals.isNumber(match[2])) {\n        const weight = parseFloat(match[2]);\n        if (weight === 0 || (weight >= 0.001 && weight <= 1)) {\n            result.weight = weight;\n        }\n    }\n    return result;\n};\n\n//                         1: token               2: qvalue\ninternals.partsRegex = /\\s*([^;]+)(?:\\s*;\\s*[qQ]\\=([01](?:\\.\\d*)?))?\\s*/;\n\n\ninternals.removeEmpty = function (item) {\n\n    return item.charset !== '';\n};\n\n\ninternals.removeDisallowed = function (item) {\n\n    return item.weight !== 0;\n};\n\n\ninternals.removeEmptyAndDisallowed = function (item) {\n\n    return item.charset !== '' && item.weight !== 0;\n};\n\n\ninternals.removeDisallowedPreferences = function (charsets, preferences) {\n\n    for (let i = 0; i < charsets.length; ++i) {\n        let location;\n        if (charsets[i].weight === 0) {\n            location = preferences.indexOf(charsets[i].charset.toLowerCase());\n            if (location !== -1) {\n                preferences.splice(location, 1);\n            }\n        }\n    }\n};\n\n\ninternals.compareByWeight = function (a, b) {\n\n    return a.weight < b.weight;\n};\n\n\ninternals.partToCharset = function (item) {\n\n    return item.charset;\n};\n\n\ninternals.isNumber = function (n) {\n\n    return !isNaN(parseFloat(n));\n};\n\n\ninternals.lowerCase = function (str) {\n\n    return str.toLowerCase();\n};\n\n\ninternals.findCharsetItem = function (charsets, charset) {\n\n    for (let i = 0; i < charsets.length; ++i) {\n        if (charsets[i].charset === charset) {\n            return i;\n        }\n    }\n\n    return -1;\n};\n","'use strict';\n\n// Load modules\n\nconst Boom = require('boom');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n/*\n    RFC 7231 Section 5.3.4 (https://tools.ietf.org/html/rfc7231#section-5.3.4)\n\n    Accept-Encoding  = #( codings [ weight ] )\n    codings          = content-coding / \"identity\" / \"*\"\n\n    Accept-Encoding: compress, gzip\n    Accept-Encoding:\n    Accept-Encoding: *\n    Accept-Encoding: compress;q=0.5, gzip;q=1.0\n    Accept-Encoding: gzip;q=1.0, identity; q=0.5, *;q=0\n*/\n\nexports.encoding = function (header, preferences) {\n\n    const encodings = exports.encodings(header, preferences);\n    return encodings.length ? encodings[0] : '';\n};\n\n\nexports.encodings = function (header, preferences) {\n\n    Hoek.assert(!preferences || Array.isArray(preferences), 'Preferences must be an array');\n\n    const scores = internals.parse(header, 'encoding');\n    if (!preferences) {\n        preferences = Object.keys(scores.accept);\n        preferences.push('*');\n    }\n\n    return internals.map(preferences, scores);\n};\n\n\n/*\n    RFC 7231 Section 5.3.1 (https://tools.ietf.org/html/rfc7231#section-5.3.1)\n\n   The weight is normalized to a real number in the range 0 through 1,\n   where 0.001 is the least preferred and 1 is the most preferred; a\n   value of 0 means \"not acceptable\".  If no \"q\" parameter is present,\n   the default weight is 1.\n\n     weight = OWS \";\" OWS \"q=\" qvalue\n     qvalue = ( \"0\" [ \".\" 0*3DIGIT ] ) / ( \"1\" [ \".\" 0*3(\"0\") ] )\n*/\n\n//                              1: token               2: qvalue\ninternals.preferenceRegex = /\\s*([^;\\,]+)(?:\\s*;\\s*[qQ]\\=([01](?:\\.\\d{0,3})?))?\\s*(?:\\,|$)/g;\n\n\ninternals.equivalents = {\n    encoding: {\n        'x-compress': 'compress',\n        'x-gzip': 'gzip'\n    }\n};\n\ninternals.parse = function (header, type) {\n\n    const scores = {\n        accept: {},\n        reject: {},\n        any: 0.0\n    };\n\n    if (header) {\n        const leftovers = header.replace(internals.preferenceRegex, ($0, $1, $2) => {\n\n            $1 = $1.toLowerCase();\n            const key = internals.equivalents[type][$1] || $1;\n            const score = $2 ? parseFloat($2) : 1.0;\n            if (key === '*') {\n                scores.any = score;\n            }\n            else if (score > 0) {\n                scores.accept[key] = score;\n            }\n            else {\n                scores.reject[key] = true;\n            }\n\n            return '';\n        });\n\n        if (leftovers) {\n            throw Boom.badRequest('Invalid accept-' + type + ' header');\n        }\n    }\n\n    // Add identity at the lowest score if not explicitly set\n\n    if (!scores.reject.identity &&\n        !scores.accept.identity) {\n\n        scores.accept.identity = scores.any || 0.001;\n    }\n\n    return scores;\n};\n\n\ninternals.map = function (preferences, scores) {\n\n    const scored = [];\n    for (let i = 0; i < preferences.length; ++i) {\n        const key = preferences[i].toLowerCase();\n        if (!scores.reject[key]) {\n            const score = scores.accept[key] || scores.any;\n            if (score > 0) {\n                scored.push({ key, score });\n            }\n        }\n    }\n\n    scored.sort(internals.sort);\n\n    const result = [];\n    for (let i = 0; i < scored.length; ++i) {\n        result.push(scored[i].key);\n    }\n\n    return result;\n};\n\n\ninternals.sort = function (a, b) {\n\n    return (a.score === b.score ? 0 : (a.score < b.score ? 1 : -1));\n};\n","'use strict';\n\n// Load modules\n\nconst Charset = require('./charset');\nconst Encoding = require('./encoding');\nconst Language = require('./language');\nconst MediaType = require('./mediatype');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports.charset = Charset.charset;\nexports.charsets = Charset.charsets;\n\nexports.encoding = Encoding.encoding;\nexports.encodings = Encoding.encodings;\n\nexports.language = Language.language;\nexports.languages = Language.languages;\n\nexports.mediaTypes = MediaType.mediaTypes;\n\nexports.parseAll = function (requestHeaders) {\n\n    return {\n        charsets: Charset.charsets(requestHeaders['accept-charset']),\n        encodings: Encoding.encodings(requestHeaders['accept-encoding']),\n        languages: Language.languages(requestHeaders['accept-language']),\n        mediaTypes: MediaType.mediaTypes(requestHeaders.accept)\n    };\n};\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\n// https://tools.ietf.org/html/rfc7231#section-5.3.5\n// Accept-Language: da, en-gb;q=0.8, en;q=0.7\n\n\nexports.language = function (header, preferences) {\n\n    Hoek.assert(!preferences || Array.isArray(preferences), 'Preferences must be an array');\n    const languages = exports.languages(header);\n\n    if (languages.length === 0) {\n        languages.push('');\n    }\n\n    // No preferences.  Take the first charset.\n\n    if (!preferences || preferences.length === 0) {\n        return languages[0];\n    }\n\n    // If languages includes * return first preference\n\n    if (languages.indexOf('*') !== -1) {\n        return preferences[0];\n    }\n\n    // Try to find the first match in the array of preferences\n\n    preferences = preferences.map((str) => str.toLowerCase());\n\n    for (let i = 0; i < languages.length; ++i) {\n        if (preferences.indexOf(languages[i].toLowerCase()) !== -1) {\n            return languages[i];\n        }\n    }\n\n    return '';\n};\n\n\nexports.languages = function (header) {\n\n    if (header === undefined || typeof header !== 'string') {\n        return [];\n    }\n\n    return header\n        .split(',')\n        .map(internals.getParts)\n        .filter(internals.removeUnwanted)\n        .sort(internals.compareByWeight)\n        .map(internals.partToLanguage);\n};\n\n\ninternals.getParts = function (item) {\n\n    const result = {\n        weight: 1,\n        language: ''\n    };\n\n    const match = item.match(internals.partsRegex);\n    if (!match) {\n        return result;\n    }\n\n    result.language = match[1];\n    if (match[2] && internals.isNumber(match[2])) {\n        const weight = parseFloat(match[2]);\n        if (weight === 0 || (weight >= 0.001 && weight <= 1)) {\n            result.weight = weight;\n        }\n    }\n    return result;\n};\n\n\n//                         1: token               2: qvalue\ninternals.partsRegex = /\\s*([^;]+)(?:\\s*;\\s*[qQ]\\=([01](?:\\.\\d*)?))?\\s*/;\n\n\ninternals.removeUnwanted = function (item) {\n\n    return item.weight !== 0 && item.language !== '';\n};\n\n\ninternals.compareByWeight = function (a, b) {\n\n    return a.weight < b.weight;\n};\n\n\ninternals.partToLanguage = function (item) {\n\n    return item.language;\n};\n\n\ninternals.isNumber = function (n) {\n\n    return !isNaN(parseFloat(n));\n};\n","'use strict';\n\n// Load modules\n\n\n// Declare internals\n\nconst internals = {};\n\n\n// Accept: audio/*; q=0.2, audio/basic\n// text/plain; q=0.5, text/html, text/x-dvi; q=0.8, text/x-c\n// text/plain, application/json;q=0.5, text/html, */*;q=0.1\n// text/plain, application/json;q=0.5, text/html, text/drop;q=0\n// text/*, text/plain, text/plain;format=flowed, */*\n// text/*;q=0.3, text/html;q=0.7, text/html;level=1, text/html;level=2;q=0.4, */*;q=0.5\n\nexports.mediaTypes = function (header) {\n\n    if (header === undefined || typeof header !== 'string') {\n        return ['*/*'];\n    }\n\n    return header\n        .split(',')\n        .map(internals.getParts)\n        .filter(internals.removeEmptyAndDisallowed)\n        .sort(internals.compareByWeightAndSpecificity)\n        .map(internals.partToMediaType);\n};\n\n\ninternals.getParts = function (item) {\n\n    const result = {\n        weight: 1,\n        mediaType: ''\n    };\n\n    const match = item.match(internals.partsRegex);\n\n    if (!match) {\n        return result;\n    }\n\n    result.mediaType = match[1];\n    if (match[2] && internals.isNumber(match[2])) {\n        const weight = parseFloat(match[2]);\n        if (weight === 0 || (weight >= 0.001 && weight <= 1)) {\n            result.weight = weight;\n        }\n    }\n    return result;\n};\n\n\n//                         1: token              2: qvalue\ninternals.partsRegex = /\\s*(.+\\/.+?)(?:\\s*;\\s*[qQ]\\=([01](?:\\.\\d*)?))?\\s*$/;\n\n\ninternals.removeEmptyAndDisallowed = function (item) {\n\n    return item.mediaType !== '' && item.weight !== 0;\n};\n\n\ninternals.compareByWeightAndSpecificity = function (a, b) {\n\n    if (a.weight !== b.weight) {\n        return a.weight < b.weight;\n    }\n\n    // We have the same weight, so now look for specificity\n    const aSlashParts = a.mediaType.split('/');\n    const bSlashParts = b.mediaType.split('/');\n\n    if (aSlashParts[0] !== bSlashParts[0]) {\n        // First part of items are different so no\n        // further specificity is implied.\n        // Don't change order.\n        return 0;\n    }\n\n    if (aSlashParts[1] !== '*' && bSlashParts[1] === '*') {\n        return -1;\n    }\n    if (aSlashParts[1] === '*' && bSlashParts[1] !== '*') {\n        return 1;\n    }\n\n    // look for items with extensions\n    const aHasExtension = aSlashParts[1].indexOf(';') !== -1;\n    const bHasExtension = bSlashParts[1].indexOf(';') !== -1;\n    if (aHasExtension) {\n        return -1;\n    }\n    else if (bHasExtension) {\n        return 1;\n    }\n\n    return 0;\n};\n\n\ninternals.partToMediaType = function (item) {\n\n    return item.mediaType;\n};\n\n\ninternals.isNumber = function (n) {\n\n    return !isNaN(parseFloat(n));\n};\n","'use strict';\n\n// Load modules\n\nconst Stream = require('stream');\n\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.Range = class {\n\n    constructor(from, to) {\n\n        this.from = from;\n        this.to = to;\n    }\n};\n\n\nexports.header = function (header, length) {\n\n    // Parse header\n\n    const parts = header.split('=');\n    if (parts.length !== 2 ||\n        parts[0] !== 'bytes') {\n\n        return null;\n    }\n\n    const lastPos = length - 1;\n\n    const result = [];\n    const ranges = parts[1].match(/\\d*\\-\\d*/g);\n\n    // Handle headers with multiple ranges\n\n    for (let i = 0; i < ranges.length; ++i) {\n        let range = ranges[i];\n        if (range.length === 1) {               // '-'\n            return null;\n        }\n\n        let from;\n        let to;\n        range = range.split('-');\n        if (range[0]) {\n            from = parseInt(range[0], 10);\n        }\n\n        if (range[1]) {\n            to = parseInt(range[1], 10);\n            if (from !== undefined) {      // Can be 0\n                // From-To\n                if (to > lastPos) {\n                    to = lastPos;\n                }\n            }\n            else {\n                // -To\n                from = length - to;\n                to = lastPos;\n            }\n        }\n        else {\n            // From-\n            to = lastPos;\n        }\n\n        if (from > to) {\n            return null;\n        }\n\n        result.push(new internals.Range(from, to));\n    }\n\n    if (result.length === 1) {\n        return result;\n    }\n\n    // Sort and consolidate ranges\n\n    result.sort((a, b) => a.from - b.from);\n\n    const consolidated = [];\n    for (let i = result.length - 1; i > 0; --i) {\n        const current = result[i];\n        const before = result[i - 1];\n        if (current.from <= before.to + 1) {\n            before.to = current.to;\n        }\n        else {\n            consolidated.unshift(current);\n        }\n    }\n\n    consolidated.unshift(result[0]);\n\n    return consolidated;\n};\n\n\nexports.Stream = internals.Stream = class extends Stream.Transform {\n\n    constructor(range) {\n\n        if (!(range instanceof internals.Range)) {\n            Hoek.assert(typeof range === 'object', 'Expected \"range\" object');\n\n            const from = range.from || 0;\n            Hoek.assert(typeof from === 'number', '\"range.from\" must be falsy, or a number');\n            Hoek.assert(from === parseInt(from, 10) && from >= 0, '\"range.from\" must be a positive integer');\n\n            const to = range.to || 0;\n            Hoek.assert(typeof to === 'number', '\"range.to\" must be falsy, or a number');\n            Hoek.assert(to === parseInt(to, 10) && to >= 0, '\"range.to\" must be a positive integer');\n\n            Hoek.assert(to >= from, '\"range.to\" must be greater than or equal to \"range.from\"');\n\n            range = new internals.Range(from, to);\n        }\n\n        super();\n\n        this._range = range;\n        this._next = 0;\n    }\n\n    processChunk(chunk) {\n\n        // Read desired range from a stream\n\n        const pos = this._next;\n        this._next = this._next + chunk.length;\n\n        if (this._next <= this._range.from ||       // Before range\n            pos > this._range.to) {                 // After range\n\n            return;\n        }\n\n        // Calc bounds of chunk to read\n\n        const from = Math.max(0, this._range.from - pos);\n        const to = Math.min(chunk.length, this._range.to - pos + 1);\n\n        this.push(chunk.slice(from, to));\n    }\n\n    _transform(chunk, encoding, done) {\n\n        try {\n            this.processChunk(chunk);\n        }\n        catch (err) {\n            return done(err);\n        }\n\n        return done();\n    }\n};\n","'use strict';\n\n/*\n    Decode functions adapted from:\n    Version 1.0 12/25/99 Copyright (C) 1999 Masanao Izumo <iz@onicos.co.jp>\n    http://www.onicos.com/staff/iz/amuse/javascript/expert/base64.txt\n*/\n\n// Load modules\n\nconst Stream = require('stream');\n\n\n// Declare internals\n\nconst internals = {\n    decodeChars: [\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63,\n        52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1,\n        -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\n        15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1,\n        -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n        41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1\n    ]\n};\n\n\nexports.decode = function (buffer) {\n\n    const decodeChars = internals.decodeChars;\n    const len = buffer.length;\n    const allocated = Math.ceil(len / 4) * 3;\n    const result = Buffer.alloc(allocated);\n\n    let c1;\n    let c2;\n    let c3;\n    let c4;\n    let j = 0;\n\n    for (let i = 0; i < len; ) {\n        do {\n            c1 = decodeChars[buffer[i++] & 0xff];\n        }\n        while (i < len && c1 === -1);\n\n        if (c1 === -1) {\n            break;\n        }\n\n        do {\n            c2 = decodeChars[buffer[i++] & 0xff];\n        }\n        while (i < len && c2 === -1);\n\n        if (c2 === -1) {\n            break;\n        }\n\n        result[j++] = (c1 << 2) | ((c2 & 0x30) >> 4);\n\n        do {\n            c3 = buffer[i++] & 0xff;\n            if (c3 === 61) {                        // =\n                return result.slice(0, j);\n            }\n\n            c3 = decodeChars[c3];\n        }\n        while (i < len && c3 === -1);\n\n        if (c3 === -1) {\n            break;\n        }\n\n        result[j++] = ((c2 & 0x0f) << 4) | ((c3 & 0x3c) >> 2);\n\n        do {\n            c4 = buffer[i++] & 0xff;\n            if (c4 === 61) {                        // =\n                return result.slice(0, j);\n            }\n\n            c4 = decodeChars[c4];\n        }\n        while (i < len && c4 === -1);\n\n        if (c4 !== -1) {\n            result[j++] = ((c3 & 0x03) << 6) | c4;\n        }\n    }\n\n    return (j === allocated ? result : result.slice(0, j));\n};\n\n\nexports.Decoder = class Decoder extends Stream.Transform {\n    constructor() {\n\n        super();\n        this._reminder = null;\n    }\n\n    _transform(chunk, encoding, callback) {\n\n        let part = this._reminder ? Buffer.concat([this._reminder, chunk]) : chunk;\n        const remaining = part.length % 4;\n        if (remaining) {\n            this._reminder = part.slice(part.length - remaining);\n            part = part.slice(0, part.length - remaining);\n        }\n        else {\n            this._reminder = null;\n        }\n\n        this.push(exports.decode(part));\n        return callback();\n    }\n\n    _flush(callback) {\n\n        if (this._reminder) {\n            this.push(exports.decode(this._reminder));\n        }\n\n        return callback();\n    }\n};\n","'use strict';\n\n/*\n    Encode functions adapted from:\n    Version 1.0 12/25/99 Copyright (C) 1999 Masanao Izumo <iz@onicos.co.jp>\n    http://www.onicos.com/staff/iz/amuse/javascript/expert/base64.txt\n*/\n\n// Load modules\n\nconst Stream = require('stream');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports.encode = function (buffer) {\n\n    return Buffer.from(buffer.toString('base64'));\n};\n\n\nexports.Encoder = class Encoder extends Stream.Transform {\n    constructor() {\n\n        super();\n        this._reminder = null;\n    }\n\n    _transform(chunk, encoding, callback) {\n\n        let part = this._reminder ? Buffer.concat([this._reminder, chunk]) : chunk;\n        const remaining = part.length % 3;\n        if (remaining) {\n            this._reminder = part.slice(part.length - remaining);\n            part = part.slice(0, part.length - remaining);\n        }\n        else {\n            this._reminder = null;\n        }\n\n        this.push(exports.encode(part));\n        return callback();\n    }\n\n    _flush(callback) {\n\n        if (this._reminder) {\n            this.push(exports.encode(this._reminder));\n        }\n\n        return callback();\n    }\n};\n","'use strict';\n\n// Load modules\n\nconst Decoder = require('./decoder');\nconst Encoder = require('./encoder');\n\n\nexports.decode = Decoder.decode;\nexports.encode = Encoder.encode;\n\nexports.Decoder = Decoder.Decoder;\nexports.Encoder = Encoder.Encoder;\n","'use strict';\nconst TIMEOUT_MAX = 2147483647; // 2^31-1\n\nfunction start (timer, args) {\n  const max = module.exports._TIMEOUT_MAX; // Use the exported value for testing purposes.\n\n  if (timer._delay <= max) {\n    timer._timeout = setTimeout(timer._callback, timer._delay, ...args);\n  } else {\n    const callback = () => {\n      timer._delay -= max;\n      start(timer, args);\n    };\n\n    timer._timeout = setTimeout(callback, max, ...args);\n  }\n\n  if (timer._ref === false) {\n    timer._timeout.unref();\n  }\n}\n\nclass Timeout {\n  constructor (callback, delay, ...args) {\n    this._callback = callback;\n\n    if (delay instanceof Date) {\n      this._delay = delay.getTime() - Date.now();\n    } else {\n      this._delay = delay;\n    }\n\n    this._timeout = null;\n    this._ref = true;\n    start(this, args);\n  }\n  ref () {\n    this._ref = true;\n    this._timeout.ref();\n    return this;\n  }\n  unref () {\n    this._ref = false;\n    this._timeout.unref();\n    return this;\n  }\n}\n\nconst _setTimeout = (...args) => { return new Timeout(...args); };\n\nconst _clearTimeout = (timer) => { return timer && clearTimeout(timer._timeout); };\n\nmodule.exports = {\n  setTimeout: _setTimeout,\n  clearTimeout: _clearTimeout,\n  _TIMEOUT_MAX: TIMEOUT_MAX\n};\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {\n    codes: new Map([\n        [100, 'Continue'],\n        [101, 'Switching Protocols'],\n        [102, 'Processing'],\n        [200, 'OK'],\n        [201, 'Created'],\n        [202, 'Accepted'],\n        [203, 'Non-Authoritative Information'],\n        [204, 'No Content'],\n        [205, 'Reset Content'],\n        [206, 'Partial Content'],\n        [207, 'Multi-Status'],\n        [300, 'Multiple Choices'],\n        [301, 'Moved Permanently'],\n        [302, 'Moved Temporarily'],\n        [303, 'See Other'],\n        [304, 'Not Modified'],\n        [305, 'Use Proxy'],\n        [307, 'Temporary Redirect'],\n        [400, 'Bad Request'],\n        [401, 'Unauthorized'],\n        [402, 'Payment Required'],\n        [403, 'Forbidden'],\n        [404, 'Not Found'],\n        [405, 'Method Not Allowed'],\n        [406, 'Not Acceptable'],\n        [407, 'Proxy Authentication Required'],\n        [408, 'Request Time-out'],\n        [409, 'Conflict'],\n        [410, 'Gone'],\n        [411, 'Length Required'],\n        [412, 'Precondition Failed'],\n        [413, 'Request Entity Too Large'],\n        [414, 'Request-URI Too Large'],\n        [415, 'Unsupported Media Type'],\n        [416, 'Requested Range Not Satisfiable'],\n        [417, 'Expectation Failed'],\n        [418, 'I\\'m a teapot'],\n        [422, 'Unprocessable Entity'],\n        [423, 'Locked'],\n        [424, 'Failed Dependency'],\n        [425, 'Unordered Collection'],\n        [426, 'Upgrade Required'],\n        [428, 'Precondition Required'],\n        [429, 'Too Many Requests'],\n        [431, 'Request Header Fields Too Large'],\n        [451, 'Unavailable For Legal Reasons'],\n        [500, 'Internal Server Error'],\n        [501, 'Not Implemented'],\n        [502, 'Bad Gateway'],\n        [503, 'Service Unavailable'],\n        [504, 'Gateway Time-out'],\n        [505, 'HTTP Version Not Supported'],\n        [506, 'Variant Also Negotiates'],\n        [507, 'Insufficient Storage'],\n        [509, 'Bandwidth Limit Exceeded'],\n        [510, 'Not Extended'],\n        [511, 'Network Authentication Required']\n    ])\n};\n\n\nmodule.exports = internals.Boom = class extends Error {\n\n    static [Symbol.hasInstance](instance) {\n\n        return internals.Boom.isBoom(instance);\n    }\n\n    constructor(message, options = {}) {\n\n        if (message instanceof Error) {\n            return internals.Boom.boomify(Hoek.clone(message), options);\n        }\n\n        const { statusCode = 500, data = null, ctor = internals.Boom } = options;\n        const error = new Error(message ? message : undefined);         // Avoids settings null message\n        Error.captureStackTrace(error, ctor);                           // Filter the stack to our external API\n        error.data = data;\n        internals.initialize(error, statusCode);\n        error.typeof = ctor;\n\n        if (options.decorate) {\n            Object.assign(error, options.decorate);\n        }\n\n        return error;\n    }\n\n    static isBoom(err) {\n\n        return (err instanceof Error && !!err.isBoom);\n    }\n\n    static boomify(err, options) {\n\n        Hoek.assert(err instanceof Error, 'Cannot wrap non-Error object');\n\n        options = options || {};\n\n        if (options.data !== undefined) {\n            err.data = options.data;\n        }\n\n        if (options.decorate) {\n            Object.assign(err, options.decorate);\n        }\n\n        if (!err.isBoom) {\n            return internals.initialize(err, options.statusCode || 500, options.message);\n        }\n\n        if (options.override === false ||                           // Defaults to true\n            (!options.statusCode && !options.message)) {\n\n            return err;\n        }\n\n        return internals.initialize(err, options.statusCode || err.output.statusCode, options.message);\n    }\n\n    // 4xx Client Errors\n\n    static badRequest(message, data) {\n\n        return new internals.Boom(message, { statusCode: 400, data, ctor: internals.Boom.badRequest });\n    }\n\n    static unauthorized(message, scheme, attributes) {          // Or function (message, wwwAuthenticate[])\n\n        const err = new internals.Boom(message, { statusCode: 401, ctor: internals.Boom.unauthorized });\n\n        if (!scheme) {\n            return err;\n        }\n\n        let wwwAuthenticate = '';\n\n        if (typeof scheme === 'string') {\n\n            // function (message, scheme, attributes)\n\n            wwwAuthenticate = scheme;\n\n            if (attributes || message) {\n                err.output.payload.attributes = {};\n            }\n\n            if (attributes) {\n                if (typeof attributes === 'string') {\n                    wwwAuthenticate = wwwAuthenticate + ' ' + Hoek.escapeHeaderAttribute(attributes);\n                    err.output.payload.attributes = attributes;\n                }\n                else {\n                    const names = Object.keys(attributes);\n                    for (let i = 0; i < names.length; ++i) {\n                        const name = names[i];\n                        if (i) {\n                            wwwAuthenticate = wwwAuthenticate + ',';\n                        }\n\n                        let value = attributes[name];\n                        if (value === null ||\n                            value === undefined) {              // Value can be zero\n\n                            value = '';\n                        }\n                        wwwAuthenticate = wwwAuthenticate + ' ' + name + '=\"' + Hoek.escapeHeaderAttribute(value.toString()) + '\"';\n                        err.output.payload.attributes[name] = value;\n                    }\n                }\n            }\n\n\n            if (message) {\n                if (attributes) {\n                    wwwAuthenticate = wwwAuthenticate + ',';\n                }\n                wwwAuthenticate = wwwAuthenticate + ' error=\"' + Hoek.escapeHeaderAttribute(message) + '\"';\n                err.output.payload.attributes.error = message;\n            }\n            else {\n                err.isMissing = true;\n            }\n        }\n        else {\n\n            // function (message, wwwAuthenticate[])\n\n            const wwwArray = scheme;\n            for (let i = 0; i < wwwArray.length; ++i) {\n                if (i) {\n                    wwwAuthenticate = wwwAuthenticate + ', ';\n                }\n\n                wwwAuthenticate = wwwAuthenticate + wwwArray[i];\n            }\n        }\n\n        err.output.headers['WWW-Authenticate'] = wwwAuthenticate;\n\n        return err;\n    }\n\n    static paymentRequired(message, data) {\n\n        return new internals.Boom(message, { statusCode: 402, data, ctor: internals.Boom.paymentRequired });\n    }\n\n    static forbidden(message, data) {\n\n        return new internals.Boom(message, { statusCode: 403, data, ctor: internals.Boom.forbidden });\n    }\n\n    static notFound(message, data) {\n\n        return new internals.Boom(message, { statusCode: 404, data, ctor: internals.Boom.notFound });\n    }\n\n    static methodNotAllowed(message, data, allow) {\n\n        const err = new internals.Boom(message, { statusCode: 405, data, ctor: internals.Boom.methodNotAllowed });\n\n        if (typeof allow === 'string') {\n            allow = [allow];\n        }\n\n        if (Array.isArray(allow)) {\n            err.output.headers.Allow = allow.join(', ');\n        }\n\n        return err;\n    }\n\n    static notAcceptable(message, data) {\n\n        return new internals.Boom(message, { statusCode: 406, data, ctor: internals.Boom.notAcceptable });\n    }\n\n    static proxyAuthRequired(message, data) {\n\n        return new internals.Boom(message, { statusCode: 407, data, ctor: internals.Boom.proxyAuthRequired });\n    }\n\n    static clientTimeout(message, data) {\n\n        return new internals.Boom(message, { statusCode: 408, data, ctor: internals.Boom.clientTimeout });\n    }\n\n    static conflict(message, data) {\n\n        return new internals.Boom(message, { statusCode: 409, data, ctor: internals.Boom.conflict });\n    }\n\n    static resourceGone(message, data) {\n\n        return new internals.Boom(message, { statusCode: 410, data, ctor: internals.Boom.resourceGone });\n    }\n\n    static lengthRequired(message, data) {\n\n        return new internals.Boom(message, { statusCode: 411, data, ctor: internals.Boom.lengthRequired });\n    }\n\n    static preconditionFailed(message, data) {\n\n        return new internals.Boom(message, { statusCode: 412, data, ctor: internals.Boom.preconditionFailed });\n    }\n\n    static entityTooLarge(message, data) {\n\n        return new internals.Boom(message, { statusCode: 413, data, ctor: internals.Boom.entityTooLarge });\n    }\n\n    static uriTooLong(message, data) {\n\n        return new internals.Boom(message, { statusCode: 414, data, ctor: internals.Boom.uriTooLong });\n    }\n\n    static unsupportedMediaType(message, data) {\n\n        return new internals.Boom(message, { statusCode: 415, data, ctor: internals.Boom.unsupportedMediaType });\n    }\n\n    static rangeNotSatisfiable(message, data) {\n\n        return new internals.Boom(message, { statusCode: 416, data, ctor: internals.Boom.rangeNotSatisfiable });\n    }\n\n    static expectationFailed(message, data) {\n\n        return new internals.Boom(message, { statusCode: 417, data, ctor: internals.Boom.expectationFailed });\n    }\n\n    static teapot(message, data) {\n\n        return new internals.Boom(message, { statusCode: 418, data, ctor: internals.Boom.teapot });\n    }\n\n    static badData(message, data) {\n\n        return new internals.Boom(message, { statusCode: 422, data, ctor: internals.Boom.badData });\n    }\n\n    static locked(message, data) {\n\n        return new internals.Boom(message, { statusCode: 423, data, ctor: internals.Boom.locked });\n    }\n\n    static failedDependency(message, data) {\n\n        return new internals.Boom(message, { statusCode: 424, data, ctor: internals.Boom.failedDependency });\n    }\n\n    static preconditionRequired(message, data) {\n\n        return new internals.Boom(message, { statusCode: 428, data, ctor: internals.Boom.preconditionRequired });\n    }\n\n    static tooManyRequests(message, data) {\n\n        return new internals.Boom(message, { statusCode: 429, data, ctor: internals.Boom.tooManyRequests });\n    }\n\n    static illegal(message, data) {\n\n        return new internals.Boom(message, { statusCode: 451, data, ctor: internals.Boom.illegal });\n    }\n\n    // 5xx Server Errors\n\n    static internal(message, data, statusCode = 500) {\n\n        return internals.serverError(message, data, statusCode, internals.Boom.internal);\n    }\n\n    static notImplemented(message, data) {\n\n        return internals.serverError(message, data, 501, internals.Boom.notImplemented);\n    }\n\n    static badGateway(message, data) {\n\n        return internals.serverError(message, data, 502, internals.Boom.badGateway);\n    }\n\n    static serverUnavailable(message, data) {\n\n        return internals.serverError(message, data, 503, internals.Boom.serverUnavailable);\n    }\n\n    static gatewayTimeout(message, data) {\n\n        return internals.serverError(message, data, 504, internals.Boom.gatewayTimeout);\n    }\n\n    static badImplementation(message, data) {\n\n        const err = internals.serverError(message, data, 500, internals.Boom.badImplementation);\n        err.isDeveloperError = true;\n        return err;\n    }\n};\n\n\n\ninternals.initialize = function (err, statusCode, message) {\n\n    const numberCode = parseInt(statusCode, 10);\n    Hoek.assert(!isNaN(numberCode) && numberCode >= 400, 'First argument must be a number (400+):', statusCode);\n\n    err.isBoom = true;\n    err.isServer = numberCode >= 500;\n\n    if (!err.hasOwnProperty('data')) {\n        err.data = null;\n    }\n\n    err.output = {\n        statusCode: numberCode,\n        payload: {},\n        headers: {}\n    };\n\n    err.reformat = internals.reformat;\n\n    if (!message &&\n        !err.message) {\n\n        err.reformat();\n        message = err.output.payload.error;\n    }\n\n    if (message) {\n        err.message = (message + (err.message ? ': ' + err.message : ''));\n        err.output.payload.message = err.message;\n    }\n\n    err.reformat();\n    return err;\n};\n\n\ninternals.reformat = function () {\n\n    this.output.payload.statusCode = this.output.statusCode;\n    this.output.payload.error = internals.codes.get(this.output.statusCode) || 'Unknown';\n\n    if (this.output.statusCode === 500) {\n        this.output.payload.message = 'An internal server error occurred';              // Hide actual error from user\n    }\n    else if (this.message) {\n        this.output.payload.message = this.message;\n    }\n};\n\n\ninternals.serverError = function (message, data, statusCode, ctor) {\n\n    if (data instanceof Error &&\n        !data.isBoom) {\n\n        return internals.Boom.boomify(data, { statusCode, message });\n    }\n\n    return new internals.Boom(message, { statusCode, data, ctor });\n};\n","'use strict';\n\n// Load modules\n\nconst Assert = require('assert');\n\nconst Boom = require('boom');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {\n    system: [\n\n        // JavaScript\n\n        EvalError,\n        RangeError,\n        ReferenceError,\n        SyntaxError,\n        TypeError,\n        URIError,\n\n        // Node\n\n        Assert.AssertionError\n    ]\n};\n\n\nexports.rethrow = function (err, types, options = {}) {\n\n    return internals.catch(err, types, options, true);\n};\n\n\nexports.ignore = function (err, types, options = {}) {\n\n    return internals.catch(err, types, options, false);\n};\n\n\ninternals.catch = function (err, types, options, match) {\n\n    if (internals.match(err, types) !== match) {\n        return;\n    }\n\n    // Error replacement\n\n    if (options.override) {\n        err = options.override;\n    }\n\n    // Error decorations\n\n    if (options.decorate) {\n        Object.assign(err, options.decorate);\n    }\n\n    if (options.return) {\n        return err;\n    }\n\n    throw err;\n};\n\n\nexports.background = async function (operation, action = 'rethrow', types = 'system', options = {}) {\n\n    try {\n        if (typeof operation === 'function') {\n            await operation();\n        }\n        else {\n            await operation;\n        }\n    }\n    catch (err) {\n        exports[action](err, types, options);\n    }\n};\n\n\nexports.isBoom = function (err) {\n\n    return Boom.isBoom(err);\n};\n\n\nexports.isError = function (err) {\n\n    return err instanceof Error;\n};\n\n\nexports.isSystem = function (err) {\n\n    if (!err) {\n        return false;\n    }\n\n    if (err.isBoom) {\n        return false;\n    }\n\n    for (let i = 0; i < internals.system.length; ++i) {\n        if (err instanceof internals.system[i]) {\n            return true;\n        }\n    }\n\n    return false;\n};\n\n\ninternals.rules = {\n    system: exports.isSystem,\n    boom: exports.isBoom\n};\n\n\ninternals.match = function (err, types) {\n\n    if (!types) {\n        return true;\n    }\n\n    types = Array.isArray(types) ? types : [types];\n    for (let i = 0; i < types.length; ++i) {\n        const type = types[i];\n        if (typeof type === 'string') {\n            if (internals.rules[type](err)) {\n                return true;\n            }\n        }\n        else if (typeof type === 'object') {\n            if (Hoek.contain(err, type, { deep: true })) {\n                return true;\n            }\n        }\n        else if (err instanceof type) {\n            return true;\n        }\n    }\n\n    return false;\n};\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\nconst Boom = require('boom');\n\nconst Regex = require('./regex');\nconst Segment = require('./segment');\n\n\n// Declare internals\n\nconst internals = {\n    pathRegex: Regex.generate(),\n    defaults: {\n        isCaseSensitive: true\n    }\n};\n\n\nexports.Router = internals.Router = function (options) {\n\n    this.settings = Hoek.applyToDefaults(internals.defaults, options || {});\n\n    this.routes = {};                               // Key: HTTP method or * for catch-all, value: sorted array of routes\n    this.ids = {};                                  // Key: route id, value: record\n    this.vhosts = null;                             // {} where Key: hostname, value: see this.routes\n\n    this.specials = {\n        badRequest: null,\n        notFound: null,\n        options: null\n    };\n};\n\n\ninternals.Router.prototype.add = function (config, route) {\n\n    const method = config.method.toLowerCase();\n\n    const vhost = config.vhost || '*';\n    if (vhost !== '*') {\n        this.vhosts = this.vhosts || {};\n        this.vhosts[vhost] = this.vhosts[vhost] || {};\n    }\n\n    const table = (vhost === '*' ? this.routes : this.vhosts[vhost]);\n    table[method] = table[method] || { routes: [], router: new Segment() };\n\n    const analysis = config.analysis || this.analyze(config.path);\n    const record = {\n        path: config.path,\n        route: route || config.path,\n        segments: analysis.segments,\n        params: analysis.params,\n        fingerprint: analysis.fingerprint,\n        settings: this.settings\n    };\n\n    // Add route\n\n    table[method].router.add(analysis.segments, record);\n    table[method].routes.push(record);\n    table[method].routes.sort(internals.sort);\n\n    const last = record.segments[record.segments.length - 1];\n    if (last.empty) {\n        table[method].router.add(analysis.segments.slice(0, -1), record);\n    }\n\n    if (config.id) {\n        Hoek.assert(!this.ids[config.id], 'Route id', config.id, 'for path', config.path, 'conflicts with existing path', this.ids[config.id] && this.ids[config.id].path);\n        this.ids[config.id] = record;\n    }\n\n    return record;\n};\n\n\ninternals.Router.prototype.special = function (type, route) {\n\n    Hoek.assert(Object.keys(this.specials).indexOf(type) !== -1, 'Unknown special route type:', type);\n\n    this.specials[type] = { route };\n};\n\n\ninternals.Router.prototype.route = function (method, path, hostname) {\n\n    const segments = path.split('/').slice(1);\n\n    const vhost = (this.vhosts && hostname && this.vhosts[hostname]);\n    const route = (vhost && this._lookup(path, segments, vhost, method)) ||\n        this._lookup(path, segments, this.routes, method) ||\n        (method === 'head' && vhost && this._lookup(path, segments, vhost, 'get')) ||\n        (method === 'head' && this._lookup(path, segments, this.routes, 'get')) ||\n        (method === 'options' && this.specials.options) ||\n        (vhost && this._lookup(path, segments, vhost, '*')) ||\n        this._lookup(path, segments, this.routes, '*') ||\n        this.specials.notFound || Boom.notFound();\n\n    return route;\n};\n\n\ninternals.Router.prototype._lookup = function (path, segments, table, method) {\n\n    const set = table[method];\n    if (!set) {\n        return null;\n    }\n\n    const match = set.router.lookup(path, segments, this.settings);\n    if (!match) {\n        return null;\n    }\n\n    const assignments = {};\n    const array = [];\n    for (let i = 0; i < match.array.length; ++i) {\n        const name = match.record.params[i];\n        const value = internals.decode(match.array[i]);\n        if (value.isBoom) {\n            return this.specials.badRequest || value;\n        }\n\n        if (assignments[name] !== undefined) {\n            assignments[name] = assignments[name] + '/' + value;\n        }\n        else {\n            assignments[name] = value;\n        }\n\n        if (i + 1 === match.array.length ||                 // Only include the last segment of a multi-segment param\n            name !== match.record.params[i + 1]) {\n\n            array.push(assignments[name]);\n        }\n    }\n\n    return { params: assignments, paramsArray: array, route: match.record.route };\n};\n\n\ninternals.decode = function (value) {\n\n    try {\n        return decodeURIComponent(value);\n    }\n    catch (err) {\n        return Boom.badRequest('Invalid request path');\n    }\n};\n\n\ninternals.Router.prototype.normalize = function (path) {\n\n    if (path &&\n        path.indexOf('%') !== -1) {\n\n        // Uppercase %encoded values\n\n        const uppercase = path.replace(/%[0-9a-fA-F][0-9a-fA-F]/g, (encoded) => encoded.toUpperCase());\n\n        // Decode non-reserved path characters: a-z A-Z 0-9 _!$&'()*+,;=:@-.~\n        // ! (%21) $ (%24) & (%26) ' (%27) ( (%28) ) (%29) * (%2A) + (%2B) , (%2C) - (%2D) . (%2E)\n        // 0-9 (%30-39) : (%3A) ; (%3B) = (%3D)\n        // @ (%40) A-Z (%41-5A) _ (%5F) a-z (%61-7A) ~ (%7E)\n\n        const decoded = uppercase.replace(/%(?:2[146-9A-E]|3[\\dABD]|4[\\dA-F]|5[\\dAF]|6[1-9A-F]|7[\\dAE])/g, (encoded) => String.fromCharCode(parseInt(encoded.substring(1), 16)));\n\n        path = decoded;\n    }\n\n    // Normalize path segments\n\n    if (path &&\n        (path.indexOf('/.') !== -1 || path[0] === '.')) {\n\n        const hasLeadingDash = path[0] === '/';\n        const segments = path.split('/');\n        const normalized = [];\n        let segment;\n\n        for (let i = 0; i < segments.length; ++i) {\n            segment = segments[i];\n            if (segment === '..') {\n                normalized.pop();\n            }\n            else if (segment !== '.') {\n                normalized.push(segment);\n            }\n        }\n\n        if (segment === '.' ||\n            segment === '..') {         // Add trailing slash when needed\n\n            normalized.push('');\n        }\n\n        path = normalized.join('/');\n\n        if (path[0] !== '/' &&\n            hasLeadingDash) {\n\n            path = '/' + path;\n        }\n    }\n\n    return path;\n};\n\n\ninternals.Router.prototype.analyze = function (path) {\n\n    Hoek.assert(internals.pathRegex.validatePath.test(path), 'Invalid path:', path);\n    Hoek.assert(!internals.pathRegex.validatePathEncoded.test(path), 'Path cannot contain encoded non-reserved path characters:', path);\n\n    const pathParts = path.split('/');\n    const segments = [];\n    const params = [];\n    const fingers = [];\n\n    for (let i = 1; i < pathParts.length; ++i) {                            // Skip first empty segment\n        let segment = pathParts[i];\n\n        // Literal\n\n        if (segment.indexOf('{') === -1) {\n            segment = this.settings.isCaseSensitive ? segment : segment.toLowerCase();\n            fingers.push(segment);\n            segments.push({ literal: segment });\n            continue;\n        }\n\n        // Parameter\n\n        const parts = internals.parseParams(segment);\n        if (parts.length === 1) {\n\n            // Simple parameter\n\n            const item = parts[0];\n            Hoek.assert(params.indexOf(item.name) === -1, 'Cannot repeat the same parameter name:', item.name, 'in:', path);\n            params.push(item.name);\n\n            if (item.wilcard) {\n                if (item.count) {\n                    for (let j = 0; j < item.count; ++j) {\n                        fingers.push('?');\n                        segments.push({});\n                        if (j) {\n                            params.push(item.name);\n                        }\n                    }\n                }\n                else {\n                    fingers.push('#');\n                    segments.push({ wildcard: true });\n                }\n            }\n            else {\n                fingers.push('?');\n                segments.push({ empty: item.empty });\n            }\n        }\n        else {\n\n            // Mixed parameter\n\n            const seg = {\n                length: parts.length,\n                first: typeof parts[0] !== 'string',\n                segments: []\n            };\n\n            let finger = '';\n            let regex = '^';\n            for (let j = 0; j < parts.length; ++j) {\n                const part = parts[j];\n                if (typeof part === 'string') {\n                    finger = finger + part;\n                    regex = regex + Hoek.escapeRegex(part);\n                    seg.segments.push(part);\n                }\n                else {\n                    Hoek.assert(params.indexOf(part.name) === -1, 'Cannot repeat the same parameter name:', part.name, 'in:', path);\n                    params.push(part.name);\n\n                    finger = finger + '?';\n                    regex = regex + '(.' + (part.empty ? '*' : '+') + ')';\n                }\n            }\n\n            seg.mixed = new RegExp(regex + '$', (!this.settings.isCaseSensitive ? 'i' : ''));\n            fingers.push(finger);\n            segments.push(seg);\n        }\n    }\n\n    return {\n        segments,\n        fingerprint: '/' + fingers.join('/'),\n        params\n    };\n};\n\n\ninternals.parseParams = function (segment) {\n\n    const parts = [];\n    segment.replace(internals.pathRegex.parseParam, (match, literal, name, wilcard, count, empty) => {\n\n        if (literal) {\n            parts.push(literal);\n        }\n        else {\n            parts.push({\n                name,\n                wilcard: !!wilcard,\n                count: count && parseInt(count, 10),\n                empty: !!empty\n            });\n        }\n\n        return '';\n    });\n\n    return parts;\n};\n\n\ninternals.Router.prototype.table = function (host) {\n\n    const result = [];\n    const collect = (table) => {\n\n        if (!table) {\n            return;\n        }\n\n        Object.keys(table).forEach((method) => {\n\n            table[method].routes.forEach((record) => {\n\n                result.push(record.route);\n            });\n        });\n    };\n\n    if (this.vhosts) {\n        const vhosts = host ? [].concat(host) : Object.keys(this.vhosts);\n        for (let i = 0; i < vhosts.length; ++i) {\n            collect(this.vhosts[vhosts[i]]);\n        }\n    }\n\n    collect(this.routes);\n\n    return result;\n};\n\n\ninternals.sort = function (a, b) {\n\n    const aFirst = -1;\n    const bFirst = 1;\n\n    const as = a.segments;\n    const bs = b.segments;\n\n    if (as.length !== bs.length) {\n        return (as.length > bs.length ? bFirst : aFirst);\n    }\n\n    for (let i = 0; ; ++i) {\n        if (as[i].literal) {\n            if (bs[i].literal) {\n                if (as[i].literal === bs[i].literal) {\n                    continue;\n                }\n\n                return (as[i].literal > bs[i].literal ? bFirst : aFirst);\n            }\n            return aFirst;\n        }\n        else if (bs[i].literal) {\n            return bFirst;\n        }\n\n        return (as[i].wildcard ? bFirst : aFirst);\n    }\n};\n","'use strict';\n\n// Load modules\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports.generate = function () {\n\n    /*\n        /path/{param}/path/{param?}\n        /path/{param*2}/path\n        /path/{param*2}\n        /path/x{param}x\n        /{param*}\n    */\n\n    const empty = '(?:^\\\\/$)';\n\n    const legalChars = '[\\\\w\\\\!\\\\$&\\'\\\\(\\\\)\\\\*\\\\+\\\\,;\\\\=\\\\:@\\\\-\\\\.~]';\n    const encoded = '%[A-F0-9]{2}';\n\n    const literalChar = '(?:' + legalChars + '|' + encoded + ')';\n    const literal = literalChar + '+';\n    const literalOptional = literalChar + '*';\n\n    const midParam = '(?:\\\\{\\\\w+(?:\\\\*[1-9]\\\\d*)?\\\\})';                               // {p}, {p*2}\n    const endParam = '(?:\\\\/(?:\\\\{\\\\w+(?:(?:\\\\*(?:[1-9]\\\\d*)?)|(?:\\\\?))?\\\\})?)?';     // {p}, {p*2}, {p*}, {p?}\n\n    const partialParam = '(?:\\\\{\\\\w+\\\\??\\\\})';                                        // {p}, {p?}\n    const mixedParam = '(?:(?:' + literal + partialParam + ')+' + literalOptional + ')|(?:' + partialParam + '(?:' + literal + partialParam + ')+' + literalOptional + ')|(?:' + partialParam + literal + ')';\n\n    const segmentContent = '(?:' + literal + '|' + midParam + '|' + mixedParam + ')';\n    const segment = '\\\\/' + segmentContent;\n    const segments = '(?:' + segment + ')*';\n\n    const path = '(?:^' + segments + endParam + '$)';\n\n    //                1:literal               2:name   3:*  4:count  5:?\n    const parseParam = '(' + literal + ')|(?:\\\\{(\\\\w+)(?:(\\\\*)(\\\\d+)?)?(\\\\?)?\\\\})';\n\n    const expressions = {\n        parseParam: new RegExp(parseParam, 'g'),\n        validatePath: new RegExp(empty + '|' + path),\n        validatePathEncoded: /%(?:2[146-9A-E]|3[\\dABD]|4[\\dA-F]|5[\\dAF]|6[1-9A-F]|7[\\dAE])/g\n    };\n\n    return expressions;\n};\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports = module.exports = internals.Segment = function () {\n\n    this._edge = null;              // { segment, record }\n    this._fulls = null;             // { path: { segment, record }\n    this._literals = null;          // { literal: { segment, <node> } }\n    this._param = null;             // <node>\n    this._mixed = null;             // [{ segment, <node> }]\n    this._wildcard = null;          // { segment, record }\n};\n\n\ninternals.Segment.prototype.add = function (segments, record) {\n\n    /*\n        { literal: 'x' }        -> x\n        { empty: false }        -> {p}\n        { wildcard: true }      -> {p*}\n        { mixed: /regex/ }      -> a{p}b\n    */\n\n    const current = segments[0];\n    const remaining = segments.slice(1);\n    const isEdge = !remaining.length;\n\n    const literals = [];\n    let isLiteral = true;\n    for (let i = 0; i < segments.length && isLiteral; ++i) {\n        isLiteral = segments[i].literal !== undefined;\n        literals.push(segments[i].literal);\n    }\n\n    if (isLiteral) {\n        this._fulls = this._fulls || {};\n        let literal = '/' + literals.join('/');\n        if (!record.settings.isCaseSensitive) {\n            literal = literal.toLowerCase();\n        }\n\n        Hoek.assert(!this._fulls[literal], 'New route', record.path, 'conflicts with existing', this._fulls[literal] && this._fulls[literal].record.path);\n        this._fulls[literal] = { segment: current, record };\n    }\n    else if (current.literal !== undefined) {               // Can be empty string\n\n        // Literal\n\n        this._literals = this._literals || {};\n        const currentLiteral = (record.settings.isCaseSensitive ? current.literal : current.literal.toLowerCase());\n        this._literals[currentLiteral] = this._literals[currentLiteral] || new internals.Segment();\n        this._literals[currentLiteral].add(remaining, record);\n    }\n    else if (current.wildcard) {\n\n        // Wildcard\n\n        Hoek.assert(!this._wildcard, 'New route', record.path, 'conflicts with existing', this._wildcard && this._wildcard.record.path);\n        Hoek.assert(!this._param || !this._param._wildcard, 'New route', record.path, 'conflicts with existing', this._param && this._param._wildcard && this._param._wildcard.record.path);\n        this._wildcard = { segment: current, record };\n    }\n    else if (current.mixed) {\n\n        // Mixed\n\n        this._mixed = this._mixed || [];\n\n        let mixed = this._mixedLookup(current);\n        if (!mixed) {\n            mixed = { segment: current, node: new internals.Segment() };\n            this._mixed.push(mixed);\n            this._mixed.sort(internals.mixed);\n        }\n\n        if (isEdge) {\n            Hoek.assert(!mixed.node._edge, 'New route', record.path, 'conflicts with existing', mixed.node._edge && mixed.node._edge.record.path);\n            mixed.node._edge = { segment: current, record };\n        }\n        else {\n            mixed.node.add(remaining, record);\n        }\n    }\n    else {\n\n        // Parameter\n\n        this._param = this._param || new internals.Segment();\n\n        if (isEdge) {\n            Hoek.assert(!this._param._edge, 'New route', record.path, 'conflicts with existing', this._param._edge && this._param._edge.record.path);\n            this._param._edge = { segment: current, record };\n        }\n        else {\n            Hoek.assert(!this._wildcard || !remaining[0].wildcard, 'New route', record.path, 'conflicts with existing', this._wildcard && this._wildcard.record.path);\n            this._param.add(remaining, record);\n        }\n    }\n};\n\n\ninternals.Segment.prototype._mixedLookup = function (segment) {\n\n    for (let i = 0; i < this._mixed.length; ++i) {\n        if (internals.mixed({ segment }, this._mixed[i]) === 0) {\n            return this._mixed[i];\n        }\n    }\n\n    return null;\n};\n\n\ninternals.mixed = function (a, b) {\n\n    const aFirst = -1;\n    const bFirst = 1;\n\n    const as = a.segment;\n    const bs = b.segment;\n\n    if (as.length !== bs.length) {\n        return (as.length > bs.length ? aFirst : bFirst);\n    }\n\n    if (as.first !== bs.first) {\n        return (as.first ? bFirst : aFirst);\n    }\n\n    for (let i = 0; i < as.segments.length; ++i) {\n        const am = as.segments[i];\n        const bm = bs.segments[i];\n\n        if (am === bm) {\n            continue;\n        }\n\n        if (am.length === bm.length) {\n            return (am > bm ? bFirst : aFirst);\n        }\n\n        return (am.length < bm.length ? bFirst : aFirst);\n    }\n\n    return 0;\n};\n\n\ninternals.Segment.prototype.lookup = function (path, segments, options) {\n\n    let match = null;\n\n    // Literal edge\n\n    if (this._fulls) {\n        match = this._fulls[options.isCaseSensitive ? path : path.toLowerCase()];\n        if (match) {\n            return { record: match.record, array: [] };\n        }\n    }\n\n    // Literal node\n\n    const current = segments[0];\n    const nextPath = path.slice(current.length + 1);\n    const remainder = (segments.length > 1 ? segments.slice(1) : null);\n\n    if (this._literals) {\n        const literal = options.isCaseSensitive ? current : current.toLowerCase();\n        match = this._literals.hasOwnProperty(literal) && this._literals[literal];\n        if (match) {\n            const record = internals.deeper(match, nextPath, remainder, [], options);\n            if (record) {\n                return record;\n            }\n        }\n    }\n\n    // Mixed\n\n    if (this._mixed) {\n        for (let i = 0; i < this._mixed.length; ++i) {\n            match = this._mixed[i];\n            const params = current.match(match.segment.mixed);\n            if (params) {\n                const array = [];\n                for (let j = 1; j < params.length; ++j) {\n                    array.push(params[j]);\n                }\n\n                const record = internals.deeper(match.node, nextPath, remainder, array, options);\n                if (record) {\n                    return record;\n                }\n            }\n        }\n    }\n\n    // Param\n\n    if (this._param) {\n        if (current ||\n            (this._param._edge && this._param._edge.segment.empty)) {\n\n            const record = internals.deeper(this._param, nextPath, remainder, [current], options);\n            if (record) {\n                return record;\n            }\n        }\n    }\n\n    // Wildcard\n\n    if (this._wildcard) {\n        return { record: this._wildcard.record, array: [path.slice(1)] };\n    }\n\n    return null;\n};\n\n\ninternals.deeper = function (match, path, segments, array, options) {\n\n    if (!segments) {\n        if (match._edge) {\n            return { record: match._edge.record, array };\n        }\n\n        if (match._wildcard) {\n            return { record: match._wildcard.record, array };\n        }\n    }\n    else {\n        const result = match.lookup(path, segments, options);\n        if (result) {\n            return { record: result.record, array: array.concat(result.array) };\n        }\n    }\n\n    return null;\n};\n","'use strict';\n\n// Load modules\n\nconst BigTime = require('big-time');\nconst Boom = require('boom');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.defaults = {\n    maxByteSize: 100 * 1024 * 1024,          // 100MB\n    allowMixedContent: false\n};\n\n\ninternals.MemoryCacheEntry = function MemoryCacheEntry(key, value, ttl, allowMixedContent) {\n\n    let valueByteSize = 0;\n\n    if (allowMixedContent && Buffer.isBuffer(value)) {\n        this.item = Buffer.alloc(value.length);\n        // copy buffer to prevent value from changing while in the cache\n        value.copy(this.item);\n        valueByteSize = this.item.length;\n    }\n    else {\n        // stringify() to prevent value from changing while in the cache\n        this.item = JSON.stringify(value);\n        valueByteSize = Buffer.byteLength(this.item);\n    }\n\n    this.stored = Date.now();\n    this.ttl = ttl;\n\n    // Approximate cache entry size without value: 144 bytes\n    this.byteSize = 144 + valueByteSize + Buffer.byteLength(key.segment) + Buffer.byteLength(key.id);\n\n    this.timeoutId = null;\n};\n\n\nexports = module.exports = internals.Connection = class {\n\n    constructor(options) {\n\n        Hoek.assert(this.constructor === internals.Connection, 'Memory cache client must be instantiated using new');\n        Hoek.assert(!options || options.maxByteSize === undefined || options.maxByteSize >= 0, 'Invalid cache maxByteSize value');\n        Hoek.assert(!options || options.allowMixedContent === undefined || typeof options.allowMixedContent === 'boolean', 'Invalid allowMixedContent value');\n\n        this.settings = Hoek.applyToDefaults(internals.defaults, options || {});\n        this.cache = null;\n    }\n\n    start() {\n\n        if (!this.cache) {\n            this.cache = new Map();\n            this.byteSize = 0;\n        }\n    }\n\n    stop() {\n\n        // Clean up pending eviction timers\n\n        if (this.cache) {\n            this.cache.forEach((segment) => {\n\n                segment.forEach((item) => BigTime.clearTimeout(item.timeoutId));\n            });\n        }\n\n        this.cache = null;\n        this.byteSize = 0;\n    }\n\n    isReady() {\n\n        return !!this.cache;\n    }\n\n    validateSegmentName(name) {\n\n        if (!name) {\n            throw new Boom('Empty string');\n        }\n\n        if (name.indexOf('\\u0000') !== -1) {\n            throw new Boom('Includes null character');\n        }\n\n        return null;\n    }\n\n    get(key) {\n\n        if (!this.cache) {\n            throw new Boom('Connection not started');\n        }\n\n        const segment = this.cache.get(key.segment);\n        if (!segment) {\n            return null;\n        }\n\n        const envelope = segment.get(key.id);\n\n        if (!envelope) {\n            return null;\n        }\n\n        let item = null;\n        if (Buffer.isBuffer(envelope.item)) {\n            item = envelope.item;\n        }\n        else {\n            try {\n                item = JSON.parse(envelope.item);\n            }\n            catch (err) {\n                throw new Boom('Bad value content');\n            }\n        }\n\n        const result = {\n            item,\n            stored: envelope.stored,\n            ttl: envelope.ttl\n        };\n\n        return result;\n    }\n\n    set(key, value, ttl) {\n\n        if (!this.cache) {\n            throw new Boom('Connection not started');\n        }\n\n        const envelope = new internals.MemoryCacheEntry(key, value, ttl, this.settings.allowMixedContent);\n\n        let segment = this.cache.get(key.segment);\n        if (!segment) {\n            segment = new Map();\n            this.cache.set(key.segment, segment);\n        }\n\n        const cachedItem = segment.get(key.id);\n        if (cachedItem &&\n            cachedItem.timeoutId) {\n\n            BigTime.clearTimeout(cachedItem.timeoutId);\n            this.byteSize -= cachedItem.byteSize;                   // If the item existed, decrement the byteSize as the value could be different\n        }\n\n        if (this.settings.maxByteSize &&\n            (this.byteSize + envelope.byteSize > this.settings.maxByteSize)) {\n\n            throw new Boom('Cache size limit reached');\n        }\n\n        envelope.timeoutId = BigTime.setTimeout(() => this.drop(key), ttl);\n\n        segment.set(key.id, envelope);\n        this.byteSize += envelope.byteSize;\n    }\n\n    drop(key) {\n\n        if (!this.cache) {\n            throw new Boom('Connection not started');\n        }\n\n        const segment = this.cache.get(key.segment);\n        if (segment) {\n            const item = segment.get(key.id);\n            if (item) {\n                BigTime.clearTimeout(item.timeoutId);\n                this.byteSize -= item.byteSize;\n            }\n\n            segment.delete(key.id);\n        }\n    }\n};\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\nconst Boom = require('boom');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.defaults = {\n    partition: 'catbox'\n};\n\n\nmodule.exports = internals.Client = function (engine, options) {\n\n    Hoek.assert(this instanceof internals.Client, 'Cache client must be instantiated using new');\n    Hoek.assert(engine, 'Missing catbox client engine');\n    Hoek.assert(typeof engine === 'object' || typeof engine === 'function', 'engine must be an engine object or engine prototype (function)');\n    Hoek.assert(typeof engine === 'function' || !options, 'Can only specify options with function engine config');\n\n    const settings = Hoek.applyToDefaults(internals.defaults, options || {});\n    Hoek.assert(settings.partition.match(/^[\\w\\-]+$/), 'Invalid partition name:' + settings.partition);\n\n    this.connection = (typeof engine === 'object' ? engine : new engine(settings));\n};\n\n\ninternals.Client.prototype.start = async function () {\n\n    await this.connection.start();\n};\n\n\ninternals.Client.prototype.stop = async function () {\n\n    await this.connection.stop();\n};\n\n\ninternals.Client.prototype.isReady = function () {\n\n    return this.connection.isReady();\n};\n\n\ninternals.Client.prototype.validateSegmentName = function (name) {\n\n    return this.connection.validateSegmentName(name);\n};\n\n\ninternals.Client.prototype.get = async function (key) {\n\n    if (!this.connection.isReady()) {\n        throw Boom.internal('Disconnected');                                // Disconnected\n    }\n\n    if (!key) {\n        return null;                                                        // Not found on null\n    }\n\n    if (!internals.validateKey(key)) {\n        throw Boom.internal('Invalid key');\n    }\n\n    const result = await this.connection.get(key);\n    if (!result ||\n        result.item === undefined ||\n        result.item === null) {\n\n        return null;                                                        // Not found\n    }\n\n    const now = Date.now();\n    const expires = result.stored + result.ttl;\n    const ttl = expires - now;\n    if (ttl <= 0) {\n        return null;                                                        // Expired\n    }\n\n    const cached = {\n        item: result.item,\n        stored: result.stored,\n        ttl\n    };\n\n    return cached;                                                          // Valid\n};\n\n\ninternals.Client.prototype.set = async function (key, value, ttl) {\n\n    if (!this.connection.isReady()) {\n        throw Boom.internal('Disconnected');                                // Disconnected\n    }\n\n    if (!internals.validateKey(key)) {\n        throw Boom.internal('Invalid key');\n    }\n\n    if (ttl <= 0) {\n        return;                                                             // Not cachable (or bad rules)\n    }\n\n    await this.connection.set(key, value, ttl);\n};\n\n\ninternals.Client.prototype.drop = async function (key) {\n\n    if (!this.connection.isReady()) {\n        throw Boom.internal('Disconnected');                                // Disconnected\n    }\n\n    if (!internals.validateKey(key)) {\n        throw Boom.internal('Invalid key');\n    }\n\n    await this.connection.drop(key);                                       // Always drop, regardless of caching rules\n};\n\n\ninternals.validateKey = function (key) {\n\n    return (key && typeof key.id === 'string' && key.segment && typeof key.segment === 'string');\n};\n","'use strict';\n\n// Load modules\n\nconst Client = require('./client');\nconst Policy = require('./policy');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports.Client = Client;\n\n\nexports.Policy = exports.policy = Policy;\n","'use strict';\n\n// Load modules\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports = module.exports = internals.Pending = function (id, rule) {\n\n    this.id = id;\n    this.timeoutTimer = null;\n    this.count = 1;\n    this.rule = rule;\n\n    this.promise = new Promise((resolve, reject) => {\n\n        this.resolve = resolve;\n        this.reject = reject;\n    });\n};\n\n\ninternals.Pending.prototype.join = function () {\n\n    ++this.count;\n    return this.promise;\n};\n\n\ninternals.Pending.prototype.send = function (err, value, cached, report) {\n\n    clearTimeout(this.timeoutTimer);\n\n    if (err &&\n        !cached) {\n\n        this.reject(err);\n        return;\n    }\n\n    if (!this.rule.getDecoratedValue) {\n        this.resolve(value);\n        return;\n    }\n\n    if (err) {\n        report.error = err;\n    }\n\n    this.resolve({ value, cached, report });\n};\n\n\ninternals.Pending.prototype.setTimeout = function (fn, timeoutMs) {\n\n    clearTimeout(this.timeoutTimer);\n    this.timeoutTimer = setTimeout(fn, timeoutMs);\n};\n","'use strict';\n\n// Load modules\n\nconst Boom = require('boom');\nconst Hoek = require('hoek');\nconst Joi = require('joi');\n\nconst Pending = require('./pending');\n\n\n// Declare internals\n\nconst internals = {\n    day: 24 * 60 * 60 * 1000\n};\n\n\nexports = module.exports = internals.Policy = function (options, cache, segment) {\n\n    Hoek.assert(this instanceof internals.Policy, 'Cache Policy must be instantiated using new');\n\n    this._cache = cache;\n    this._pendings = Object.create(null);                       // id -> Pending\n    this._pendingGenerateCall = Object.create(null);            // id -> boolean\n    this.rules(options);\n\n    this.stats = {\n        sets: 0,\n        gets: 0,\n        hits: 0,\n        stales: 0,\n        generates: 0,\n        errors: 0\n    };\n\n    if (cache) {\n        const nameErr = cache.validateSegmentName(segment);\n        Hoek.assert(nameErr === null, 'Invalid segment name: ' + segment + (nameErr ? ' (' + nameErr.message + ')' : ''));\n\n        this._segment = segment;\n    }\n};\n\n\ninternals.Policy.prototype.rules = function (options) {\n\n    this.rule = internals.Policy.compile(options, !!this._cache);\n};\n\n\ninternals.Policy.prototype.get = async function (key) {     // key: string or { id: 'id' }\n\n    ++this.stats.gets;\n\n    // Check if request is already pending\n\n    const id = (key && typeof key === 'object') ? key.id : key;\n    if (this._pendings[id]) {\n        return await this._pendings[id].join();\n    }\n\n    const pending = new Pending(id, this.rule);\n    this._pendings[id] = pending;\n\n    try {\n        await this._get(pending, key);\n    }\n    catch (err) {\n        // Safeguard to ensure that the pending rejects on any processing errors\n\n        this._send(pending, err);\n    }\n\n    return pending.promise;\n};\n\n\ninternals.Policy.prototype._get = async function (pending, key) {\n\n    // Prepare report\n\n    const report = {};\n\n    // Lookup in cache\n\n    const timer = new Hoek.Bench();\n    let cached;\n    try {\n        cached = (this._cache ? await this._cache.get({ segment: this._segment, id: pending.id }) : null);\n    }\n    catch (err) {\n        report.error = err;\n        ++this.stats.errors;\n    }\n\n    report.msec = timer.elapsed();\n\n    if (cached) {\n        report.stored = cached.stored;\n        report.ttl = cached.ttl;\n        const staleIn = typeof this.rule.staleIn === 'function' ? this.rule.staleIn(cached.stored, cached.ttl) : this.rule.staleIn;\n        cached.isStale = (staleIn ? (Date.now() - cached.stored) >= staleIn : false);\n        report.isStale = cached.isStale;\n\n        if (cached.isStale) {\n            ++this.stats.stales;\n        }\n    }\n\n    // No generate method\n\n    if (!this.rule.generateFunc ||\n        (report.error && !this.rule.generateOnReadError)) {\n\n        this._send(pending, report.error, cached ? cached.item : null, cached, report);\n        return;\n    }\n\n    // Check if found and fresh\n\n    if (cached &&\n        !cached.isStale) {\n\n        this._send(pending, null, cached.item, cached, report);\n        return;\n    }\n\n    // Wait until generated or otherwise resolved\n\n    await Promise.race([\n        pending.promise,\n        this._generate(pending, key, cached, report)\n    ]);\n};\n\n\ninternals.Policy.prototype._generate = async function (pending, key, cached, report) {\n\n    if (cached) {                                       // Must be stale\n\n        // Set stale timeout\n\n        cached.ttl = cached.ttl - this.rule.staleTimeout;       // Adjust TTL for when the timeout is invoked (staleTimeout must be valid if isStale is true)\n    }\n\n    if (cached &&\n        cached.ttl > 0) {\n\n        pending.setTimeout(() => {\n\n            return this._send(pending, null, cached.item, cached, report);\n        }, this.rule.staleTimeout);\n    }\n    else if (this.rule.generateTimeout) {\n\n        // Set item generation timeout (when not in cache)\n\n        pending.setTimeout(() => {\n\n            return this._send(pending, Boom.serverUnavailable(), null, null, report);\n        }, this.rule.generateTimeout);\n    }\n\n    // Generate new value\n\n    if (!this._pendingGenerateCall[pending.id]) {                // Check if a generate call is already in progress\n        ++this.stats.generates;                                 // Record generation before call in case it times out\n\n        if (this.rule.pendingGenerateTimeout) {\n            this._pendingGenerateCall[pending.id] = pending;\n            setTimeout(() => {\n\n                delete this._pendingGenerateCall[pending.id];\n            }, this.rule.pendingGenerateTimeout);\n        }\n\n        await this._callGenerateFunc(pending, key, cached, report);\n    }\n    else {\n        this._pendingGenerateCall[pending.id] = pending;\n    }\n};\n\n\ninternals.Policy.prototype._callGenerateFunc = async function (pending, key, cached, report) {\n\n    const flags = {};\n    try {\n        var value = await this.rule.generateFunc(key, flags);\n    }\n    catch (err) {\n        var generateError = err;\n    }\n\n    pending = this._pendingGenerateCall[pending.id] || pending;\n    delete this._pendingGenerateCall[pending.id];\n\n    // Error (if dropOnError is not set to false) or not cached\n\n    let persistError;\n    try {\n        if ((generateError && this.rule.dropOnError) || flags.ttl === 0) {      // null or undefined means use policy\n            await this.drop(pending.id);                                        // Invalidate cache\n        }\n        else if (!generateError) {\n            await this.set(pending.id, value, flags.ttl);                       // Lazy save (replaces stale cache copy with late-coming fresh copy)\n        }\n    }\n    catch (err) {\n        persistError = err;\n    }\n\n    const error = generateError || (this.rule.generateIgnoreWriteError ? null : persistError);\n    if (cached &&\n        error &&\n        !this.rule.dropOnError) {\n\n        this._send(pending, error, cached.item, cached, report);\n        return;\n    }\n\n    this._send(pending, error, value, null, report);                            // Ignored if stale value already returned\n};\n\n\ninternals.Policy.prototype._send = function (pending, err, value, cached, report) {\n\n    pending.send(err, value, cached, report);\n    delete this._pendings[pending.id];\n\n    if (report && report.isStale !== undefined) {\n        this.stats.hits = this.stats.hits + pending.count;\n    }\n};\n\n\ninternals.Policy.prototype.set = async function (key, value, ttl) {\n\n    ++this.stats.sets;\n\n    if (!this._cache) {\n        return;\n    }\n\n    ttl = ttl || internals.Policy.ttl(this.rule);\n    const id = (key && typeof key === 'object') ? key.id : key;\n    try {\n        await this._cache.set({ segment: this._segment, id }, value, ttl);\n    }\n    catch (err) {\n        ++this.stats.errors;\n        throw err;\n    }\n};\n\n\ninternals.Policy.prototype.drop = async function (key) {\n\n    if (!this._cache) {\n        return;\n    }\n\n    const id = (key && typeof key === 'object') ? key.id : key;\n    try {\n        return await this._cache.drop({ segment: this._segment, id });\n    }\n    catch (err) {\n        ++this.stats.errors;\n        throw err;\n    }\n};\n\n\ninternals.Policy.prototype.ttl = function (created) {\n\n    return internals.Policy.ttl(this.rule, created);\n};\n\n\ninternals.schema = Joi.object({\n    expiresIn: Joi.number().integer().min(1),\n    expiresAt: Joi.string().regex(/^\\d\\d?\\:\\d\\d$/),\n    staleIn: [\n        Joi.number().integer().min(1).when('expiresAt', { is: Joi.required(), then: Joi.number().max(86400000 - 1) }),       // One day - 1 (max is inclusive)\n        Joi.func()\n    ],\n    staleTimeout: Joi.number().integer().min(1),\n    generateFunc: Joi.func(),\n    generateTimeout: Joi.number().integer().min(1).allow(false),\n    generateOnReadError: Joi.boolean(),\n    generateIgnoreWriteError: Joi.boolean(),\n    dropOnError: Joi.boolean(),\n    pendingGenerateTimeout: Joi.number().integer().min(1),\n    getDecoratedValue: Joi.boolean().default(false),\n\n    // Ignored external keys (hapi)\n\n    privacy: Joi.any(),\n    cache: Joi.any(),\n    segment: Joi.any(),\n    shared: Joi.any()\n})\n    .without('expiresIn', 'expiresAt')\n    .with('staleIn', 'generateFunc')\n    .with('generateOnReadError', 'generateFunc')\n    .with('generateIgnoreWriteError', 'generateFunc')\n    .with('dropOnError', 'generateFunc')\n    .and('generateFunc', 'generateTimeout')\n    .and('staleIn', 'staleTimeout');\n\n\ninternals.Policy.compile = function (options, serverSide) {\n\n    /*\n        {\n            expiresIn: 30000,\n            expiresAt: '13:00',\n            generateFunc: (id, flags) => { throw err; } / { return result; } / { flags.ttl = ttl; return result; }\n            generateTimeout: 500,\n            generateOnReadError: true,\n            generateIgnoreWriteError: true,\n            staleIn: 20000,\n            staleTimeout: 500,\n            dropOnError: true,\n            getDecoratedValue: false\n        }\n     */\n\n    const rule = {};\n\n    if (!options ||\n        !Object.keys(options).length) {\n\n        return rule;\n    }\n\n    // Validate rule\n\n    options = Joi.attempt(options, internals.schema, 'Invalid cache policy configuration');\n\n    const hasExpiresIn = options.expiresIn !== undefined && options.expiresIn !== null;\n    const hasExpiresAt = options.expiresAt !== undefined && options.expiresAt !== null;\n\n    Hoek.assert(!hasExpiresIn || !options.staleIn || typeof options.staleIn === 'function' || options.staleIn < options.expiresIn, 'staleIn must be less than expiresIn');\n    Hoek.assert(!options.staleIn || serverSide, 'Cannot use stale options without server-side caching');\n    Hoek.assert(!options.staleTimeout || !hasExpiresIn || options.staleTimeout < options.expiresIn, 'staleTimeout must be less than expiresIn');\n    Hoek.assert(!options.staleTimeout || !hasExpiresIn || typeof options.staleIn === 'function' || options.staleTimeout < (options.expiresIn - options.staleIn), 'staleTimeout must be less than the delta between expiresIn and staleIn');\n    Hoek.assert(!options.staleTimeout || !options.pendingGenerateTimeout || options.staleTimeout < options.pendingGenerateTimeout, 'pendingGenerateTimeout must be greater than staleTimeout if specified');\n\n    // Expiration\n\n    if (hasExpiresAt) {\n\n        // expiresAt\n\n        const time = /^(\\d\\d?):(\\d\\d)$/.exec(options.expiresAt);\n        rule.expiresAt = {\n            hours: parseInt(time[1], 10),\n            minutes: parseInt(time[2], 10)\n        };\n    }\n    else {\n\n        // expiresIn\n\n        rule.expiresIn = options.expiresIn || 0;\n    }\n\n    // generateTimeout\n\n    if (options.generateFunc) {\n        rule.generateFunc = options.generateFunc;\n        rule.generateTimeout = options.generateTimeout;\n\n        // Stale\n\n        if (options.staleIn) {\n            rule.staleIn = options.staleIn;\n            rule.staleTimeout = options.staleTimeout;\n        }\n\n        rule.dropOnError = options.dropOnError !== undefined ? options.dropOnError : true;                                          // Defaults to true\n        rule.pendingGenerateTimeout = options.pendingGenerateTimeout !== undefined ? options.pendingGenerateTimeout : 0;            // Defaults to zero\n    }\n\n    rule.generateOnReadError = options.generateOnReadError !== undefined ? options.generateOnReadError : true;                      // Defaults to true\n    rule.generateIgnoreWriteError = options.generateIgnoreWriteError !== undefined ? options.generateIgnoreWriteError : true;       // Defaults to true\n\n    // Decorations\n\n    rule.getDecoratedValue = options.getDecoratedValue;\n\n    return rule;\n};\n\n\ninternals.Policy.ttl = function (rule, created, now) {\n\n    now = now || Date.now();\n    created = created || now;\n    const age = now - created;\n\n    if (age < 0) {\n        return 0;                                                                   // Created in the future, assume expired/bad\n    }\n\n    if (rule.expiresIn) {\n        return Math.max(rule.expiresIn - age, 0);\n    }\n\n    if (rule.expiresAt) {\n        if (age > internals.day) {                                                  // If the item was created more than a 24 hours ago\n            return 0;\n        }\n\n        const expiresAt = new Date(created);                                        // Compare expiration time on the same day\n        expiresAt.setHours(rule.expiresAt.hours);\n        expiresAt.setMinutes(rule.expiresAt.minutes);\n        expiresAt.setSeconds(0);\n        expiresAt.setMilliseconds(0);\n        let expires = expiresAt.getTime();\n\n        if (expires <= created) {\n            expires = expires + internals.day;                                     // Move to tomorrow\n        }\n\n        if (now >= expires) {                                                      // Expired\n            return 0;\n        }\n\n        return expires - now;\n    }\n\n    return 0;                                                                       // No rule\n};\n\n\ninternals.Policy.prototype.isReady = function () {\n\n    if (!this._cache) {\n        return false;\n    }\n\n    return this._cache.connection.isReady();\n};\n","'use strict';\n\n// Load modules\n\nconst Boom = require('boom');\n\n\n// Declare internals\n\nconst internals = {};\n\n\n/*\n    RFC 7231 Section 3.1.1.1\n\n    media-type = type \"/\" subtype *( OWS \";\" OWS parameter )\n    type       = token\n    subtype    = token\n    parameter  = token \"=\" ( token / quoted-string )\n*/\n\n//                             1: type/subtype    2: params\ninternals.contentTypeRegex = /^([^\\/\\s]+\\/[^\\s;]+)(.*)?$/;\n\n//                                        1: \"b\"   2: b\ninternals.paramsRegex = /;\\s*boundary=(?:\"([^\"]+)\"|([^;\"\\s]+))/i;\n\n\nexports.type = function (header) {\n\n    if (!header) {\n        throw Boom.badRequest('Invalid content-type header');\n    }\n\n    const match = header.match(internals.contentTypeRegex);\n    if (!match) {\n        throw Boom.badRequest('Invalid content-type header');\n    }\n\n    const result = {\n        mime: match[1].toLowerCase()\n    };\n\n    if (result.mime.indexOf('multipart/') === 0) {\n        const params = match[2];\n        if (params) {\n            const param = params.match(internals.paramsRegex);\n            if (param) {\n                result.boundary = param[1] || param[2];\n            }\n        }\n\n        if (!result.boundary) {\n            throw Boom.badRequest('Invalid content-type header: multipart missing boundary');\n        }\n    }\n\n    return result;\n};\n\n\n/*\n    RFC 6266 Section 4.1 (http://tools.ietf.org/html/rfc6266#section-4.1)\n\n    content-disposition = \"Content-Disposition\" \":\" disposition-type *( \";\" disposition-parm )\n    disposition-type    = \"inline\" | \"attachment\" | token                                           ; case-insensitive\n    disposition-parm    = filename-parm | token [ \"*\" ] \"=\" ( token | quoted-string | ext-value)    ; ext-value defined in [RFC5987], Section 3.2\n\n    Content-Disposition header field values with multiple instances of the same parameter name are invalid.\n\n    Note that due to the rules for implied linear whitespace (Section 2.1 of [RFC2616]), OPTIONAL whitespace\n    can appear between words (token or quoted-string) and separator characters.\n\n    Furthermore, note that the format used for ext-value allows specifying a natural language (e.g., \"en\"); this is of limited use\n    for filenames and is likely to be ignored by recipients.\n*/\n\n\ninternals.contentDispositionRegex = /^\\s*form-data\\s*(?:;\\s*(.+))?$/i;\n\n//                                        1: name     2: *            3: ext-value                      4: quoted  5: token\ninternals.contentDispositionParamRegex = /([^\\=\\*\\s]+)(\\*)?\\s*\\=\\s*(?:([^;'\"\\s]+\\'[\\w-]*\\'[^;\\s]+)|(?:\\\"([^\"]*)\\\")|([^;\\s]*))(?:\\s*(?:;\\s*)|$)/g;\n\nexports.disposition = function (header) {\n\n    if (!header) {\n        throw Boom.badRequest('Missing content-disposition header');\n    }\n\n    const match = header.match(internals.contentDispositionRegex);\n    if (!match) {\n        throw Boom.badRequest('Invalid content-disposition header format');\n    }\n\n    const parameters = match[1];\n    if (!parameters) {\n        throw Boom.badRequest('Invalid content-disposition header missing parameters');\n    }\n\n    const result = {};\n    parameters.replace(internals.contentDispositionParamRegex, ($0, $1, $2, $3, $4, $5) => {\n\n        if ($2) {\n            if (!$3) {\n                throw Boom.badRequest('Invalid content-disposition header format includes invalid parameters');\n            }\n\n            try {\n                result[$1] = decodeURIComponent($3.split('\\'')[2]);\n            }\n            catch (err) {\n                throw Boom.badRequest('Invalid content-disposition header format includes invalid parameters');\n            }\n        }\n        else {\n            result[$1] = $4 || $5 || '';\n        }\n    });\n\n    if (!result.name) {\n        throw Boom.badRequest('Invalid content-disposition header missing name parameter');\n    }\n\n    return result;\n};\n","'use strict';\n\n// Load modules\n\nconst Crypto = require('crypto');\n\nconst Boom = require('boom');\n\n\n// Declare internals\n\nconst internals = {};\n\n\n// Generate a cryptographically strong pseudo-random data\n\nexports.randomString = function (size) {\n\n    const buffer = exports.randomBits((size + 1) * 6);\n    const string = buffer.toString('base64').replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=/g, '');\n    return string.slice(0, size);\n};\n\n\n// Return a random string of digits\n\nexports.randomDigits = function (size) {\n\n    const digits = [];\n\n    let buffer = internals.random(size * 2);            // Provision twice the amount of bytes needed to increase chance of single pass\n    let pos = 0;\n\n    while (digits.length < size) {\n        if (pos >= buffer.length) {\n            buffer = internals.random(size * 2);\n            pos = 0;\n        }\n\n        if (buffer[pos] < 250) {\n            digits.push(buffer[pos] % 10);\n        }\n        ++pos;\n    }\n\n    return digits.join('');\n};\n\n\n// Generate a buffer of random bits\n\nexports.randomBits = function (bits) {\n\n    if (!bits ||\n        bits < 0) {\n\n        throw Boom.internal('Invalid random bits count');\n    }\n\n    const bytes = Math.ceil(bits / 8);\n    return internals.random(bytes);\n};\n\n\nexports.fixedTimeComparison = function (a, b) {\n\n    try {\n        return Crypto.timingSafeEqual(Buffer.from(a), Buffer.from(b));\n    }\n    catch (err) {\n        return false;\n    }\n};\n\n\ninternals.random = function (bytes) {\n\n    try {\n        return Crypto.randomBytes(bytes);\n    }\n    catch (err) {\n        throw Boom.internal('Failed generating random bits: ' + err.message);\n    }\n};\n","'use strict';\n\n// Load modules\n\nconst Boom = require('boom');\nconst Bounce = require('bounce');\nconst Hoek = require('hoek');\n\nconst Config = require('./config');\n\n\n// Declare internals\n\nconst internals = {\n    missing: Symbol('missing')\n};\n\n\nexports = module.exports = internals.Auth = class {\n\n    constructor(core) {\n\n        this._core = core;\n        this._schemes = {};\n        this._strategies = {};\n        this.settings = {\n            default: null           // Strategy used as default if route has no auth settings\n        };\n\n        this.api = {};\n    }\n\n    scheme(name, scheme) {\n\n        Hoek.assert(name, 'Authentication scheme must have a name');\n        Hoek.assert(!this._schemes[name], 'Authentication scheme name already exists:', name);\n        Hoek.assert(typeof scheme === 'function', 'scheme must be a function:', name);\n\n        this._schemes[name] = scheme;\n    }\n\n    _strategy(server, name, scheme, options = {}) {\n\n        Hoek.assert(name, 'Authentication strategy must have a name');\n        Hoek.assert(typeof options === 'object', 'options must be an object');\n        Hoek.assert(name !== 'bypass', 'Cannot use reserved strategy name: bypass');\n        Hoek.assert(!this._strategies[name], 'Authentication strategy name already exists');\n        Hoek.assert(scheme, 'Authentication strategy', name, 'missing scheme');\n        Hoek.assert(this._schemes[scheme], 'Authentication strategy', name, 'uses unknown scheme:', scheme);\n\n        server = server._clone();\n        const strategy = this._schemes[scheme](server, options);\n\n        Hoek.assert(strategy.authenticate, 'Invalid scheme:', name, 'missing authenticate() method');\n        Hoek.assert(typeof strategy.authenticate === 'function', 'Invalid scheme:', name, 'invalid authenticate() method');\n        Hoek.assert(!strategy.payload || typeof strategy.payload === 'function', 'Invalid scheme:', name, 'invalid payload() method');\n        Hoek.assert(!strategy.response || typeof strategy.response === 'function', 'Invalid scheme:', name, 'invalid response() method');\n        strategy.options = strategy.options || {};\n        Hoek.assert(strategy.payload || !strategy.options.payload, 'Cannot require payload validation without a payload method');\n\n        this._strategies[name] = {\n            methods: strategy,\n            realm: server.realm\n        };\n\n        if (strategy.api) {\n            this.api[name] = strategy.api;\n        }\n    }\n\n    default(options) {\n\n        Hoek.assert(!this.settings.default, 'Cannot set default strategy more than once');\n        options = Config.apply('auth', options, 'default strategy');\n\n        this.settings.default = this._setupRoute(Hoek.clone(options));      // Prevent changes to options\n\n        const routes = this._core.router.table();\n        for (const route of routes) {\n            route.rebuild();\n        }\n    }\n\n    async test(name, request) {\n\n        Hoek.assert(name, 'Missing authentication strategy name');\n        const strategy = this._strategies[name];\n        Hoek.assert(strategy, 'Unknown authentication strategy:', name);\n\n        const bind = strategy.methods;\n        const realm = strategy.realm;\n        const response = await request._core.toolkit.execute(strategy.methods.authenticate, request, { bind, realm, auth: true });\n\n        if (!response.isAuth) {\n            throw response;\n        }\n\n        if (response.error) {\n            throw response.error;\n        }\n\n        return response.data.credentials;\n    }\n\n    static testAccess(request, route) {\n\n        const auth = request._core.auth;\n\n        try {\n            return auth._access(request, route);\n        }\n        catch (err) {\n            Bounce.rethrow(err, 'system');\n            return false;\n        }\n    }\n\n    _setupRoute(options, path) {\n\n        if (!options) {\n            return options;         // Preserve the difference between undefined and false\n        }\n\n        if (typeof options === 'string') {\n            options = { strategies: [options] };\n        }\n        else if (options.strategy) {\n            options.strategies = [options.strategy];\n            delete options.strategy;\n        }\n\n        if (path &&\n            !options.strategies) {\n\n            Hoek.assert(this.settings.default, 'Route missing authentication strategy and no default defined:', path);\n            options = Hoek.applyToDefaults(this.settings.default, options);\n        }\n\n        path = path || 'default strategy';\n        Hoek.assert(options.strategies && options.strategies.length, 'Missing authentication strategy:', path);\n\n        options.mode = options.mode || 'required';\n\n        if (options.entity !== undefined ||                                             // Backwards compatibility with <= 11.x.x\n            options.scope !== undefined) {\n\n            options.access = [{ entity: options.entity, scope: options.scope }];\n            delete options.entity;\n            delete options.scope;\n        }\n\n        if (options.access) {\n            for (const access of options.access) {\n                access.scope = internals.setupScope(access);\n            }\n        }\n\n        if (options.payload === true) {\n            options.payload = 'required';\n        }\n\n        let hasAuthenticatePayload = false;\n        for (const name of options.strategies) {\n            const strategy = this._strategies[name];\n            Hoek.assert(strategy, 'Unknown authentication strategy', name, 'in', path);\n\n            Hoek.assert(strategy.methods.payload || options.payload !== 'required', 'Payload validation can only be required when all strategies support it in', path);\n            hasAuthenticatePayload = hasAuthenticatePayload || strategy.methods.payload;\n            Hoek.assert(!strategy.methods.options.payload || options.payload === undefined || options.payload === 'required', 'Cannot set authentication payload to', options.payload, 'when a strategy requires payload validation in', path);\n        }\n\n        Hoek.assert(!options.payload || hasAuthenticatePayload, 'Payload authentication requires at least one strategy with payload support in', path);\n\n        return options;\n    }\n\n    lookup(route) {\n\n        if (route.settings.auth === false) {\n            return false;\n        }\n\n        return route.settings.auth || this.settings.default;\n    }\n\n    _enabled(route, type) {\n\n        const config = this.lookup(route);\n        if (!config) {\n            return false;\n        }\n\n        if (type === 'authenticate') {\n            return true;\n        }\n\n        if (type === 'access') {\n            return !!config.access;\n        }\n\n        for (const name of config.strategies) {\n            const strategy = this._strategies[name];\n            if (strategy.methods[type]) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static authenticate(request) {\n\n        const auth = request._core.auth;\n        return auth._authenticate(request);\n    }\n\n    async _authenticate(request) {\n\n        const config = this.lookup(request.route);\n\n        const errors = [];\n        request.auth.mode = config.mode;\n\n        // Injection bypass\n\n        if (request.auth.credentials) {\n            internals.validate(null, { credentials: request.auth.credentials, artifacts: request.auth.artifacts }, 'bypass', config, request, errors);\n            return;\n        }\n\n        // Try each strategy\n\n        for (const name of config.strategies) {\n            const strategy = this._strategies[name];\n\n            const bind = strategy.methods;\n            const realm = strategy.realm;\n            const response = await request._core.toolkit.execute(strategy.methods.authenticate, request, { bind, realm, auth: true });\n\n            const message = (response.isAuth ? internals.validate(response.error, response.data, name, config, request, errors) : internals.validate(response, null, name, config, request, errors));\n            if (!message) {\n                return;\n            }\n\n            if (message !== internals.missing) {\n                return message;\n            }\n        }\n\n        // No more strategies\n\n        const err = Boom.unauthorized('Missing authentication', errors);\n        if (config.mode === 'required') {\n            throw err;\n        }\n\n        request.auth.isAuthenticated = false;\n        request.auth.credentials = null;\n        request.auth.error = err;\n        request._log(['auth', 'unauthenticated']);\n    }\n\n    static access(request) {\n\n        const auth = request._core.auth;\n        request.auth.isAuthorized = auth._access(request);\n    }\n\n    _access(request, route) {\n\n        const config = this.lookup(route || request.route);\n        if (!config ||\n            !config.access) {\n\n            return true;\n        }\n\n        const credentials = request.auth.credentials;\n        if (!credentials) {\n            if (config.mode !== 'required') {\n                return false;\n            }\n\n            throw Boom.forbidden('Request is unauthenticated');\n        }\n\n        const requestEntity = (credentials.user ? 'user' : 'app');\n\n        const scopeErrors = [];\n        for (const access of config.access) {\n\n            // Check entity\n\n            const entity = access.entity;\n            if (entity &&\n                entity !== 'any' &&\n                entity !== requestEntity) {\n\n                continue;\n            }\n\n            // Check scope\n\n            let scope = access.scope;\n            if (scope) {\n                if (!credentials.scope) {\n                    scopeErrors.push(scope);\n                    continue;\n                }\n\n                scope = internals.expandScope(request, scope);\n                if (!internals.validateScope(credentials, scope, 'required') ||\n                    !internals.validateScope(credentials, scope, 'selection') ||\n                    !internals.validateScope(credentials, scope, 'forbidden')) {\n\n                    scopeErrors.push(scope);\n                    continue;\n                }\n            }\n\n            return true;\n        }\n\n        // Scope error\n\n        if (scopeErrors.length) {\n            request._log(['auth', 'scope', 'error']);\n            throw Boom.forbidden('Insufficient scope', { got: credentials.scope, need: scopeErrors });\n        }\n\n        // Entity error\n\n        if (requestEntity === 'app') {\n            request._log(['auth', 'entity', 'user', 'error']);\n            throw Boom.forbidden('Application credentials cannot be used on a user endpoint');\n        }\n\n        request._log(['auth', 'entity', 'app', 'error']);\n        throw Boom.forbidden('User credentials cannot be used on an application endpoint');\n    }\n\n    static async payload(request) {\n\n        if (!request.auth.isAuthenticated ||\n            request.auth.strategy === 'bypass') {\n\n            return;\n        }\n\n        const auth = request._core.auth;\n        const strategy = auth._strategies[request.auth.strategy];\n\n        if (!strategy.methods.payload) {\n            return;\n        }\n\n        const config = auth.lookup(request.route);\n        const setting = config.payload || (strategy.methods.options.payload ? 'required' : false);\n        if (!setting) {\n            return;\n        }\n\n        const bind = strategy.methods;\n        const realm = strategy.realm;\n        const response = await request._core.toolkit.execute(strategy.methods.payload, request, { bind, realm });\n\n        if (response.isBoom &&\n            response.isMissing) {\n\n            return (setting === 'optional' ? undefined : Boom.unauthorized('Missing payload authentication'));\n        }\n\n        return response;\n    }\n\n    static async response(request) {\n\n        const auth = request._core.auth;\n        if (!request.auth.isAuthenticated ||\n            request.auth.strategy === 'bypass') {\n\n            return;\n        }\n\n        const strategy = auth._strategies[request.auth.strategy];\n        if (!strategy.methods.response) {\n            return;\n        }\n\n        const bind = strategy.methods;\n        const realm = strategy.realm;\n        const error = await request._core.toolkit.execute(strategy.methods.response, request, { bind, realm, continue: 'undefined' });\n        if (error) {\n            throw error;\n        }\n    }\n};\n\n\ninternals.setupScope = function (access) {\n\n    if (!access.scope) {\n        return false;\n    }\n\n    const scope = {};\n    for (const value of access.scope) {\n        const prefix = value[0];\n        const type = (prefix === '+' ? 'required' : (prefix === '!' ? 'forbidden' : 'selection'));\n        const clean = (type === 'selection' ? value : value.slice(1));\n        scope[type] = scope[type] || [];\n        scope[type].push(clean);\n\n        if ((!scope._parameters || !scope._parameters[type]) &&\n            /{([^}]+)}/.test(clean)) {\n\n            scope._parameters = scope._parameters || {};\n            scope._parameters[type] = true;\n        }\n    }\n\n    return scope;\n};\n\n\ninternals.validate = function (err, result, name, config, request, errors) {                 // err can be Boom, Error, or a valid response object\n\n    result = result || {};\n\n    // Unauthenticated\n\n    if (err) {\n        if (err instanceof Error === false) {\n            request._log(['auth', 'unauthenticated', 'response', name], { statusCode: err.statusCode });\n            return err;     // Non-error response\n        }\n\n        if (err.isMissing) {\n\n            // Try next strategy\n\n            request._log(['auth', 'unauthenticated', 'missing', name], err);\n            errors.push(err.output.headers['WWW-Authenticate']);\n            return internals.missing;\n        }\n\n        if (config.mode === 'try') {\n            request.auth.isAuthenticated = false;\n            request.auth.strategy = name;\n            request.auth.credentials = result.credentials;\n            request.auth.artifacts = result.artifacts;\n            request.auth.error = err;\n            request._log(['auth', 'unauthenticated', 'try', name], err);\n            return;\n        }\n\n        request._log(['auth', 'unauthenticated', 'error', name], err);\n        throw err;\n    }\n\n    // Authenticated\n\n    const credentials = result.credentials;\n    request.auth.strategy = name;\n    request.auth.credentials = credentials;\n    request.auth.artifacts = result.artifacts;\n    request.auth.isAuthenticated = true;\n};\n\n\ninternals.expandScope = function (request, scope) {\n\n    if (!scope._parameters) {\n        return scope;\n    }\n\n    const expanded = {\n        required: internals.expandScopeType(request, scope, 'required'),\n        selection: internals.expandScopeType(request, scope, 'selection'),\n        forbidden: internals.expandScopeType(request, scope, 'forbidden')\n    };\n\n    return expanded;\n};\n\n\ninternals.expandScopeType = function (request, scope, type) {\n\n    if (!scope[type] ||\n        !scope._parameters[type]) {\n\n        return scope[type];\n    }\n\n    const expanded = [];\n    const context = {\n        params: request.params,\n        query: request.query,\n        payload: request.payload,\n        credentials: request.auth.credentials\n    };\n\n    for (const template of scope[type]) {\n        expanded.push(Hoek.reachTemplate(context, template));\n    }\n\n    return expanded;\n};\n\n\ninternals.validateScope = function (credentials, scope, type) {\n\n    if (!scope[type]) {\n        return true;\n    }\n\n    const count = typeof credentials.scope === 'string' ?\n        (scope[type].indexOf(credentials.scope) !== -1 ? 1 : 0) :\n        Hoek.intersect(scope[type], credentials.scope).length;\n\n    if (type === 'forbidden') {\n        return count === 0;\n    }\n\n    if (type === 'required') {\n        return count === scope.required.length;\n    }\n\n    return !!count;\n};\n","'use strict';\n\n// Load modules\n\nconst Zlib = require('zlib');\n\nconst Accept = require('accept');\nconst Bounce = require('bounce');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {\n    common: ['gzip, deflate', 'deflate, gzip', 'gzip', 'deflate', 'gzip, deflate, br']\n};\n\n\nexports = module.exports = internals.Compression = class {\n\n    constructor() {\n\n        this.encodings = ['identity', 'gzip', 'deflate'];\n        this._encoders = {\n            identity: null,\n            gzip: (options) => Zlib.createGzip(options),\n            deflate: (options) => Zlib.createDeflate(options)\n        };\n\n        this._decoders = {\n            gzip: (options) => Zlib.createGunzip(options),\n            deflate: (options) => Zlib.createInflate(options)\n        };\n\n        this._updateCommons();\n    }\n\n    _updateCommons() {\n\n        this._common = new Map();\n        internals.common.forEach((header) => {\n\n            this._common.set(header, Accept.encoding(header, this.encodings));\n        });\n    }\n\n    addEncoder(encoding, encoder) {\n\n        Hoek.assert(this._encoders[encoding] === undefined, `Cannot override existing encoder for ${encoding}`);\n        Hoek.assert(typeof encoder === 'function', `Invalid encoder function for ${encoding}`);\n        this._encoders[encoding] = encoder;\n        this.encodings.unshift(encoding);\n        this._updateCommons();\n    }\n\n    addDecoder(encoding, decoder) {\n\n        Hoek.assert(this._decoders[encoding] === undefined, `Cannot override existing decoder for ${encoding}`);\n        Hoek.assert(typeof decoder === 'function', `Invalid decoder function for ${encoding}`);\n        this._decoders[encoding] = decoder;\n    }\n\n    accept(request) {\n\n        const header = request.headers['accept-encoding'];\n        const common = this._common.get(header);\n        if (common) {\n            return common;\n        }\n\n        try {\n            return Accept.encoding(header, this.encodings);\n        }\n        catch (err) {\n            Bounce.rethrow(err, 'system');\n            err.header = header;\n            request._log(['accept-encoding', 'error'], err);\n            return 'identity';\n        }\n    }\n\n    encoding(response, length) {\n\n        const request = response.request;\n        if (!request._core.settings.compression ||\n            (length !== null && length < request._core.settings.compression.minBytes)) {\n\n            return null;\n        }\n\n        const mime = request._core.mime.type(response.headers['content-type'] || 'application/octet-stream');\n        if (!mime.compressible) {\n            return null;\n        }\n\n        response.vary('accept-encoding');\n\n        if (response.headers['content-encoding']) {\n            return null;\n        }\n\n        return (request.info.acceptEncoding === 'identity' ? null : request.info.acceptEncoding);\n    }\n\n    encoder(request, encoding) {\n\n        const encoder = this._encoders[encoding];\n        Hoek.assert(encoder !== undefined, `Unknown encoding ${encoding}`);\n        return encoder(request.route.settings.compression[encoding]);\n    }\n};\n","'use strict';\n\n// Load modules\n\nconst Os = require('os');\n\nconst Joi = require('joi');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports.symbol = Symbol('hapi-response');\n\n\nexports.apply = function (type, options, message) {\n\n    const result = Joi.validate(options, internals[type]);\n    Hoek.assert(!result.error, 'Invalid', type, 'options', message ? '(' + message + ')' : '', result.error && result.error.annotate());\n    return result.value;\n};\n\n\nexports.enable = function (options) {\n\n    const settings = (options ? Hoek.shallow(options) : {});\n\n    if (settings.security === true) {\n        settings.security = {};\n    }\n\n    if (settings.cors === true) {\n        settings.cors = {};\n    }\n\n    return settings;\n};\n\n\ninternals.access = Joi.object({\n    entity: Joi.valid('user', 'app', 'any'),\n    scope: [false, Joi.array().items(Joi.string()).single().min(1)]\n});\n\n\ninternals.auth = Joi.alternatives([\n    Joi.string(),\n    internals.access.keys({\n        mode: Joi.valid('required', 'optional', 'try'),\n        strategy: Joi.string(),\n        strategies: Joi.array().items(Joi.string()).min(1),\n        access: Joi.array().items(internals.access.min(1)).single().min(1),\n        payload: [\n            Joi.valid('required', 'optional'),\n            Joi.boolean()\n        ]\n    })\n        .without('strategy', 'strategies')\n        .without('access', ['scope', 'entity'])\n]);\n\n\ninternals.event = Joi.object({\n    method: Joi.array().items(Joi.func()).single(),\n    options: Joi.object({\n        before: Joi.array().items(Joi.string()).single(),\n        after: Joi.array().items(Joi.string()).single(),\n        bind: Joi.any(),\n        sandbox: Joi.valid('server', 'plugin')\n    })\n        .default({})\n});\n\n\ninternals.exts = Joi.array().items(internals.event.keys({ type: Joi.string().required() })).single();\n\n\ninternals.failAction = Joi.alternatives([\n    Joi.valid('error', 'log', 'ignore'),\n    Joi.func()\n])\n    .default('error');\n\n\ninternals.routeBase = Joi.object({\n    app: Joi.object().allow(null),\n    auth: internals.auth.allow(false),\n    bind: Joi.object().allow(null),\n    cache: Joi.object({\n        expiresIn: Joi.number(),\n        expiresAt: Joi.string(),\n        privacy: Joi.valid('default', 'public', 'private'),\n        statuses: Joi.array().items(Joi.number().integer().min(200)).min(1).single().default([200, 204]),\n        otherwise: Joi.string().default('no-cache')\n    })\n        .allow(false)\n        .default(),\n    compression: Joi.object()\n        .pattern(/.+/, Joi.object())\n        .default(),\n    cors: Joi.object({\n        origin: Joi.array().min(1).allow('ignore').default(['*']),\n        maxAge: Joi.number().default(86400),\n        headers: Joi.array().items(Joi.string()).default(['Accept', 'Authorization', 'Content-Type', 'If-None-Match']),\n        additionalHeaders: Joi.array().items(Joi.string()).default([]),\n        exposedHeaders: Joi.array().items(Joi.string()).default(['WWW-Authenticate', 'Server-Authorization']),\n        additionalExposedHeaders: Joi.array().items(Joi.string()).default([]),\n        credentials: Joi.boolean().when('origin', { is: 'ignore', then: false }).default(false)\n    })\n        .allow(false, true)\n        .default(false),\n    ext: Joi.object({\n        onPreAuth: Joi.array().items(internals.event).single(),\n        onCredentials: Joi.array().items(internals.event).single(),\n        onPostAuth: Joi.array().items(internals.event).single(),\n        onPreHandler: Joi.array().items(internals.event).single(),\n        onPostHandler: Joi.array().items(internals.event).single(),\n        onPreResponse: Joi.array().items(internals.event).single()\n    })\n        .default({}),\n    files: Joi.object({\n        relativeTo: Joi.string().regex(/^([\\/\\.])|([A-Za-z]:\\\\)|(\\\\\\\\)/).default('.')\n    })\n        .default(),\n    json: Joi.object({\n        replacer: Joi.alternatives(Joi.func(), Joi.array()).allow(null).default(null),\n        space: Joi.number().allow(null).default(null),\n        suffix: Joi.string().allow(null).default(null),\n        escape: Joi.boolean().default(false)\n    })\n        .default(),\n    jsonp: Joi.string(),\n    log: Joi.object({\n        collect: Joi.boolean().default(false)\n    })\n        .default(),\n    payload: Joi.object({\n        output: Joi.valid('data', 'stream', 'file').default('data'),\n        parse: Joi.boolean().allow('gunzip').default(true),\n        multipart: Joi.object({\n            output: Joi.valid('data', 'stream', 'file', 'annotated').required()\n        })\n            .allow(false),\n        allow: Joi.array().items(Joi.string()).single(),\n        override: Joi.string(),\n        maxBytes: Joi.number().integer().positive().default(1024 * 1024),\n        uploads: Joi.string().default(Os.tmpdir()),\n        failAction: internals.failAction,\n        timeout: Joi.number().integer().positive().allow(false).default(10 * 1000),\n        defaultContentType: Joi.string().default('application/json'),\n        compression: Joi.object()\n            .pattern(/.+/, Joi.object())\n            .default()\n    })\n        .default(),\n    plugins: Joi.object(),\n    response: Joi.object({\n        emptyStatusCode: Joi.valid(200, 204).default(200),\n        failAction: internals.failAction,\n        modify: Joi.boolean(),\n        options: Joi.object().default(),\n        ranges: Joi.boolean().default(true),\n        sample: Joi.number().min(0).max(100).when('modify', { is: true, then: Joi.forbidden() }),\n        schema: Joi.alternatives(Joi.object(), Joi.array(), Joi.func()).allow(true, false),\n        status: Joi.object().pattern(/\\d\\d\\d/, Joi.alternatives(Joi.object(), Joi.array(), Joi.func()).allow(true, false))\n    })\n        .default()\n        .assert('options.stripUnknown', Joi.when('modify', { is: true, otherwise: false }), 'meet requirement of having peer modify set to true'),\n    security: Joi.object({\n        hsts: Joi.alternatives([\n            Joi.object({\n                maxAge: Joi.number(),\n                includeSubdomains: Joi.boolean(),\n                includeSubDomains: Joi.boolean(),\n                preload: Joi.boolean()\n            }),\n            Joi.boolean(),\n            Joi.number()\n        ])\n            .default(15768000),\n        xframe: Joi.alternatives([\n            Joi.boolean(),\n            Joi.valid('sameorigin', 'deny'),\n            Joi.object({\n                rule: Joi.valid('sameorigin', 'deny', 'allow-from'),\n                source: Joi.string()\n            })\n        ])\n            .default('deny'),\n        xss: Joi.boolean().default(true),\n        noOpen: Joi.boolean().default(true),\n        noSniff: Joi.boolean().default(true),\n        referrer: Joi.alternatives([\n            Joi.boolean().valid(false),\n            Joi.valid('', 'no-referrer', 'no-referrer-when-downgrade',\n                'unsafe-url', 'same-origin', 'origin', 'strict-origin',\n                'origin-when-cross-origin', 'strict-origin-when-cross-origin')\n        ])\n            .default(false)\n    })\n        .allow(null, false, true)\n        .default(false),\n    state: Joi.object({\n        parse: Joi.boolean().default(true),\n        failAction: internals.failAction\n    })\n        .default(),\n    timeout: Joi.object({\n        socket: Joi.number().integer().positive().allow(false),\n        server: Joi.number().integer().positive().allow(false).default(false)\n    })\n        .default(),\n    validate: Joi.object({\n        headers: Joi.alternatives(Joi.object(), Joi.array(), Joi.func()).allow(null, true),\n        params: Joi.alternatives(Joi.object(), Joi.array(), Joi.func()).allow(null, true),\n        query: Joi.alternatives(Joi.object(), Joi.array(), Joi.func()).allow(null, false, true),\n        payload: Joi.alternatives(Joi.object(), Joi.array(), Joi.func()).allow(null, false, true),\n        failAction: internals.failAction,\n        errorFields: Joi.object(),\n        options: Joi.object().default()\n    })\n        .default()\n});\n\n\ninternals.server = Joi.object({\n    address: Joi.string().hostname(),\n    app: Joi.object().allow(null),\n    autoListen: Joi.boolean(),\n    cache: Joi.allow(null),                                 // Validated elsewhere\n    compression: Joi.object({\n        minBytes: Joi.number().min(1).integer().default(1024)\n    })\n        .allow(false)\n        .default(),\n    debug: Joi.object({\n        request: Joi.array().items(Joi.string()).single().allow(false).default(['implementation']),\n        log: Joi.array().items(Joi.string()).single().allow(false)\n    })\n        .allow(false)\n        .default(),\n    host: Joi.string().hostname().allow(null),\n    listener: Joi.any(),\n    load: Joi.object({\n        sampleInterval: Joi.number().integer().min(0).default(0),\n        concurrent: Joi.number().integer().min(0).default(0)\n    })\n        .unknown()\n        .default(),\n    mime: Joi.object().allow(null).default(null),\n    operations: Joi.object({\n        cleanStop: Joi.boolean().default(true)\n    })\n        .default(),\n    plugins: Joi.object(),\n    port: Joi.alternatives([\n        Joi.number().integer().min(0),          // TCP port\n        Joi.string().regex(/\\//),               // Unix domain socket\n        Joi.string().regex(/^\\\\\\\\\\.\\\\pipe\\\\/)   // Windows named pipe\n    ])\n        .allow(null),\n    router: Joi.object({\n        isCaseSensitive: Joi.boolean().default(true),\n        stripTrailingSlash: Joi.boolean().default(false)\n    })\n        .default(),\n    routes: internals.routeBase.default(),\n    state: Joi.object(),                                    // Cookie defaults\n    tls: Joi.alternatives([\n        Joi.object().allow(null),\n        Joi.boolean()\n    ]),\n    uri: Joi.string().regex(/[^/]$/)\n});\n\n\ninternals.vhost = Joi.alternatives([\n    Joi.string().hostname(),\n    Joi.array().items(Joi.string().hostname()).min(1)\n]);\n\n\ninternals.handler = Joi.alternatives([\n    Joi.func(),\n    Joi.object().length(1)\n]);\n\n\ninternals.route = Joi.object({\n    method: Joi.string().regex(/^[a-zA-Z0-9!#\\$%&'\\*\\+\\-\\.^_`\\|~]+$/).required(),\n    path: Joi.string().required(),\n    rules: Joi.object(),\n    vhost: internals.vhost,\n\n    // Validated in route construction\n\n    handler: Joi.any(),\n    options: Joi.any(),\n    config: Joi.any()               // Backwards compatibility\n})\n    .without('config', 'options');\n\n\ninternals.pre = [\n    Joi.func(),\n    Joi.object({\n        method: Joi.alternatives(Joi.string(), Joi.func()).required(),\n        assign: Joi.string(),\n        mode: Joi.valid('serial', 'parallel'),\n        failAction: internals.failAction\n    })\n];\n\n\ninternals.routeConfig = internals.routeBase.keys({\n    description: Joi.string(),\n    id: Joi.string(),\n    isInternal: Joi.boolean(),\n    notes: [\n        Joi.string(),\n        Joi.array().items(Joi.string())\n    ],\n    pre: Joi.array().items(internals.pre.concat(Joi.array().items(internals.pre).min(1))),\n    tags: [\n        Joi.string(),\n        Joi.array().items(Joi.string())\n    ]\n});\n\n\ninternals.cacheConfig = Joi.object({\n    name: Joi.string().invalid('_default'),\n    partition: Joi.string(),\n    shared: Joi.boolean(),\n    engine: Joi.alternatives([\n        Joi.object(),\n        Joi.func()\n    ])\n        .required()\n}).unknown();\n\n\ninternals.cache = Joi.array().items(internals.cacheConfig, Joi.func()).min(1).single();\n\n\ninternals.cachePolicy = Joi.object({\n    cache: Joi.string().allow(null).allow(''),\n    segment: Joi.string(),\n    shared: Joi.boolean()\n})\n    .options({ allowUnknown: true });               // Catbox validates other keys\n\n\ninternals.method = Joi.object({\n    bind: Joi.object().allow(null),\n    generateKey: Joi.func(),\n    cache: internals.cachePolicy\n});\n\n\ninternals.methodObject = Joi.object({\n    name: Joi.string().required(),\n    method: Joi.func().required(),\n    options: Joi.object()\n});\n\n\ninternals.register = Joi.object({\n    once: true,\n    routes: Joi.object({\n        prefix: Joi.string().regex(/^\\/.+/),\n        vhost: internals.vhost\n    })\n        .default({})\n});\n\n\ninternals.plugin = internals.register.keys({\n    options: Joi.any(),\n    plugin: Joi.object({\n        register: Joi.func().required(),\n        name: Joi.string().when('pkg.name', { is: Joi.exist(), otherwise: Joi.required() }),\n        version: Joi.string(),\n        multiple: Joi.boolean().default(false),\n        dependencies: Joi.array().items(Joi.string()).single(),\n        once: true,\n        pkg: Joi.object({\n            name: Joi.string(),\n            version: Joi.string().default('0.0.0')\n        })\n            .unknown()\n            .default({})\n    })\n        .unknown()\n})\n    .without('once', 'options')\n    .unknown();\n\n\ninternals.rules = Joi.object({\n    validate: Joi.object({\n        schema: Joi.alternatives(Joi.object(), Joi.array()).required(),\n        options: Joi.object()\n            .default({ allowUnknown: true })\n    })\n});\n","'use strict';\n\n// Load modules\n\nconst Http = require('http');\nconst Https = require('https');\nconst Os = require('os');\nconst Path = require('path');\n\nconst Boom = require('boom');\nconst Bounce = require('bounce');\nconst Call = require('call');\nconst Catbox = require('catbox');\nconst CatboxMemory = require('catbox-memory');\nconst Heavy = require('heavy');\nconst Hoek = require('hoek');\nconst Mimos = require('mimos');\nconst Podium = require('podium');\nconst Statehood = require('statehood');\n\nconst Auth = require('./auth');\nconst Compression = require('./compression');\nconst Config = require('./config');\nconst Cors = require('./cors');\nconst Ext = require('./ext');\nconst Methods = require('./methods');\nconst Request = require('./request');\nconst Route = require('./route');\nconst Toolkit = require('./toolkit');\n\n\n// Declare internals\n\nconst internals = {\n    counter: {\n        min: 10000,\n        max: 99999\n    },\n    events: [\n        { name: 'log', channels: ['app', 'internal'], tags: true },\n        { name: 'request', channels: ['app', 'internal', 'error'], tags: true, spread: true },\n        'response',\n        'route',\n        'start',\n        'stop'\n    ],\n    badRequestResponse: Buffer.from('HTTP/1.1 400 Bad Request\\r\\n\\r\\n', 'ascii')\n};\n\n\nexports = module.exports = internals.Core = class {\n\n    constructor(options) {\n\n        this.root = null;                                                               // Dispatch reference of the root server\n\n        const { settings, type } = internals.setup(options);\n\n        this.settings = settings;\n        this.type = type;\n\n        this.app = {};\n        this.auth = new Auth(this);\n        this.caches = new Map();                                                        // Cache clients\n        this.compression = new Compression();\n        this.controlled = null;                                                         // Other servers linked to the phases of this server\n        this.decorations = { handler: [], request: [], server: [], toolkit: [] };       // Public decoration names\n        this.dependencies = [];                                                         // Plugin dependencies\n        this.events = new Podium(internals.events);\n        this.heavy = new Heavy(this.settings.load);\n        this.instances = new Set();\n        this.methods = new Methods(this);                                               // Server methods\n        this.mime = new Mimos(this.settings.mime);\n        this.onConnection = null;                                                       // Used to remove event listener on stop\n        this.plugins = {};                                                              // Exposed plugin properties by name\n        this.queue = new internals.Queue(this.settings.load);\n        this.registrations = {};                                                        // Tracks plugin for dependency validation { name -> { version } }\n        this.registring = 0;                                                            // > 0 while register() is waiting for plugin callbacks\n        this.requestCounter = { value: internals.counter.min, min: internals.counter.min, max: internals.counter.max };\n        this.router = new Call.Router(this.settings.router);\n        this.phase = 'stopped';                                                         // 'stopped', 'initializing', 'initialized', 'starting', 'started', 'stopping', 'invalid'\n        this.sockets = null;                                                            // Track open sockets for graceful shutdown\n        this.started = false;\n        this.states = new Statehood.Definitions(this.settings.state);\n        this.toolkit = new Toolkit();\n\n        this.extensionsSeq = 0;                                                         // Used to keep absolute order of extensions based on the order added across locations\n        this.extensions = {\n            server: {\n                onPreStart: new Ext('onPreStart', this),\n                onPostStart: new Ext('onPostStart', this),\n                onPreStop: new Ext('onPreStop', this),\n                onPostStop: new Ext('onPostStop', this)\n            },\n            route: {\n                onRequest: new Ext('onRequest', this),\n                onPreAuth: new Ext('onPreAuth', this),\n                onCredentials: new Ext('onCredentials', this),\n                onPostAuth: new Ext('onPostAuth', this),\n                onPreHandler: new Ext('onPreHandler', this),\n                onPostHandler: new Ext('onPostHandler', this),\n                onPreResponse: new Ext('onPreResponse', this)\n            }\n        };\n\n        this.Request = class extends Request {};\n\n        this._debug();\n        this._decorations = { handler: {}, request: {}, server: {}, toolkit: {}, requestApply: null };\n        this._initializeCache();\n\n        this.listener = this._createListener();\n        this._initializeListener();\n        this.info = this._info();\n    }\n\n    _debug() {\n\n        // Subscribe to server log events\n\n        if (this.settings.debug) {\n            const debug = (request, event) => {\n\n                const data = event.error || event.data;\n                console.error('Debug:', event.tags.join(', '), (data ? '\\n    ' + (data.stack || (typeof data === 'object' ? Hoek.stringify(data) : data)) : ''));\n            };\n\n            if (this.settings.debug.log) {\n                const filter = this.settings.debug.log.some((tag) => tag === '*') ? undefined : this.settings.debug.log;\n                this.events.on({ name: 'log', filter }, (event) => debug(null, event));\n            }\n\n            if (this.settings.debug.request) {\n                const filter = this.settings.debug.request.some((tag) => tag === '*') ? undefined : this.settings.debug.request;\n                this.events.on({ name: 'request', filter }, debug);\n            }\n        }\n    }\n\n    _initializeCache() {\n\n        if (this.settings.cache) {\n            this._createCache(this.settings.cache);\n        }\n\n        if (!this.caches.has('_default')) {\n            this._createCache([{ engine: CatboxMemory }]);              // Defaults to memory-based\n        }\n    }\n\n    _info() {\n\n        const now = Date.now();\n        const protocol = this.type === 'tcp' ? (this.settings.tls ? 'https' : 'http') : this.type;\n        const host = this.settings.host || Os.hostname() || 'localhost';\n        const port = this.settings.port;\n\n        const info = {\n            created: now,\n            started: 0,\n            host,\n            port,\n            protocol,\n            id: Os.hostname() + ':' + process.pid + ':' + now.toString(36),\n            uri: this.settings.uri || (protocol + ':' + (this.type === 'tcp' ? '//' + host + (port ? ':' + port : '') : port))\n        };\n\n        return info;\n    }\n\n    _createCache(options) {\n\n        Hoek.assert(this.phase !== 'initializing', 'Cannot provision server cache while server is initializing');\n\n        options = Config.apply('cache', options);\n\n        const added = [];\n        for (let config of options) {\n            if (typeof config === 'function') {\n                config = { engine: config };\n            }\n\n            const name = config.name || '_default';\n            Hoek.assert(!this.caches.has(name), 'Cannot configure the same cache more than once: ', name === '_default' ? 'default cache' : name);\n\n            let client = null;\n            if (typeof config.engine === 'object') {\n                client = new Catbox.Client(config.engine);\n            }\n            else {\n                const settings = Hoek.clone(config);\n                settings.partition = settings.partition || 'hapi-cache';\n                delete settings.name;\n                delete settings.engine;\n                delete settings.shared;\n\n                client = new Catbox.Client(config.engine, settings);\n            }\n\n            this.caches.set(name, { client, segments: {}, shared: config.shared || false });\n            added.push(client);\n        }\n\n        return added;\n    }\n\n    registerServer(server) {\n\n        if (!this.root) {\n            this.root = server;\n            this._defaultRoutes();\n        }\n\n        this.instances.add(server);\n    }\n\n    async _start() {\n\n        if (this.phase === 'initialized' ||\n            this.phase === 'started') {\n\n            this._validateDeps();\n        }\n\n        if (this.phase === 'started') {\n            return;\n        }\n\n        if (this.phase !== 'stopped' &&\n            this.phase !== 'initialized') {\n\n            throw new Error('Cannot start server while it is in ' + this.phase + ' phase');\n        }\n\n        if (this.phase !== 'initialized') {\n            await this._initialize();\n        }\n\n        this.phase = 'starting';\n        this.started = true;\n        this.info.started = Date.now();\n\n        try {\n            await this._listen();\n        }\n        catch (err) {\n            this.started = false;\n            this.phase = 'invalid';\n            throw err;\n        }\n\n        this.phase = 'started';\n        await this.events.emit('start');\n\n        try {\n            if (this.controlled) {\n                await Promise.all(this.controlled.map((control) => control.start()));\n            }\n\n            await this._invoke('onPostStart');\n        }\n        catch (err) {\n            this.phase = 'invalid';\n            throw err;\n        }\n    }\n\n    _listen() {\n\n        return new Promise((resolve, reject) => {\n\n            if (!this.settings.autoListen) {\n                resolve();\n                return;\n            }\n\n            const onError = (err) => {\n\n                reject(err);\n                return;\n            };\n\n            this.listener.once('error', onError);\n\n            const finalize = () => {\n\n                this.listener.removeListener('error', onError);\n                resolve();\n                return;\n            };\n\n            if (this.type !== 'tcp') {\n                this.listener.listen(this.settings.port, finalize);\n            }\n            else {\n                const address = this.settings.address || this.settings.host || '0.0.0.0';\n                this.listener.listen(this.settings.port, address, finalize);\n            }\n        });\n    }\n\n    async _initialize() {\n\n        if (this.registring) {\n            throw new Error('Cannot start server before plugins finished registration');\n        }\n\n        if (this.phase === 'initialized') {\n            return;\n        }\n\n        if (this.phase !== 'stopped') {\n            throw new Error('Cannot initialize server while it is in ' + this.phase + ' phase');\n        }\n\n        this._validateDeps();\n        this.phase = 'initializing';\n\n        // Start cache\n\n        try {\n            const caches = [];\n            this.caches.forEach((cache) => caches.push(cache.client.start()));\n            await Promise.all(caches);\n            await this._invoke('onPreStart');\n            this.heavy.start();\n            this.phase = 'initialized';\n\n            if (this.controlled) {\n                await Promise.all(this.controlled.map((control) => control.initialize()));\n            }\n        }\n        catch (err) {\n            this.phase = 'invalid';\n            throw err;\n        }\n    }\n\n    _validateDeps() {\n\n        for (const dependency of this.dependencies) {\n            for (const dep of dependency.deps) {\n                if (!this.registrations[dep]) {\n                    throw new Error('Plugin ' + dependency.plugin + ' missing dependency ' + dep);\n                }\n            }\n        }\n    }\n\n    async _stop(options = {}) {\n\n        options.timeout = options.timeout || 5000;          // Default timeout to 5 seconds\n\n        if (['stopped', 'initialized', 'started', 'invalid'].indexOf(this.phase) === -1) {\n            throw new Error('Cannot stop server while in ' + this.phase + ' phase');\n        }\n\n        this.phase = 'stopping';\n\n        try {\n            await this._invoke('onPreStop');\n\n            if (this.started) {\n                this.started = false;\n                this.info.started = 0;\n\n                await this._unlisten(options);\n            }\n\n            const caches = [];\n            this.caches.forEach((cache) => caches.push(cache.client.stop()));\n            await Promise.all(caches);\n\n            await this.events.emit('stop');\n            this.heavy.stop();\n\n            if (this.controlled) {\n                await Promise.all(this.controlled.map((control) => control.stop(options)));\n            }\n\n            await this._invoke('onPostStop');\n            this.phase = 'stopped';\n        }\n        catch (err) {\n            this.phase = 'invalid';\n            throw err;\n        }\n    }\n\n    _unlisten(options) {\n\n        let timeoutId = null;\n        if (this.settings.operations.cleanStop) {\n\n            // Set connections timeout\n\n            const timeout = () => {\n\n                this.sockets.forEach((connection) => connection.destroy());\n                this.sockets.clear();\n            };\n\n            timeoutId = setTimeout(timeout, options.timeout);\n\n            // Tell idle keep-alive connections to close\n\n            this.sockets.forEach((connection) => {\n\n                if (!connection._isHapiProcessing) {\n                    connection.end();\n                }\n            });\n        }\n\n        // Close connection\n\n        return new Promise((resolve) => {\n\n            this.listener.close(() => {\n\n                if (this.settings.operations.cleanStop) {\n                    this.listener.removeListener(this.settings.tls ? 'secureConnection' : 'connection', this.onConnection);\n                    clearTimeout(timeoutId);\n                }\n\n                this._initializeListener();\n                resolve();\n            });\n        });\n    }\n\n    async _invoke(type) {\n\n        const exts = this.extensions.server[type];\n        if (!exts.nodes) {\n            return;\n        }\n\n        for (const ext of exts.nodes) {\n            const bind = (ext.bind || ext.realm.settings.bind);\n            await ext.func.call(bind, ext.server, bind);\n        }\n    }\n\n    _defaultRoutes() {\n\n        this.router.special('notFound', new Route({ method: '_special', path: '/{p*}', handler: internals.notFound }, this.root, { special: true }));\n        this.router.special('badRequest', new Route({ method: '_special', path: '/{p*}', handler: internals.badRequest }, this.root, { special: true }));\n\n        if (this.settings.routes.cors) {\n            Cors.handler(this.root);\n        }\n    }\n\n    _dispatch(options = {}) {\n\n        return (req, res) => {\n\n            // Track socket request processing state\n\n            if (req.socket) {\n                req.socket._isHapiProcessing = true;\n                const env = { core: this, req };\n                res.on('finish', internals.onFinish.bind(res, env));\n            }\n\n            // Create request\n\n            const request = Request.generate(this.root, req, res, options);\n\n            // Check load\n\n            if (this.settings.load.sampleInterval) {\n                try {\n                    this.heavy.check();\n                }\n                catch (err) {\n                    Bounce.rethrow(err, 'system');\n                    this._log(['load'], this.heavy.load);\n                    request._reply(err);\n                    return;\n                }\n            }\n\n            this.queue.add(request);\n        };\n    }\n\n    _createListener() {\n\n        const listener = this.settings.listener || (this.settings.tls ? Https.createServer(this.settings.tls) : Http.createServer());\n        listener.on('request', this._dispatch());\n        listener.on('checkContinue', this._dispatch({ expectContinue: true }));\n\n        listener.on('clientError', (err, socket) => {\n\n            this._log(['connection', 'client', 'error'], err);\n\n            if (socket.writable) {\n                socket.end(internals.badRequestResponse);\n            }\n            else {\n                socket.destroy(err);\n            }\n        });\n\n        return listener;\n    }\n\n    _initializeListener() {\n\n        this.listener.once('listening', () => {\n\n            // Update the address, port, and uri with active values\n\n            if (this.type === 'tcp') {\n                const address = this.listener.address();\n                this.info.address = address.address;\n                this.info.port = address.port;\n                this.info.uri = (this.settings.uri || (this.info.protocol + '://' + this.info.host + ':' + this.info.port));\n            }\n\n            if (this.settings.operations.cleanStop) {\n                this.sockets = new Set();\n\n                const self = this;\n                const onClose = function () {           // 'this' is bound to the emitter\n\n                    self.sockets.delete(this);\n                };\n\n                this.onConnection = (connection) => {\n\n                    this.sockets.add(connection);\n                    connection.on('close', onClose);\n                };\n\n                this.listener.on(this.settings.tls ? 'secureConnection' : 'connection', this.onConnection);\n            }\n        });\n    }\n\n    _cachePolicy(options, _segment, realm) {\n\n        options = Config.apply('cachePolicy', options);\n\n        const plugin = realm && realm.plugin;\n        const segment = options.segment || _segment || (plugin ? `!${plugin}` : '');\n        Hoek.assert(segment, 'Missing cache segment name');\n\n        const cacheName = options.cache || '_default';\n        const cache = this.caches.get(cacheName);\n        Hoek.assert(cache, 'Unknown cache', cacheName);\n        Hoek.assert(!cache.segments[segment] || cache.shared || options.shared, 'Cannot provision the same cache segment more than once');\n        cache.segments[segment] = true;\n\n        return new Catbox.Policy(options, cache.client, segment);\n    }\n\n    log(tags, data) {\n\n        return this._log(tags, data, 'app');\n    }\n\n    _log(tags, data, channel = 'internal') {\n\n        if (!this.events.hasListeners('log')) {\n            return;\n        }\n\n        if (!Array.isArray(tags)) {\n            tags = [tags];\n        }\n\n        const timestamp = Date.now();\n        const field = (data instanceof Error ? 'error' : 'data');\n\n        let event = { timestamp, tags, [field]: data, channel };\n\n        if (typeof data === 'function') {\n            event = () => ({ timestamp, tags, data: data(), channel });\n        }\n\n        this.events.emit({ name: 'log', tags, channel }, event);\n    }\n};\n\n\ninternals.setup = function (options = {}) {\n\n    let settings = Hoek.cloneWithShallow(options, ['listener', 'routes.bind']);\n    settings.routes = Config.enable(settings.routes);\n    settings = Config.apply('server', settings);\n\n    if (settings.port === undefined) {\n        settings.port = 0;\n    }\n\n    const type = (typeof settings.port === 'string' ? 'socket' : 'tcp');\n    if (type === 'socket') {\n        settings.port = (settings.port.indexOf('/') !== -1 ? Path.resolve(settings.port) : settings.port.toLowerCase());\n    }\n\n    if (settings.autoListen === undefined) {\n        settings.autoListen = true;\n    }\n\n    Hoek.assert(settings.autoListen || !settings.port, 'Cannot specify port when autoListen is false');\n    Hoek.assert(settings.autoListen || !settings.address, 'Cannot specify address when autoListen is false');\n\n    return { settings, type };\n};\n\n\ninternals.notFound = function () {\n\n    throw Boom.notFound();\n};\n\n\ninternals.badRequest = function () {\n\n    throw Boom.badRequest();\n};\n\n\ninternals.onFinish = function (env) {\n\n    const { core, req } = env;\n\n    req.socket._isHapiProcessing = false;\n    if (!core.started) {\n        req.socket.end();\n    }\n};\n\n\ninternals.Queue = class {\n\n    constructor(options) {\n\n        this.settings = options;\n\n        this.active = 0;\n        this.queue = [];\n    }\n\n    add(request) {\n\n        if (this.settings.concurrent) {\n            this.queue.push(request);\n            this.next();\n        }\n        else {\n            request._execute();\n        }\n    }\n\n    next() {\n\n        if (this.queue.length &&\n            this.active < this.settings.concurrent) {\n\n            const request = this.queue.shift();\n            ++this.active;\n            request._execute();\n        }\n    }\n\n    release() {\n\n        if (this.settings.concurrent) {\n            --this.active;\n            this.next();\n        }\n    }\n};\n","'use strict';\n\n// Load modules\n\nconst Boom = require('boom');\nconst Hoek = require('hoek');\n\nlet Route = null;                           // Delayed load due to circular dependency\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports.route = function (options) {\n\n    if (!options) {\n        return false;\n    }\n\n    const settings = Hoek.clone(options);\n    settings._headers = settings.headers.concat(settings.additionalHeaders);\n    settings._headersString = settings._headers.join(',');\n    for (let i = 0; i < settings._headers.length; ++i) {\n        settings._headers[i] = settings._headers[i].toLowerCase();\n    }\n\n    if (settings._headers.indexOf('origin') === -1) {\n        settings._headers.push('origin');\n    }\n\n    settings._exposedHeaders = settings.exposedHeaders.concat(settings.additionalExposedHeaders).join(',');\n\n    if (settings.origin === 'ignore') {\n        settings._origin = false;\n    }\n    else if (settings.origin.indexOf('*') !== -1) {\n        Hoek.assert(settings.origin.length === 1, 'Cannot specify cors.origin * together with other values');\n        settings._origin = true;\n    }\n    else {\n        settings._origin = {\n            qualified: [],\n            wildcards: []\n        };\n\n        for (const origin of settings.origin) {\n            if (origin.indexOf('*') !== -1) {\n                settings._origin.wildcards.push(new RegExp('^' + Hoek.escapeRegex(origin).replace(/\\\\\\*/g, '.*').replace(/\\\\\\?/g, '.') + '$'));\n            }\n            else {\n                settings._origin.qualified.push(origin);\n            }\n        }\n    }\n\n    return settings;\n};\n\n\nexports.options = function (route, server) {\n\n    if (route.method === 'options' ||\n        !route.settings.cors) {\n\n        return;\n    }\n\n    exports.handler(server);\n};\n\n\nexports.handler = function (server) {\n\n    Route = Route || require('./route');\n\n    if (server._core.router.specials.options) {\n        return;\n    }\n\n    const definition = {\n        method: '_special',\n        path: '/{p*}',\n        handler: internals.handler,\n        options: {\n            cors: false\n        }\n    };\n\n    const route = new Route(definition, server, { special: true });\n    server._core.router.special('options', route);\n};\n\n\ninternals.handler = function (request, h) {\n\n    // Validate CORS preflight request\n\n    const method = request.headers['access-control-request-method'];\n    if (!method) {\n        throw Boom.notFound('CORS error: Missing Access-Control-Request-Method header');\n    }\n\n    // Lookup route\n\n    const route = request.server.match(method, request.path, request.info.hostname);\n    if (!route) {\n        throw Boom.notFound();\n    }\n\n    const settings = route.settings.cors;\n    if (!settings) {\n        return { message: 'CORS is disabled for this route' };\n    }\n\n    // Validate Origin header\n\n    const origin = request.headers.origin;\n\n    if (!origin &&\n        settings._origin !== false) {\n\n        throw Boom.notFound('CORS error: Missing Origin header');\n    }\n\n    if (!exports.matchOrigin(origin, settings)) {\n        return { message: 'CORS error: Origin not allowed' };\n    }\n\n    // Validate allowed headers\n\n    let headers = request.headers['access-control-request-headers'];\n    if (headers) {\n        headers = headers.toLowerCase().split(/\\s*,\\s*/);\n        if (Hoek.intersect(headers, settings._headers).length !== headers.length) {\n            return { message: 'CORS error: Some headers are not allowed' };\n        }\n    }\n\n    // Reply with the route CORS headers\n\n    const response = h.response();\n    response._header('access-control-allow-origin', settings._origin ? origin : '*');\n    response._header('access-control-allow-methods', method);\n    response._header('access-control-allow-headers', settings._headersString);\n    response._header('access-control-max-age', settings.maxAge);\n\n    if (settings.credentials) {\n        response._header('access-control-allow-credentials', 'true');\n    }\n\n    if (settings._exposedHeaders) {\n        response._header('access-control-expose-headers', settings._exposedHeaders);\n    }\n\n    return response;\n};\n\n\nexports.headers = function (request) {\n\n    const settings = request.route.settings.cors;\n    const response = request.response;\n\n    if (settings._origin !== false) {\n        response.vary('origin');\n    }\n\n    if ((request.info.cors && !request.info.cors.isOriginMatch) ||                          // After route lookup\n        !exports.matchOrigin(request.headers.origin, request.route.settings.cors)) {        // Response from onRequest\n\n        return;\n    }\n\n    response._header('access-control-allow-origin', settings._origin ? request.headers.origin : '*');\n\n    if (settings.credentials) {\n        response._header('access-control-allow-credentials', 'true');\n    }\n\n    if (settings._exposedHeaders) {\n        response._header('access-control-expose-headers', settings._exposedHeaders, { append: true });\n    }\n};\n\n\nexports.matchOrigin = function (origin, settings) {\n\n    if (settings._origin === true ||\n        settings._origin === false) {\n\n        return true;\n    }\n\n    if (!origin) {\n        return false;\n    }\n\n    if (settings._origin.qualified.indexOf(origin) !== -1) {\n        return true;\n    }\n\n    for (const wildcard of settings._origin.wildcards) {\n        if (origin.match(wildcard)) {\n            return true;\n        }\n    }\n\n    return false;\n};\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\nconst Topo = require('topo');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports = module.exports = internals.Ext = class {\n\n    constructor(type, core) {\n\n        this._topo = new Topo();\n        this._core = core;\n        this._routes = [];\n\n        this.type = type;\n        this.nodes = null;\n    }\n\n    add(event) {\n\n        const methods = [].concat(event.method);\n        const options = event.options;\n\n        for (const method of methods) {\n            const settings = {\n                before: options.before,\n                after: options.after,\n                group: event.realm.plugin,\n                sort: this._core.extensionsSeq++\n            };\n\n            const node = {\n                func: method,                       // Request: function (request, h), Server: function (server)\n                bind: options.bind,\n                server: event.server,               // Server event\n                realm: event.realm\n            };\n\n            this._topo.add(node, settings);\n        }\n\n        this.nodes = this._topo.nodes;\n\n        // Notify routes\n\n        for (const route of this._routes) {\n            route.rebuild(event);\n        }\n    }\n\n    merge(others) {\n\n        const merge = [];\n        for (const other of others) {\n            merge.push(other._topo);\n        }\n\n        this._topo.merge(merge);\n        this.nodes = (this._topo.nodes.length ? this._topo.nodes : null);\n    }\n\n    subscribe(route) {\n\n        this._routes.push(route);\n    }\n\n    static combine(route, type) {\n\n        const ext = new internals.Ext(type, route._core);\n\n        const events = route.settings.ext[type];\n        if (events) {\n            for (let event of events) {\n                event = Hoek.shallow(event);\n                Hoek.assert(!event.options.sandbox, 'Cannot specify sandbox option for route extension');\n                event.realm = route.realm;\n                ext.add(event);\n            }\n        }\n\n        const server = route._core.extensions.route[type];\n        const realm = route.realm._extensions[type];\n\n        ext.merge([server, realm]);\n\n        server.subscribe(route);\n        realm.subscribe(route);\n\n        return ext;\n    }\n};\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports.execute = async function (request) {\n\n    // Prerequisites\n\n    if (request._route._prerequisites) {\n        for (const set of request._route._prerequisites) {      // Serial execution of each set\n            const pres = [];\n            for (const item of set) {\n                pres.push(internals.handler(request, item.method, item));\n            }\n\n            const responses = await Promise.all(pres);                          // Parallel execution within sets\n            for (const response of responses) {\n                if (response !== undefined) {\n                    return response;\n                }\n            }\n        }\n    }\n\n    // Handler\n\n    const result = await internals.handler(request, request.route.settings.handler);\n    if (result._takeover ||\n        typeof result === 'symbol') {\n\n        return result;\n    }\n\n    request._setResponse(result);\n};\n\n\ninternals.handler = async function (request, method, pre) {\n\n    const bind = request.route.settings.bind;\n    const realm = request.route.realm;\n    let response = await request._core.toolkit.execute(method, request, { bind, realm, continue: 'null' });\n\n    // Handler\n\n    if (!pre) {\n        if (response.isBoom) {\n            request._log(['handler', 'error'], response);\n            throw response;\n        }\n\n        return response;\n    }\n\n    // Pre\n\n    if (response.isBoom) {\n        response.assign = pre.assign;\n        response = await request._core.toolkit.failAction(request, pre.failAction, response, { tags: ['pre', 'error'], retain: true });\n    }\n\n    if (typeof response === 'symbol') {\n        return response;\n    }\n\n    if (pre.assign) {\n        request.pre[pre.assign] = (response.isBoom ? response : response.source);\n        request.preResponses[pre.assign] = response;\n    }\n\n    if (response._takeover) {\n        return response;\n    }\n};\n\n\nexports.defaults = function (method, handler, core) {\n\n    let defaults = null;\n\n    if (typeof handler === 'object') {\n        const type = Object.keys(handler)[0];\n        const serverHandler = core._decorations.handler[type];\n\n        Hoek.assert(serverHandler, 'Unknown handler:', type);\n\n        if (serverHandler.defaults) {\n            defaults = (typeof serverHandler.defaults === 'function' ? serverHandler.defaults(method) : serverHandler.defaults);\n        }\n    }\n\n    return defaults || {};\n};\n\n\nexports.configure = function (handler, route) {\n\n    if (typeof handler === 'object') {\n        const type = Object.keys(handler)[0];\n        const serverHandler = route._core._decorations.handler[type];\n\n        Hoek.assert(serverHandler, 'Unknown handler:', type);\n\n        return serverHandler(route.public, handler[type]);\n    }\n\n    return handler;\n};\n\n\nexports.prerequisitesConfig = function (config) {\n\n    if (!config) {\n        return null;\n    }\n\n    /*\n        [\n            [\n                function (request, h) { },\n                {\n                    method: function (request, h) { }\n                    assign: key1\n                },\n                {\n                    method: function (request, h) { },\n                    assign: key2\n                }\n            ],\n            {\n                method: function (request, h) { },\n                assign: key3\n            }\n        ]\n    */\n\n    const prerequisites = [];\n\n    for (let pres of config) {\n        pres = [].concat(pres);\n\n        const set = [];\n        for (let pre of pres) {\n            if (typeof pre !== 'object') {\n                pre = { method: pre };\n            }\n\n            const item = {\n                method: pre.method,\n                assign: pre.assign,\n                failAction: pre.failAction || 'error'\n            };\n\n            set.push(item);\n        }\n\n        prerequisites.push(set);\n    }\n\n    return prerequisites.length ? prerequisites : null;\n};\n","'use strict';\n\n// Load modules\n\nconst Stream = require('stream');\n\nconst Boom = require('boom');\n\nconst Response = require('./response');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports.cache = function (request) {\n\n    const response = request.response;\n    if (response.headers['cache-control']) {\n        return;\n    }\n\n    const settings = request.route.settings.cache;\n    const policy = settings && request._route._cache && (settings._statuses[response.statusCode] || (response.statusCode === 304 && settings._statuses['200']));\n\n    if (policy ||\n        response.settings.ttl) {\n\n        const ttl = (response.settings.ttl !== null ? response.settings.ttl : request._route._cache.ttl());\n        const privacy = (request.auth.isAuthenticated || response.headers['set-cookie'] ? 'private' : settings.privacy || 'default');\n        response._header('cache-control', 'max-age=' + Math.floor(ttl / 1000) + ', must-revalidate' + (privacy !== 'default' ? ', ' + privacy : ''));\n    }\n    else if (settings) {\n        response._header('cache-control', settings.otherwise);\n    }\n};\n\n\nexports.content = async function (request) {\n\n    const response = request.response;\n    if (response._isPayloadSupported() ||\n        request.method === 'head') {\n\n        await response._marshal();\n\n        if (request.jsonp &&\n            response._payload.jsonp) {\n\n            response._header('content-type', 'text/javascript' + (response.settings.charset ? '; charset=' + response.settings.charset : ''));\n            response._header('x-content-type-options', 'nosniff');\n            response._payload.jsonp(request.jsonp);\n        }\n\n        if (response._payload.size &&\n            typeof response._payload.size === 'function') {\n\n            response._header('content-length', response._payload.size(), { override: false });\n        }\n\n        if (!response._isPayloadSupported()) {\n            response._close(request);                       // Close unused file streams\n            response._payload = new internals.Empty();      // Set empty stream\n        }\n\n        exports.type(request, true);\n    }\n    else {\n\n        // Set empty stream\n\n        response._close(request);                           // Close unused file streams\n        response._payload = new internals.Empty();\n        delete response.headers['content-length'];\n    }\n};\n\n\nexports.state = async function (request) {\n\n    const response = request.response;\n    const names = {};\n    const states = [];\n\n    for (const stateName in request._states) {\n        names[stateName] = true;\n        states.push(request._states[stateName]);\n    }\n\n    try {\n        for (const name in request._core.states.cookies) {\n            const autoValue = request._core.states.cookies[name].autoValue;\n            if (!autoValue || names[name]) {\n                continue;\n            }\n\n            names[name] = true;\n\n            if (typeof autoValue !== 'function') {\n                states.push({ name, value: autoValue });\n                continue;\n            }\n\n            const value = await autoValue(request);\n            states.push({ name, value });\n        }\n\n        if (!states.length) {\n            return;\n        }\n\n        let header = await request._core.states.format(states);\n        const existing = response.headers['set-cookie'];\n        if (existing) {\n            header = (Array.isArray(existing) ? existing : [existing]).concat(header);\n        }\n\n        response._header('set-cookie', header);\n    }\n    catch (err) {\n        const error = Boom.boomify(err);\n        request._log(['state', 'response', 'error'], error);\n        request._states = {};                                           // Clear broken state\n        throw error;\n    }\n};\n\n\nexports.type = function (request, postMarshal) {\n\n    const response = request.response;\n    let type = response.headers['content-type'];\n    if (!type) {\n        if (response._contentType) {\n            const charset = (response.settings.charset && response._contentType !== 'application/octet-stream' ? '; charset=' + response.settings.charset : '');\n            response.type(response._contentType + charset);\n        }\n    }\n    else {\n        type = type.trim();\n        if ((!response._contentType || !postMarshal) &&\n            response.settings.charset &&\n            type.match(/^(?:text\\/)|(?:application\\/(?:json)|(?:javascript))/)) {\n\n            if (!type.match(/; *charset=/)) {\n                const semi = (type[type.length - 1] === ';');\n                response.type(type + (semi ? ' ' : '; ') + 'charset=' + (response.settings.charset));\n            }\n        }\n    }\n};\n\n\nexports.entity = function (request) {\n\n    if (!request._entity) {\n        return;\n    }\n\n    const response = request.response;\n\n    if (request._entity.etag &&\n        !response.headers.etag) {\n\n        response.etag(request._entity.etag, { vary: request._entity.vary });\n    }\n\n    if (request._entity.modified &&\n        !response.headers['last-modified']) {\n\n        response.header('last-modified', request._entity.modified);\n    }\n};\n\n\nexports.unmodified = function (request) {\n\n    const response = request.response;\n    if (response.statusCode === 304) {\n        return;\n    }\n\n    const entity = {\n        etag: response.headers.etag,\n        vary: response.settings.varyEtag,\n        modified: response.headers['last-modified']\n    };\n\n    if (Response.unmodified(request, entity)) {\n        response.code(304);\n    }\n};\n\n\ninternals.Empty = class extends Stream.Readable {\n\n    _read(/* size */) {\n\n        this.push(null);\n    }\n\n    writeToStream(stream) {\n\n        stream.end();\n    }\n};\n","'use strict';\n\n// Load modules\n\nconst Server = require('./server');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports.Server = Server;\n\nexports.server = Server;\n","'use strict';\n\n// Load modules\n\nconst Boom = require('boom');\nconst Hoek = require('hoek');\n\nconst Config = require('./config');\n\n\n// Declare internals\n\nconst internals = {\n    methodNameRx: /^[_$a-zA-Z][$\\w]*(?:\\.[_$a-zA-Z][$\\w]*)*$/\n};\n\n\nexports = module.exports = internals.Methods = class {\n\n    constructor(core) {\n\n        this.core = core;\n        this.methods = {};\n    }\n\n    add(name, method, options, realm) {\n\n        if (typeof name !== 'object') {\n            return this._add(name, method, options, realm);\n        }\n\n        // {} or [{}, {}]\n\n        const items = [].concat(name);\n        for (let item of items) {\n            item = Config.apply('methodObject', item);\n            this._add(item.name, item.method, item.options || {}, realm);\n        }\n    }\n\n    _add(name, method, options, realm) {\n\n        Hoek.assert(typeof method === 'function', 'method must be a function');\n        Hoek.assert(typeof name === 'string', 'name must be a string');\n        Hoek.assert(name.match(internals.methodNameRx), 'Invalid name:', name);\n        Hoek.assert(!Hoek.reach(this.methods, name, { functions: false }), 'Server method function name already exists:', name);\n\n        options = Config.apply('method', options, name);\n\n        const settings = Hoek.cloneWithShallow(options, ['bind']);\n        settings.generateKey = settings.generateKey || internals.generateKey;\n\n        const bind = settings.bind || realm.settings.bind || null;\n        const bound = !bind ? method : (...args) => method.apply(bind, args);\n\n        // Not cached\n\n        if (!settings.cache) {\n            return this._assign(name, bound);\n        }\n\n        // Cached\n\n        Hoek.assert(!settings.cache.generateFunc, 'Cannot set generateFunc with method caching:', name);\n        Hoek.assert(settings.cache.generateTimeout !== undefined, 'Method caching requires a timeout value in generateTimeout:', name);\n\n        settings.cache.generateFunc = (id, flags) => bound(...id.args, flags);\n        const cache = this.core._cachePolicy(settings.cache, '#' + name);\n\n        const func = function (...args) {\n\n            const key = settings.generateKey.apply(bind, args);\n            if (typeof key !== 'string') {\n                return Promise.reject(Boom.badImplementation('Invalid method key when invoking: ' + name, { name, args }));\n            }\n\n            return cache.get({ id: key, args });\n        };\n\n        func.cache = {\n            drop: function (...args) {\n\n                const key = settings.generateKey.apply(bind, args);\n                if (typeof key !== 'string') {\n                    return Promise.reject(Boom.badImplementation('Invalid method key when invoking: ' + name, { name, args }));\n                }\n\n                return cache.drop(key);\n            },\n            stats: cache.stats\n        };\n\n        this._assign(name, func, func);\n    }\n\n    _assign(name, method) {\n\n        const path = name.split('.');\n        let ref = this.methods;\n        for (let i = 0; i < path.length; ++i) {\n            if (!ref[path[i]]) {\n                ref[path[i]] = (i + 1 === path.length ? method : {});\n            }\n\n            ref = ref[path[i]];\n        }\n    }\n};\n\n\ninternals.generateKey = function (...args) {\n\n    let key = '';\n    for (let i = 0; i < args.length; ++i) {\n        const arg = args[i];\n        if (typeof arg !== 'string' &&\n            typeof arg !== 'number' &&\n            typeof arg !== 'boolean') {\n\n            return null;\n        }\n\n        key = key + (i ? ':' : '') + encodeURIComponent(arg.toString());\n    }\n\n    return key;\n};\n","'use strict';\n\n// Load modules\n\nconst Url = require('url');\n\nconst Boom = require('boom');\nconst Bounce = require('bounce');\nconst Hoek = require('hoek');\nconst Podium = require('podium');\n\nconst Cors = require('./cors');\nconst Response = require('./response');\nconst Transmit = require('./transmit');\n\n\n// Declare internals\n\nconst internals = {\n    events: Podium.validate(['finish', { name: 'peek', spread: true }, 'disconnect']),\n    reserved: ['server', 'url', 'query', 'path', 'method', 'mime', 'setUrl', 'setMethod', 'headers', 'id', 'app', 'plugins', 'route', 'auth', 'pre', 'preResponses', 'info', 'orig', 'params', 'paramsArray', 'payload', 'state', 'jsonp', 'response', 'raw', 'domain', 'log', 'logs', 'generateResponse']\n};\n\n\nexports = module.exports = internals.Request = class {\n\n    constructor(server, req, res, options) {\n\n        this._allowInternals = !!options.allowInternals;\n        this._core = server._core;\n        this._entity = null;                                                                                // Entity information set via h.entity()\n        this._eventContext = { request: this };\n        this._events = null;                                                                                // Assigned an emitter when request.events is accessed\n        this._expectContinue = !!options.expectContinue;\n        this._isPayloadPending = !!(req.headers['content-length'] || req.headers['transfer-encoding']);     // Changes to false when incoming payload fully processed\n        this._isReplied = false;                                                                            // true when response processing started\n        this._route = this._core.router.specials.notFound.route;                                            // Used prior to routing (only settings are used, not the handler)\n        this._serverTimeoutId = null;\n        this._states = {};\n        this._transmitted = false;                                                                          // Indicates whether a response has been successful sent\n\n        this.app = (options.app ? Hoek.shallow(options.app) : {});                                          // Place for application-specific state without conflicts with hapi, should not be used by plugins\n        this.headers = req.headers;\n        this.info = internals.info(this._core, req);\n        this.jsonp = null;\n        this.logs = [];\n        this.method = req.method.toLowerCase();\n        this.mime = null;\n        this.orig = {};\n        this.params = null;\n        this.paramsArray = null;                                                                            // Array of path parameters in path order\n        this.path = null;\n        this.payload = null;\n        this.plugins = (options.plugins ? Hoek.shallow(options.plugins) : {});                              // Place for plugins to store state without conflicts with hapi, should be namespaced using plugin name\n        this.pre = {};                                                                                      // Pre raw values\n        this.preResponses = {};                                                                             // Pre response values\n        this.raw = { req, res };\n        this.response = null;\n        this.route = this._route.public;\n        this.query = null;\n        this.server = server;\n        this.state = null;\n        this.url = null;\n\n        this.auth = {\n            isAuthenticated: false,\n            isAuthorized: false,\n            credentials: options.credentials || null,       // Special keys: 'app', 'user', 'scope'\n            artifacts: options.artifacts || null,           // Scheme-specific artifacts\n            strategy: null,\n            mode: null,\n            error: null\n        };\n\n        // Parse request url\n\n        this.setUrl(req.url, this._core.settings.router.stripTrailingSlash);\n    }\n\n    static generate(server, req, res, options) {\n\n        const request = new server._core.Request(server, req, res, options);\n\n        // Decorate\n\n        if (server._core._decorations.requestApply) {\n            for (const property in server._core._decorations.requestApply) {\n                const assignment = server._core._decorations.requestApply[property];\n                request[property] = assignment(request);\n            }\n        }\n\n        request._listen();\n        return request;\n    }\n\n    get events() {\n\n        if (!this._events) {\n            this._events = new Podium(internals.events);\n        }\n\n        return this._events;\n    }\n\n    setUrl(url, stripTrailingSlash) {\n\n        Hoek.assert(this.params === null, 'Cannot change request URL after routing');\n\n        url = (typeof url === 'string' ? Url.parse(url, true) : Hoek.clone(url));\n\n        // Apply path modifications\n\n        let path = this._core.router.normalize(url.pathname || '');        // pathname excludes query\n\n        if (stripTrailingSlash &&\n            path.length > 1 &&\n            path[path.length - 1] === '/') {\n\n            path = path.slice(0, -1);\n        }\n\n        // Update derived url properties\n\n        if (path !== url.pathname) {\n            url.pathname = path;\n            url.path = url.search ? path + url.search : path;\n            url.href = Url.format(url);\n        }\n\n        // Store request properties\n\n        this.url = url;\n        this.query = url.query;\n        this.path = url.pathname;\n\n        if (url.hostname) {\n            this.info.hostname = url.hostname;\n            this.info.host = url.host;\n        }\n    }\n\n    setMethod(method) {\n\n        Hoek.assert(this.params === null, 'Cannot change request method after routing');\n        Hoek.assert(method && typeof method === 'string', 'Missing method');\n\n        this.method = method.toLowerCase();\n    }\n\n    active() {\n\n        return !!this._eventContext.request;\n    }\n\n    async _execute() {\n\n        this.info.acceptEncoding = this._core.compression.accept(this);\n\n        try {\n            await this._onRequest();\n        }\n        catch (err) {\n            Bounce.rethrow(err, 'system');\n            return this._reply(err);\n        }\n\n        this._lookup();\n        this._setTimeouts();\n        await this._lifecycle();\n        this._reply();\n    }\n\n    async _onRequest() {\n\n        // onRequest (can change request method and url)\n\n        if (this._core.extensions.route.onRequest.nodes) {\n            const response = await this._invoke(this._core.extensions.route.onRequest);\n            if (response) {\n                if (!internals.skip(response)) {\n                    throw Boom.badImplementation('onRequest extension methods must return an error, a takeover response, or a continue signal');\n                }\n\n                throw response;\n            }\n        }\n\n        // Validate path\n\n        if (!this.path ||\n            this.path[0] !== '/') {\n\n            throw Boom.badRequest('Invalid path');\n        }\n    }\n\n    _listen() {\n\n        if (this._isPayloadPending) {\n            this.raw.req.on('end', internals.event.bind(this.raw.req, this._eventContext, 'end'));\n        }\n\n        this.raw.req.on('close', internals.event.bind(this.raw.req, this._eventContext, 'close'));\n        this.raw.req.on('error', internals.event.bind(this.raw.req, this._eventContext, 'error'));\n        this.raw.req.on('aborted', internals.event.bind(this.raw.req, this._eventContext, 'abort'));\n    }\n\n    _lookup() {\n\n        const match = this._core.router.route(this.method, this.path, this.info.hostname);\n        if (!match.route.settings.isInternal ||\n            this._allowInternals) {\n\n            this._route = match.route;\n            this.route = this._route.public;\n        }\n\n        this.params = match.params || {};\n        this.paramsArray = match.paramsArray || [];\n\n        if (this.route.settings.cors) {\n            this.info.cors = {\n                isOriginMatch: Cors.matchOrigin(this.headers.origin, this.route.settings.cors)\n            };\n        }\n    }\n\n    _setTimeouts() {\n\n        if (this.raw.req.socket &&\n            this.route.settings.timeout.socket !== undefined) {\n\n            this.raw.req.socket.setTimeout(this.route.settings.timeout.socket || 0);    // Value can be false or positive\n        }\n\n        let serverTimeout = this.route.settings.timeout.server;\n        if (!serverTimeout) {\n            return;\n        }\n\n        const elapsed = Date.now() - this.info.received;\n        serverTimeout = Math.floor(serverTimeout - elapsed);            // Calculate the timeout from when the request was constructed\n\n        if (serverTimeout <= 0) {\n            internals.timeoutReply(this, serverTimeout);\n            return;\n        }\n\n        this._serverTimeoutId = setTimeout(internals.timeoutReply, serverTimeout, this, serverTimeout);\n    }\n\n    async _lifecycle() {\n\n        for (const func of this._route._cycle) {\n            if (this._isReplied ||\n                !this._eventContext.request) {\n\n                return;\n            }\n\n            try {\n                var response = (typeof func === 'function' ? func(this) : this._invoke(func));\n                if (response && typeof response.then === 'function') {          // Skip await if no reason to\n                    response = await response;\n                }\n            }\n            catch (err) {\n                Bounce.rethrow(err, 'system');\n                response = Response.wrap(err, this);\n            }\n\n            if (!response ||\n                response === this._core.toolkit.continue) {                     // Continue\n\n                continue;\n            }\n\n            if (!internals.skip(response)) {\n                response = Boom.badImplementation('Lifecycle methods called before the handler can only return an error, a takeover response, or a continue signal');\n            }\n\n            this._setResponse(response);\n            return;\n        }\n    }\n\n    async _invoke(event) {\n\n        for (const ext of event.nodes) {\n            const bind = (ext.bind || ext.realm.settings.bind);\n            const realm = ext.realm;\n            const response = await this._core.toolkit.execute(ext.func, this, { bind, realm });\n\n            if (response === this._core.toolkit.continue) {\n                continue;\n            }\n\n            if (internals.skip(response) ||\n                this.response === null) {\n\n                return response;\n            }\n\n            this._setResponse(response);\n        }\n    }\n\n    async _reply(exit) {\n\n        if (this._isReplied) {                                          // Prevent any future responses to this request\n            return;\n        }\n\n        this._isReplied = true;\n\n        if (this._serverTimeoutId) {\n            clearTimeout(this._serverTimeoutId);\n        }\n\n        if (!this._eventContext.request) {\n            this._finalize();\n            return;\n        }\n\n        if (exit) {                                                     // Can be a valid response or error (if returned from an ext, already handled because this.response is also set)\n            this._setResponse(Response.wrap(exit, this));               // Wrap to ensure any object thrown is always a valid Boom or Response object\n        }\n\n        if (typeof this.response === 'symbol') {                        // close or abandon\n            this._abort();\n            return;\n        }\n\n        await this._postCycle();\n\n        if (!this._eventContext.request ||\n            typeof this.response === 'symbol') {                        // close or abandon\n\n            this._abort();\n            return;\n        }\n\n        await Transmit.send(this);\n        this._finalize();\n    }\n\n    async _postCycle() {\n\n        for (const func of this._route._postCycle) {\n            if (!this._eventContext.request) {\n                return;\n            }\n\n            try {\n                var response = await (typeof func === 'function' ? func(this) : this._invoke(func));\n            }\n            catch (err) {\n                Bounce.rethrow(err, 'system');\n                response = Response.wrap(err, this);\n            }\n\n            if (response &&\n                response !== this._core.toolkit.continue) {                     // Continue\n\n                this._setResponse(response);\n            }\n        }\n    }\n\n    _abort() {\n\n        if (this.response === this._core.toolkit.close) {\n            this.raw.res.end();                                     // End the response in case it wasn't already closed\n        }\n\n        this._finalize();\n    }\n\n    _finalize() {\n\n        this.info.responded = Date.now();\n\n        if (this.response &&\n            this.response.statusCode === 500 &&\n            this.response._error) {\n\n            const tags = this.response._error.isDeveloperError ? ['internal', 'implementation', 'error'] : ['internal', 'error'];\n            this._log(tags, this.response._error, 'error');\n        }\n\n        // Cleanup\n\n        this._eventContext.request = null;              // Disable req events\n\n        if (this.response &&\n            this.response._close) {\n\n            this.response._close(this);\n        }\n\n        if (!this._transmitted) {\n            this.response = null;\n        }\n\n        this._core.events.emit('response', this);\n        this._core.queue.release();\n    }\n\n    _setResponse(response) {\n\n        if (this.response &&\n            !this.response.isBoom &&\n            this.response !== response &&\n            (response.isBoom || this.response.source !== response.source)) {\n\n            this.response._close(this);\n        }\n\n        if (this.info.responded) {\n            if (response._close) {\n                response._close(this);\n            }\n\n            return;\n        }\n\n        this.response = response;\n    }\n\n    _setState(name, value, options) {\n\n        const state = { name, value };\n        if (options) {\n            Hoek.assert(!options.autoValue, 'Cannot set autoValue directly in a response');\n            state.options = Hoek.clone(options);\n        }\n\n        this._states[name] = state;\n    }\n\n    _clearState(name, options = {}) {\n\n        const state = { name };\n\n        state.options = Hoek.clone(options);\n        state.options.ttl = 0;\n\n        this._states[name] = state;\n    }\n\n    _tap() {\n\n        if (!this._events) {\n            return null;\n        }\n\n        return (this._events.hasListeners('finish') || this._events.hasListeners('peek') ? new Response.Peek(this._events) : null);\n    }\n\n    log(tags, data) {\n\n        return this._log(tags, data, 'app');\n    }\n\n    _log(tags, data, channel = 'internal') {\n\n        if (!this._core.events.hasListeners('request') &&\n            !this.route.settings.log.collect) {\n\n            return;\n        }\n\n        if (!Array.isArray(tags)) {\n            tags = [tags];\n        }\n\n        const timestamp = Date.now();\n        const field = (data instanceof Error ? 'error' : 'data');\n\n        let event = [this, { request: this.info.id, timestamp, tags, [field]: data, channel }];\n        if (typeof data === 'function') {\n            event = () => [this, { request: this.info.id, timestamp, tags, data: data(), channel }];\n        }\n\n        if (this.route.settings.log.collect) {\n            if (typeof data === 'function') {\n                event = event();\n            }\n\n            this.logs.push(event[1]);\n        }\n\n        this._core.events.emit({ name: 'request', channel, tags }, event);\n    }\n\n    generateResponse(source, options) {\n\n        return new Response(source, this, options);\n    }\n};\n\n\ninternals.Request.reserved = internals.reserved;\n\n\ninternals.info = function (core, req) {\n\n    const host = req.headers.host ? req.headers.host.trim() : '';\n    const received = Date.now();\n\n    const info = {\n        received,\n        remoteAddress: req.connection.remoteAddress,\n        remotePort: req.connection.remotePort || '',\n        referrer: req.headers.referrer || req.headers.referer || '',\n        host,\n        hostname: host.split(':')[0],\n        id: `${received}:${core.info.id}:${core.requestCounter.value++}`,\n\n        // Assigned later\n\n        acceptEncoding: null,\n        cors: null,\n        responded: 0\n    };\n\n    if (core.requestCounter.value > core.requestCounter.max) {\n        core.requestCounter.value = core.requestCounter.min;\n    }\n\n    return info;\n};\n\n\ninternals.event = function ({ request }, event, err) {\n\n    if (!request) {\n        return;\n    }\n\n    request._isPayloadPending = false;\n\n    if (event === 'end') {\n        return;\n    }\n\n    request._log(err ? ['request', 'error'] : ['request', 'error', event], err);\n\n    if (event === 'error') {\n        return;\n    }\n\n    request._eventContext.request = null;\n\n    if (event === 'abort' &&\n        request._events) {\n\n        request._events.emit('disconnect');\n    }\n};\n\n\ninternals.timeoutReply = function (request, timeout) {\n\n    const elapsed = Date.now() - request.info.received;\n    request._log(['request', 'server', 'timeout', 'error'], { timeout, elapsed });\n    request._reply(Boom.serverUnavailable());\n};\n\n\ninternals.skip = function (response) {\n\n    return (response.isBoom || response._takeover || typeof response === 'symbol');\n};\n","'use strict';\n\n// Load modules\n\nconst Stream = require('stream');\n\nconst Boom = require('boom');\nconst Bounce = require('bounce');\nconst Hoek = require('hoek');\nconst Podium = require('podium');\n\nconst Streams = require('./streams');\n\n\n// Declare internals\n\nconst internals = {\n    events: Podium.validate(['finish', { name: 'peek', spread: true }]),\n    hopByHop: {\n        connection: true,\n        'keep-alive': true,\n        'proxy-authenticate': true,\n        'proxy-authorization': true,\n        'te': true,\n        'trailers': true,\n        'transfer-encoding': true,\n        'upgrade': true\n    }\n};\n\n\nexports = module.exports = internals.Response = class {\n\n    constructor(source, request, options = {}) {\n\n        this.app = {};\n        this.headers = {};                          // Incomplete as some headers are stored in flags\n        this.plugins = {};\n        this.request = request;\n        this.source = null;\n        this.statusCode = null;\n        this.variety = null;\n\n        this.settings = {\n            encoding: 'utf8',\n            charset: 'utf-8',                       // '-' required by IANA\n            ttl: null,\n            stringify: null,                        // JSON.stringify options\n            passThrough: true,\n            varyEtag: false,\n            message: null\n        };\n\n        this._events = null;\n        this._payload = null;                       // Readable stream\n        this._error = null;                         // The boom object when created from an error (used for logging)\n        this._contentEncoding = null;               // Set during transmit\n        this._contentType = null;                   // Used if no explicit content-type is set and type is known\n        this._takeover = false;\n        this._statusCode = false;                   // true when code() called\n\n        this._processors = {\n            marshal: options.marshal,\n            prepare: options.prepare,\n            close: options.close\n        };\n\n        this.temporary = null;\n        this.permanent = null;\n        this.rewritable = null;\n\n        this._setSource(source, options.variety);\n    }\n\n    static wrap(result, request) {\n\n        if (result instanceof internals.Response) {\n            return result;\n        }\n\n        if (result instanceof Error) {\n            return Boom.boomify(result);\n        }\n\n        return new internals.Response(result, request);\n    }\n\n    _setSource(source, variety) {\n\n        // Method must not set any headers or other properties as source can change later\n\n        this.variety = variety || 'plain';\n\n        if (source === null ||\n            source === undefined) {\n\n            source = null;\n        }\n        else if (Buffer.isBuffer(source)) {\n            this.variety = 'buffer';\n            this._contentType = 'application/octet-stream';\n        }\n        else if (source instanceof Stream) {\n            this.variety = 'stream';\n        }\n\n        this.source = source;\n\n        if (this.variety === 'plain' &&\n            this.source !== null) {\n\n            this._contentType = (typeof this.source === 'string' ? 'text/html' : 'application/json');\n        }\n    }\n\n    get events() {\n\n        if (!this._events) {\n            this._events = new Podium(internals.events);\n        }\n\n        return this._events;\n    }\n\n    code(statusCode) {\n\n        Hoek.assert(Hoek.isInteger(statusCode), 'Status code must be an integer');\n\n        this.statusCode = statusCode;\n        this._statusCode = true;\n\n        return this;\n    }\n\n    message(httpMessage) {\n\n        this.settings.message = httpMessage;\n        return this;\n    }\n\n    header(key, value, options) {\n\n        key = key.toLowerCase();\n        if (key === 'vary') {\n            return this.vary(value);\n        }\n\n        return this._header(key, value, options);\n    }\n\n    _header(key, value, options = {}) {\n\n        const append = options.append || false;\n        const separator = options.separator || ',';\n        const override = options.override !== false;\n        const duplicate = options.duplicate !== false;\n\n        if ((!append && override) ||\n            !this.headers[key]) {\n\n            this.headers[key] = value;\n        }\n        else if (override) {\n            if (key === 'set-cookie') {\n                this.headers[key] = [].concat(this.headers[key], value);\n            }\n            else {\n                const existing = this.headers[key];\n                if (!duplicate) {\n                    const values = existing.split(separator);\n                    for (const v of values) {\n                        if (v === value) {\n                            return this;\n                        }\n                    }\n                }\n\n                this.headers[key] = existing + separator + value;\n            }\n        }\n\n        return this;\n    }\n\n    vary(value) {\n\n        if (value === '*') {\n            this.headers.vary = '*';\n        }\n        else if (!this.headers.vary) {\n            this.headers.vary = value;\n        }\n        else if (this.headers.vary !== '*') {\n            this._header('vary', value, { append: true, duplicate: false });\n        }\n\n        return this;\n    }\n\n    etag(tag, options) {\n\n        const entity = internals.Response.entity(tag, options);\n        this._header('etag', entity.etag);\n        this.settings.varyEtag = entity.vary;\n        return this;\n    }\n\n    static entity(tag, options = {}) {\n\n        Hoek.assert(tag !== '*', 'ETag cannot be *');\n\n        return {\n            etag: (options.weak ? 'W/' : '') + '\"' + tag + '\"',\n            vary: (options.vary !== false && !options.weak),                    // vary defaults to true\n            modified: options.modified\n        };\n    }\n\n    static unmodified(request, options) {\n\n        if (request.method !== 'get' &&\n            request.method !== 'head') {\n\n            return false;\n        }\n\n        // Strong verifier\n\n        if (options.etag &&\n            request.headers['if-none-match']) {\n\n            const ifNoneMatch = request.headers['if-none-match'].split(/\\s*,\\s*/);\n            for (const etag of ifNoneMatch) {\n                if (etag === options.etag) {\n                    return true;\n                }\n\n                if (options.vary) {\n                    const etagBase = options.etag.slice(0, -1);\n                    const encoders = request._core.compression.encodings;\n                    for (const encoder of encoders) {\n                        if (etag === etagBase + `-${encoder}\"`) {\n                            return true;\n                        }\n                    }\n                }\n            }\n\n            return false;\n        }\n\n        // Weak verifier\n\n        const ifModifiedSinceHeader = request.headers['if-modified-since'];\n\n        if (ifModifiedSinceHeader &&\n            options.modified) {\n\n            const ifModifiedSince = internals.parseDate(ifModifiedSinceHeader);\n            const lastModified = internals.parseDate(options.modified);\n\n            if (ifModifiedSince &&\n                lastModified &&\n                ifModifiedSince >= lastModified) {\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    type(type) {\n\n        this._header('content-type', type);\n        return this;\n    }\n\n    bytes(bytes) {\n\n        this._header('content-length', bytes);\n        return this;\n    }\n\n    location(uri) {\n\n        this._header('location', uri);\n        return this;\n    }\n\n    created(location) {\n\n        Hoek.assert(this.request.method === 'post' ||\n            this.request.method === 'put' ||\n            this.request.method === 'patch', 'Cannot return 201 status codes for ' + this.request.method.toUpperCase());\n\n        this.statusCode = 201;\n        this.location(location);\n        return this;\n    }\n\n    replacer(method) {\n\n        this.settings.stringify = this.settings.stringify || {};\n        this.settings.stringify.replacer = method;\n        return this;\n    }\n\n    spaces(count) {\n\n        this.settings.stringify = this.settings.stringify || {};\n        this.settings.stringify.space = count;\n        return this;\n    }\n\n    suffix(suffix) {\n\n        this.settings.stringify = this.settings.stringify || {};\n        this.settings.stringify.suffix = suffix;\n        return this;\n    }\n\n    escape(escape) {\n\n        this.settings.stringify = this.settings.stringify || {};\n        this.settings.stringify.escape = escape;\n        return this;\n    }\n\n    passThrough(enabled) {\n\n        this.settings.passThrough = (enabled !== false);    // Defaults to true\n        return this;\n    }\n\n    redirect(location) {\n\n        this.statusCode = 302;\n        this.location(location);\n        this.temporary = this._temporary;\n        this.permanent = this._permanent;\n        this.rewritable = this._rewritable;\n        return this;\n    }\n\n    _temporary(isTemporary) {\n\n        this._setTemporary(isTemporary !== false);           // Defaults to true\n        return this;\n    }\n\n    _permanent(isPermanent) {\n\n        this._setTemporary(isPermanent === false);           // Defaults to true\n        return this;\n    }\n\n    _rewritable(isRewritable) {\n\n        this._setRewritable(isRewritable !== false);         // Defaults to true\n        return this;\n    }\n\n    _isTemporary() {\n\n        return this.statusCode === 302 || this.statusCode === 307;\n    }\n\n    _isRewritable() {\n\n        return this.statusCode === 301 || this.statusCode === 302;\n    }\n\n    _setTemporary(isTemporary) {\n\n        if (isTemporary) {\n            if (this._isRewritable()) {\n                this.statusCode = 302;\n            }\n            else {\n                this.statusCode = 307;\n            }\n        }\n        else {\n            if (this._isRewritable()) {\n                this.statusCode = 301;\n            }\n            else {\n                this.statusCode = 308;\n            }\n        }\n    }\n\n    _setRewritable(isRewritable) {\n\n        if (isRewritable) {\n            if (this._isTemporary()) {\n                this.statusCode = 302;\n            }\n            else {\n                this.statusCode = 301;\n            }\n        }\n        else {\n            if (this._isTemporary()) {\n                this.statusCode = 307;\n            }\n            else {\n                this.statusCode = 308;\n            }\n        }\n    }\n\n    encoding(encoding) {\n\n        this.settings.encoding = encoding;\n        return this;\n    }\n\n    charset(charset) {\n\n        this.settings.charset = charset || null;\n        return this;\n    }\n\n    ttl(ttl) {\n\n        this.settings.ttl = ttl;\n        return this;\n    }\n\n    state(name, value, options) {\n\n        this.request._setState(name, value, options);\n        return this;\n    }\n\n    unstate(name, options) {\n\n        this.request._clearState(name, options);\n        return this;\n    }\n\n    takeover() {\n\n        this._takeover = true;\n        return this;\n    }\n\n    _prepare() {\n\n        this._passThrough();\n\n        if (!this._processors.prepare) {\n            return this;\n        }\n\n        try {\n            return this._processors.prepare(this);\n        }\n        catch (err) {\n            throw Boom.boomify(err);\n        }\n    }\n\n    _passThrough() {\n\n        if (this.variety === 'stream' &&\n            this.settings.passThrough) {\n\n            if (this.source.statusCode &&\n                !this.statusCode) {\n\n                this.statusCode = this.source.statusCode;                        // Stream is an HTTP response\n            }\n\n            if (this.source.headers) {\n                let headerKeys = Object.keys(this.source.headers);\n\n                if (headerKeys.length) {\n                    const localHeaders = this.headers;\n                    this.headers = {};\n\n                    const connection = this.source.headers.connection;\n                    const byHop = {};\n                    if (connection) {\n                        connection.split(/\\s*,\\s*/).forEach((header) => {\n\n                            byHop[header] = true;\n                        });\n                    }\n\n                    for (const key of headerKeys) {\n                        const lower = key.toLowerCase();\n                        if (!internals.hopByHop[lower] &&\n                            !byHop[lower]) {\n\n                            this.header(lower, Hoek.clone(this.source.headers[key]));     // Clone arrays\n                        }\n                    }\n\n                    headerKeys = Object.keys(localHeaders);\n                    for (const key of headerKeys) {\n                        this.header(key, localHeaders[key], { append: key === 'set-cookie' });\n                    }\n                }\n            }\n        }\n\n        this.statusCode = this.statusCode || 200;\n    }\n\n    async _marshal() {\n\n        let source = this.source;\n\n        // Processor marshal\n\n        if (this._processors.marshal) {\n            try {\n                source = await this._processors.marshal(this);\n            }\n            catch (err) {\n                throw Boom.boomify(err);\n            }\n        }\n\n        // Stream source\n\n        if (source instanceof Stream) {\n            if (typeof source._read !== 'function' || typeof source._readableState !== 'object') {\n                throw Boom.badImplementation('Stream must have a streams2 readable interface');\n            }\n\n            if (source._readableState.objectMode) {\n                throw Boom.badImplementation('Cannot reply with stream in object mode');\n            }\n\n            this._payload = source;\n            return;\n        }\n\n        // Plain source (non string or null)\n\n        const jsonify = (this.variety === 'plain' && source !== null && typeof source !== 'string');\n\n        if (!jsonify &&\n            this.settings.stringify) {\n\n            throw Boom.badImplementation('Cannot set formatting options on non object response');\n        }\n\n        let payload = source;\n\n        if (jsonify) {\n            const options = this.settings.stringify || {};\n            const space = options.space || this.request.route.settings.json.space;\n            const replacer = options.replacer || this.request.route.settings.json.replacer;\n            const suffix = options.suffix || this.request.route.settings.json.suffix || '';\n            const escape = this.request.route.settings.json.escape || false;\n\n            try {\n                if (replacer || space) {\n                    payload = JSON.stringify(payload, replacer, space);\n                }\n                else {\n                    payload = JSON.stringify(payload);\n                }\n            }\n            catch (err) {\n                throw Boom.boomify(err);\n            }\n\n            if (suffix) {\n                payload = payload + suffix;\n            }\n\n            if (escape) {\n                payload = Hoek.escapeJson(payload);\n            }\n        }\n\n        this._payload = new internals.Response.Payload(payload, this.settings);\n    }\n\n    _tap() {\n\n        if (!this._events) {\n            return null;\n        }\n\n        return (this._events.hasListeners('finish') || this._events.hasListeners('peek') ? new internals.Response.Peek(this._events) : null);\n    }\n\n    _close(request) {\n\n        if (this._processors.close) {\n            try {\n                this._processors.close(this);\n            }\n            catch (err) {\n                Bounce.rethrow(err, 'system');\n                request._log(['response', 'cleanup', 'error'], err);\n            }\n        }\n\n        const stream = this._payload || this.source;\n        if (stream instanceof Stream) {\n            internals.Response.drain(stream);\n        }\n    }\n\n    _isPayloadSupported() {\n\n        return (this.request.method !== 'head' && this.statusCode !== 304 && this.statusCode !== 204);\n    }\n\n    static drain(stream) {\n\n        if (stream.unpipe) {\n            stream.unpipe();\n        }\n\n        if (stream.close) {\n            stream.close();\n        }\n        else if (stream.destroy) {\n            stream.destroy();\n        }\n        else {\n            Streams.drain(stream);\n        }\n    }\n};\n\n\ninternals.parseDate = function (string) {\n\n    try {\n        return Date.parse(string);\n    }\n    catch (errIgnore) { }\n};\n\n\ninternals.Response.Payload = class extends Stream.Readable {\n\n    constructor(payload, options) {\n\n        super();\n\n        this._data = payload;\n        this._prefix = null;\n        this._suffix = null;\n        this._sizeOffset = 0;\n        this._encoding = options.encoding;\n    }\n\n    _read(size) {\n\n        if (this._prefix) {\n            this.push(this._prefix, this._encoding);\n        }\n\n        if (this._data) {\n            this.push(this._data, this._encoding);\n        }\n\n        if (this._suffix) {\n            this.push(this._suffix, this._encoding);\n        }\n\n        this.push(null);\n    }\n\n    size() {\n\n        if (!this._data) {\n            return this._sizeOffset;\n        }\n\n        return (Buffer.isBuffer(this._data) ? this._data.length : Buffer.byteLength(this._data, this._encoding)) + this._sizeOffset;\n    }\n\n    jsonp(variable) {\n\n        this._sizeOffset = this._sizeOffset + variable.length + 7;\n        this._prefix = '/**/' + variable + '(';                 // '/**/' prefix prevents CVE-2014-4671 security exploit\n        this._data = (this._data === null || Buffer.isBuffer(this._data)) ? this._data : this._data.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\n        this._suffix = ');';\n    }\n\n    writeToStream(stream) {\n\n        if (this._prefix) {\n            stream.write(this._prefix, this._encoding);\n        }\n\n        if (this._data) {\n            stream.write(this._data, this._encoding);\n        }\n\n        if (this._suffix) {\n            stream.write(this._suffix, this._encoding);\n        }\n\n        stream.end();\n    }\n};\n\n\ninternals.Response.Peek = class extends Stream.Transform {\n\n    constructor(podium) {\n\n        super();\n\n        this._podium = podium;\n        this.on('finish', () => podium.emit('finish'));\n    }\n\n    _transform(chunk, encoding, callback) {\n\n        this._podium.emit('peek', [chunk, encoding]);\n        this.push(chunk, encoding);\n        callback();\n    }\n};\n","'use strict';\n\n// Load modules\n\nconst Boom = require('boom');\nconst Bounce = require('bounce');\nconst Catbox = require('catbox');\nconst Hoek = require('hoek');\nconst Joi = require('joi');\nconst Subtext = require('subtext');\n\nconst Auth = require('./auth');\nconst Config = require('./config');\nconst Cors = require('./cors');\nconst Ext = require('./ext');\nconst Handler = require('./handler');\nconst Headers = require('./headers');\nconst Security = require('./security');\nconst Streams = require('./streams');\nconst Validation = require('./validation');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports = module.exports = internals.Route = class {\n\n    constructor(route, server, options = {}) {\n\n        const core = server._core;\n        const realm = server.realm;\n\n        // Routing information\n\n        const display = `${route.method} ${route.path}`;\n        Config.apply('route', route, display);\n\n        const method = route.method.toLowerCase();\n        Hoek.assert(method !== 'head', 'Method name not allowed:', display);\n\n        const path = (realm.modifiers.route.prefix ? realm.modifiers.route.prefix + (route.path !== '/' ? route.path : '') : route.path);\n        Hoek.assert(path === '/' || path[path.length - 1] !== '/' || !core.settings.router.stripTrailingSlash, 'Path cannot end with a trailing slash when configured to strip:', display);\n\n        const vhost = (realm.modifiers.route.vhost || route.vhost);\n\n        // Prepare configuration\n\n        let config = route.options || route.config || {};\n        if (typeof config === 'function') {\n            config = config.call(realm.settings.bind, server);\n        }\n\n        config = Config.enable(config);     // Shallow clone\n\n        // Rules\n\n        Hoek.assert(!route.rules || !config.rules, 'Route rules can only appear once:', display);           // XOR\n        const rules = (route.rules || config.rules);\n        const rulesConfig = internals.rules(rules, { method, path, vhost }, server);\n        delete config.rules;\n\n        // Handler\n\n        Hoek.assert(route.handler || config.handler, 'Missing or undefined handler:', display);\n        Hoek.assert(!!route.handler ^ !!config.handler, 'Handler must only appear once:', display);         // XOR\n\n        const handler = Config.apply('handler', route.handler || config.handler);\n        delete config.handler;\n\n        const handlerDefaults = Handler.defaults(method, handler, core);\n\n        // Apply settings in order: server <- handler <- realm <- route\n\n        const settings = internals.config([core.settings.routes, handlerDefaults, realm.settings, rulesConfig, config]);\n        this.settings = Config.apply('routeConfig', settings, display);\n\n        // Validate timeouts\n\n        const socketTimeout = (this.settings.timeout.socket === undefined ? 2 * 60 * 1000 : this.settings.timeout.socket);\n        Hoek.assert(!this.settings.timeout.server || !socketTimeout || this.settings.timeout.server < socketTimeout, 'Server timeout must be shorter than socket timeout:', display);\n        Hoek.assert(!this.settings.payload.timeout || !socketTimeout || this.settings.payload.timeout < socketTimeout, 'Payload timeout must be shorter than socket timeout:', display);\n\n        // Route members\n\n        this._core = core;\n        this.path = path;\n        this.method = method;\n        this.realm = realm;\n\n        this.settings.vhost = vhost;\n        this.settings.plugins = this.settings.plugins || {};            // Route-specific plugins settings, namespaced using plugin name\n        this.settings.app = this.settings.app || {};                    // Route-specific application settings\n\n        // Path parsing\n\n        this._special = !!options.special;\n        this._analysis = this._core.router.analyze(this.path);\n        this.params = this._analysis.params;\n        this.fingerprint = this._analysis.fingerprint;\n\n        this.public = {\n            method: this.method,\n            path: this.path,\n            vhost,\n            realm,\n            settings: this.settings,\n            fingerprint: this.fingerprint,\n            auth: {\n                access: (request) => Auth.testAccess(request, this.public)\n            }\n        };\n\n        // Validation\n\n        const validation = this.settings.validate;\n        if (this.method === 'get') {\n\n            // Assert on config, not on merged settings\n\n            Hoek.assert(!config.payload, 'Cannot set payload settings on HEAD or GET request:', display);\n            Hoek.assert(!config.validate || !config.validate.payload, 'Cannot validate HEAD or GET requests:', display);\n\n            validation.payload = null;\n        }\n\n        Hoek.assert(!validation.params || this.params.length, 'Cannot set path parameters validations without path parameters:', display);\n\n        ['headers', 'params', 'query', 'payload'].forEach((type) => {\n\n            validation[type] = Validation.compile(validation[type]);\n        });\n\n        if (this.settings.response.schema !== undefined ||\n            this.settings.response.status) {\n\n            this.settings.response._validate = true;\n\n            const rule = this.settings.response.schema;\n            this.settings.response.status = this.settings.response.status || {};\n            const statuses = Object.keys(this.settings.response.status);\n\n            if (rule === true &&\n                !statuses.length) {\n\n                this.settings.response._validate = false;\n            }\n            else {\n                this.settings.response.schema = Validation.compile(rule);\n                for (const code of statuses) {\n                    this.settings.response.status[code] = Validation.compile(this.settings.response.status[code]);\n                }\n            }\n        }\n\n        // Payload parsing\n\n        if (this.method === 'get') {\n            this.settings.payload = null;\n        }\n        else {\n            this.settings.payload.decoders = this._core.compression._decoders;        // Reference the shared object to keep up to date\n        }\n\n        Hoek.assert(!this.settings.validate.payload || this.settings.payload.parse, 'Route payload must be set to \\'parse\\' when payload validation enabled:', display);\n        Hoek.assert(!this.settings.jsonp || typeof this.settings.jsonp === 'string', 'Bad route JSONP parameter name:', display);\n\n        // Authentication configuration\n\n        this.settings.auth = (this._special ? false : this._core.auth._setupRoute(this.settings.auth, path));\n\n        // Cache\n\n        if (this.method === 'get' &&\n            typeof this.settings.cache === 'object' &&\n            (this.settings.cache.expiresIn || this.settings.cache.expiresAt)) {\n\n            this.settings.cache._statuses = Hoek.mapToObject(this.settings.cache.statuses);\n            this._cache = new Catbox.Policy({ expiresIn: this.settings.cache.expiresIn, expiresAt: this.settings.cache.expiresAt });\n        }\n\n        // CORS\n\n        this.settings.cors = Cors.route(this.settings.cors);\n\n        // Security\n\n        this.settings.security = Security.route(this.settings.security);\n\n        // Handler\n\n        this.settings.handler = Handler.configure(handler, this);\n        this._prerequisites = Handler.prerequisitesConfig(this.settings.pre);\n\n        // Route lifecycle\n\n        this._extensions = {\n            onPreResponse: Ext.combine(this, 'onPreResponse')\n        };\n\n        if (this._special) {\n            this._cycle = [internals.drain, Handler.execute];\n            this.rebuild();\n            return;\n        }\n\n        this._extensions.onPreAuth = Ext.combine(this, 'onPreAuth');\n        this._extensions.onCredentials = Ext.combine(this, 'onCredentials');\n        this._extensions.onPostAuth = Ext.combine(this, 'onPostAuth');\n        this._extensions.onPreHandler = Ext.combine(this, 'onPreHandler');\n        this._extensions.onPostHandler = Ext.combine(this, 'onPostHandler');\n\n        this.rebuild();\n    }\n\n    rebuild(event) {\n\n        if (event) {\n            this._extensions[event.type].add(event);\n        }\n\n        if (this._special) {\n            this._postCycle = (this._extensions.onPreResponse.nodes ? [this._extensions.onPreResponse] : []);\n            this._buildMarshalCycle();\n            return;\n        }\n\n        // Build lifecycle array\n\n        this._cycle = [];\n\n        // 'onRequest'\n\n        if (this.settings.jsonp) {\n            this._cycle.push(internals.parseJSONP);\n        }\n\n        if (this.settings.state.parse) {\n            this._cycle.push(internals.state);\n        }\n\n        if (this._extensions.onPreAuth.nodes) {\n            this._cycle.push(this._extensions.onPreAuth);\n        }\n\n        if (this._core.auth._enabled(this, 'authenticate')) {\n            this._cycle.push(Auth.authenticate);\n        }\n\n        if (this.method !== 'get') {\n            this._cycle.push(internals.payload);\n\n            if (this._core.auth._enabled(this, 'payload')) {\n                this._cycle.push(Auth.payload);\n            }\n        }\n\n        if (this._core.auth._enabled(this, 'authenticate') &&\n            this._extensions.onCredentials.nodes) {\n\n            this._cycle.push(this._extensions.onCredentials);\n        }\n\n        if (this._core.auth._enabled(this, 'access')) {\n            this._cycle.push(Auth.access);\n        }\n\n        if (this._extensions.onPostAuth.nodes) {\n            this._cycle.push(this._extensions.onPostAuth);\n        }\n\n        if (this.settings.validate.headers) {\n            this._cycle.push(Validation.headers);\n        }\n\n        if (this.settings.validate.params) {\n            this._cycle.push(Validation.params);\n        }\n\n        if (this.settings.jsonp) {\n            this._cycle.push(internals.cleanupJSONP);\n        }\n\n        if (this.settings.validate.query) {\n            this._cycle.push(Validation.query);\n        }\n\n        if (this.settings.validate.payload) {\n            this._cycle.push(Validation.payload);\n        }\n\n        if (this._extensions.onPreHandler.nodes) {\n            this._cycle.push(this._extensions.onPreHandler);\n        }\n\n        this._cycle.push(Handler.execute);\n\n        if (this._extensions.onPostHandler.nodes) {\n            this._cycle.push(this._extensions.onPostHandler);\n        }\n\n        this._postCycle = [];\n\n        if (this.settings.response._validate &&\n            this.settings.response.sample !== 0) {\n\n            this._postCycle.push(Validation.response);\n        }\n\n        if (this._extensions.onPreResponse.nodes) {\n            this._postCycle.push(this._extensions.onPreResponse);\n        }\n\n        this._buildMarshalCycle();\n    }\n\n    _buildMarshalCycle() {\n\n        this._marshalCycle = [Headers.type];\n\n        if (this.settings.cors) {\n            this._marshalCycle.push(Cors.headers);\n        }\n\n        if (this.settings.security) {\n            this._marshalCycle.push(Security.headers);\n        }\n\n        this._marshalCycle.push(Headers.entity);\n\n        if (this.method === 'get' ||\n            this.method === '*') {\n\n            this._marshalCycle.push(Headers.unmodified);\n        }\n\n        this._marshalCycle.push(Headers.cache);\n        this._marshalCycle.push(Headers.state);\n        this._marshalCycle.push(Headers.content);\n\n        if (this._core.auth._enabled(this, 'response')) {\n            this._marshalCycle.push(Auth.response);                            // Must be last in case requires access to headers\n        }\n    }\n};\n\n\ninternals.state = async function (request) {\n\n    request.state = {};\n\n    const req = request.raw.req;\n    const cookies = req.headers.cookie;\n    if (!cookies) {\n        return;\n    }\n\n    try {\n        var result = await request._core.states.parse(cookies);\n    }\n    catch (err) {\n        Bounce.rethrow(err, 'system');\n        var parseError = err;\n    }\n\n    const { states, failed = [] } = result || parseError;\n    request.state = states || {};\n\n    // Clear cookies\n\n    for (const item of failed) {\n        if (item.settings.clearInvalid) {\n            request._clearState(item.name);\n        }\n    }\n\n    if (!parseError) {\n        return;\n    }\n\n    parseError.header = cookies;\n\n    return request._core.toolkit.failAction(request, request.route.settings.state.failAction, parseError, { tags: ['state', 'error'] });\n};\n\n\ninternals.payload = async function (request) {\n\n    if (request.method === 'get' ||\n        request.method === 'head') {            // When route.method is '*'\n\n        return;\n    }\n\n    if (request._expectContinue) {\n        request.raw.res.writeContinue();\n    }\n\n    try {\n        const { payload, mime } = await Subtext.parse(request.raw.req, request._tap(), request.route.settings.payload);\n\n        request._isPayloadPending = !!(payload && payload._readableState);\n        request.mime = mime;\n        request.payload = payload;\n    }\n    catch (err) {\n        Bounce.rethrow(err, 'system');\n\n        if (request._isPayloadPending) {\n            await internals.drain(request);\n            request._isPayloadPending = false;\n        }\n        else {\n            request._isPayloadPending = true;\n        }\n\n        request.mime = err.mime;\n        request.payload = null;\n\n        return request._core.toolkit.failAction(request, request.route.settings.payload.failAction, err, { tags: ['payload', 'error'] });\n    }\n};\n\n\ninternals.drain = async function (request) {\n\n    // Flush out any pending request payload not consumed due to errors\n\n    await Streams.drain(request.raw.req);\n    request._isPayloadPending = false;\n};\n\n\ninternals.jsonpRegex = /^[\\w\\$\\[\\]\\.]+$/;\n\n\ninternals.parseJSONP = function (request) {\n\n    const jsonp = request.query[request.route.settings.jsonp];\n    if (jsonp) {\n        if (internals.jsonpRegex.test(jsonp) === false) {\n            throw Boom.badRequest('Invalid JSONP parameter value');\n        }\n\n        request.jsonp = jsonp;\n    }\n};\n\n\ninternals.cleanupJSONP = function (request) {\n\n    if (request.jsonp) {\n        delete request.query[request.route.settings.jsonp];\n    }\n};\n\n\ninternals.config = function (chain) {\n\n    if (!chain.length) {\n        return {};\n    }\n\n    let config = chain[0];\n    for (const item of chain) {\n        config = Hoek.applyToDefaultsWithShallow(config, item, ['bind', 'validate.headers', 'validate.payload', 'validate.params', 'validate.query']);\n    }\n\n    return config;\n};\n\n\ninternals.rules = function (rules, info, server) {\n\n    const configs = [];\n\n    let realm = server.realm;\n    while (realm) {\n        if (realm._rules) {\n            const source = (!realm._rules.settings.validate ? rules : Joi.attempt(rules, realm._rules.settings.validate.schema, realm._rules.settings.validate.options));\n            const config = realm._rules.processor(source, info);\n            if (config) {\n                configs.unshift(config);\n            }\n        }\n\n        realm = realm.parent;\n    }\n\n    return internals.config(configs);\n};\n","'use strict';\n\n// Load modules\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports.route = function (settings) {\n\n    if (!settings) {\n        return null;\n    }\n\n    const security = settings;\n    if (security.hsts) {\n        if (security.hsts === true) {\n            security._hsts = 'max-age=15768000';\n        }\n        else if (typeof security.hsts === 'number') {\n            security._hsts = 'max-age=' + security.hsts;\n        }\n        else {\n            security._hsts = 'max-age=' + (security.hsts.maxAge || 15768000);\n            if (security.hsts.includeSubdomains || security.hsts.includeSubDomains) {\n                security._hsts = security._hsts + '; includeSubDomains';\n            }\n\n            if (security.hsts.preload) {\n                security._hsts = security._hsts + '; preload';\n            }\n        }\n    }\n\n    if (security.xframe) {\n        if (security.xframe === true) {\n            security._xframe = 'DENY';\n        }\n        else if (typeof security.xframe === 'string') {\n            security._xframe = security.xframe.toUpperCase();\n        }\n        else if (security.xframe.rule === 'allow-from') {\n            if (!security.xframe.source) {\n                security._xframe = 'SAMEORIGIN';\n            }\n            else {\n                security._xframe = 'ALLOW-FROM ' + security.xframe.source;\n            }\n        }\n        else {\n            security._xframe = security.xframe.rule.toUpperCase();\n        }\n    }\n\n    return security;\n};\n\n\nexports.headers = function (request) {\n\n    const response = request.response;\n    const security = response.request.route.settings.security;\n\n    if (security._hsts) {\n        response._header('strict-transport-security', security._hsts, { override: false });\n    }\n\n    if (security._xframe) {\n        response._header('x-frame-options', security._xframe, { override: false });\n    }\n\n    if (security.xss) {\n        response._header('x-xss-protection', '1; mode=block', { override: false });\n    }\n\n    if (security.noOpen) {\n        response._header('x-download-options', 'noopen', { override: false });\n    }\n\n    if (security.noSniff) {\n        response._header('x-content-type-options', 'nosniff', { override: false });\n    }\n\n    if (security.referrer !== false) {\n        response._header('referrer-policy', security.referrer, { override: false });\n    }\n};\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\nconst Joi = require('joi');\nconst Shot = require('shot');\n\nconst Config = require('./config');\nconst Core = require('./core');\nconst Cors = require('./cors');\nconst Ext = require('./ext');\nconst Package = require('../package.json');\nconst Request = require('./request');\nconst Route = require('./route');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports = module.exports = function (options) {\n\n    const core = new Core(options);\n    return new internals.Server(core);\n};\n\n\ninternals.Server = class {\n\n    constructor(core, name, parent) {\n\n        this._core = core;\n\n        // Public interface\n\n        this.app = core.app;\n        this.auth = Object.create(this._core.auth);\n        this.auth.strategy = this.auth._strategy.bind(this.auth, this);\n        this.decorations = core.decorations;\n        this.cache = internals.cache(this);\n        this.events = core.events;\n        this.info = core.info;\n        this.listener = core.listener;\n        this.load = core.heavy.load;\n        this.methods = core.methods.methods;\n        this.mime = core.mime;\n        this.plugins = core.plugins;\n        this.registrations = core.registrations;\n        this.settings = core.settings;\n        this.states = core.states;\n        this.type = core.type;\n        this.version = Package.version;\n\n        this.realm = {\n            _extensions: {\n                onPreAuth: new Ext('onPreAuth', core),\n                onCredentials: new Ext('onCredentials', core),\n                onPostAuth: new Ext('onPostAuth', core),\n                onPreHandler: new Ext('onPreHandler', core),\n                onPostHandler: new Ext('onPostHandler', core),\n                onPreResponse: new Ext('onPreResponse', core)\n            },\n            modifiers: {\n                route: {}\n            },\n            parent: (parent ? parent.realm : null),\n            plugin: name,\n            pluginOptions: {},\n            plugins: {},\n            _rules: null,\n            settings: {\n                bind: undefined,\n                files: {\n                    relativeTo: undefined\n                }\n            }\n        };\n\n        // Decorations\n\n        for (const method of core.decorations.server) {\n            this[method] = core._decorations.server[method];\n        }\n\n        core.registerServer(this);\n    }\n\n    _clone(name) {\n\n        return new internals.Server(this._core, name, this);\n    }\n\n    bind(context) {\n\n        Hoek.assert(typeof context === 'object', 'bind must be an object');\n        this.realm.settings.bind = context;\n    }\n\n    control(server) {\n\n        Hoek.assert(server instanceof internals.Server, 'Can only control Server objects');\n\n        this._core.controlled = this._core.controlled || [];\n        this._core.controlled.push(server);\n    }\n\n    decoder(encoding, decoder) {\n\n        return this._core.compression.addDecoder(encoding, decoder);\n    }\n\n    decorate(type, property, method, options = {}) {\n\n        Hoek.assert(this._core.decorations[type], 'Unknown decoration type:', type);\n        Hoek.assert(property, 'Missing decoration property name');\n        Hoek.assert(typeof property === 'string' || typeof property === 'symbol', 'Decoration property must be a string or a symbol');\n\n        const propertyName = property.toString();\n        Hoek.assert(propertyName[0] !== '_', 'Property name cannot begin with an underscore:', propertyName);\n\n        const existing = this._core._decorations[type][property];\n        if (options.extend) {\n            Hoek.assert(type !== 'handler', 'Cannot extent handler decoration:', propertyName);\n            Hoek.assert(existing, `Cannot extend missing ${type} decoration: ${propertyName}`);\n            Hoek.assert(typeof method === 'function', `Extended ${type} decoration method must be a function: ${propertyName}`);\n\n            method = method(existing);\n        }\n        else {\n            Hoek.assert(existing === undefined, `${type[0].toUpperCase() + type.slice(1)} decoration already defined: ${propertyName}`);\n        }\n\n        if (type === 'handler') {\n\n            // Handler\n\n            Hoek.assert(typeof method === 'function', 'Handler must be a function:', propertyName);\n            Hoek.assert(!method.defaults || typeof method.defaults === 'object' || typeof method.defaults === 'function', 'Handler defaults property must be an object or function');\n            Hoek.assert(!options.extend, 'Cannot extend handler decoration:', propertyName);\n        }\n        else if (type === 'request') {\n\n            // Request\n\n            Hoek.assert(Request.reserved.indexOf(property) === -1, 'Cannot override built-in request interface decoration:', propertyName);\n\n            if (options.apply) {\n                this._core._decorations.requestApply = this._core._decorations.requestApply || {};\n                this._core._decorations.requestApply[property] = method;\n            }\n            else {\n                this._core.Request.prototype[property] = method;\n            }\n        }\n        else if (type === 'toolkit') {\n\n            // Toolkit\n\n            Hoek.assert(this._core.toolkit.reserved.indexOf(property) === -1, 'Cannot override built-in toolkit decoration:', propertyName);\n        }\n        else {\n\n            // Server\n\n            if (typeof property === 'string') {\n                Hoek.assert(Object.getOwnPropertyNames(internals.Server.prototype).indexOf(property) === -1, 'Cannot override the built-in server interface method:', propertyName);\n            }\n            else {\n                Hoek.assert(Object.getOwnPropertySymbols(internals.Server.prototype).indexOf(property) === -1, 'Cannot override the built-in server interface method:', propertyName);\n            }\n\n            this._core.instances.forEach((server) => {\n\n                server[property] = method;\n            });\n        }\n\n        this._core._decorations[type][property] = method;\n        this._core.decorations[type].push(property);\n    }\n\n    dependency(dependencies, after) {\n\n        Hoek.assert(this.realm.plugin, 'Cannot call dependency() outside of a plugin');\n        Hoek.assert(!after || typeof after === 'function', 'Invalid after method');\n\n        dependencies = [].concat(dependencies);\n        this._core.dependencies.push({ plugin: this.realm.plugin, deps: dependencies });\n\n        if (after) {\n            this.ext('onPreStart', after, { after: dependencies });\n        }\n    }\n\n    encoder(encoding, encoder) {\n\n        return this._core.compression.addEncoder(encoding, encoder);\n    }\n\n    event(event) {\n\n        this._core.events.registerEvent(event);\n    }\n\n    expose(key, value) {\n\n        Hoek.assert(this.realm.plugin, 'Cannot call expose() outside of a plugin');\n\n        const plugin = this.realm.plugin;\n        this._core.plugins[plugin] = this._core.plugins[plugin] || {};\n\n        if (typeof key === 'string') {\n            this._core.plugins[plugin][key] = value;\n        }\n        else {\n            Hoek.merge(this._core.plugins[plugin], key);\n        }\n    }\n\n    ext(events, method, options) {        // (event, method, options) -OR- (events)\n\n        if (typeof events === 'string') {\n            events = { type: events, method, options };\n        }\n\n        events = Config.apply('exts', events);\n        for (const event of events) {\n            this._ext(event);\n        }\n    }\n\n    _ext(event) {\n\n        event = Hoek.shallow(event);\n        event.realm = this.realm;\n        const type = event.type;\n\n        if (!this._core.extensions.server[type]) {\n\n            // Realm route extensions\n\n            if (event.options.sandbox === 'plugin') {\n                Hoek.assert(this.realm._extensions[type], 'Unknown event type', type);\n                return this.realm._extensions[type].add(event);\n            }\n\n            // Connection route extensions\n\n            Hoek.assert(this._core.extensions.route[type], 'Unknown event type', type);\n            return this._core.extensions.route[type].add(event);\n        }\n\n        // Server extensions\n\n        Hoek.assert(!event.options.sandbox, 'Cannot specify sandbox option for server extension');\n        Hoek.assert(type !== 'onPreStart' || this._core.phase === 'stopped', 'Cannot add onPreStart (after) extension after the server was initialized');\n\n        event.server = this;\n        this._core.extensions.server[type].add(event);\n    }\n\n    async inject(options) {\n\n        let settings = options;\n        if (typeof settings === 'string') {\n            settings = { url: settings };\n        }\n\n        if (!settings.authority ||\n            settings.credentials ||\n            settings.app ||\n            settings.plugins ||\n            settings.allowInternals !== undefined) {        // Can be false\n\n            settings = Hoek.shallow(settings);              // options can be reused\n            delete settings.credentials;\n            delete settings.artifacts;                      // Cannot appear without credentials\n            delete settings.app;\n            delete settings.plugins;\n            delete settings.allowInternals;\n\n            settings.authority = settings.authority || (this._core.info.host + ':' + this._core.info.port);\n        }\n\n        const needle = this._core._dispatch({\n            credentials: options.credentials,\n            artifacts: options.artifacts,\n            allowInternals: options.allowInternals,\n            app: options.app,\n            plugins: options.plugins\n        });\n\n        const res = await Shot.inject(needle, settings);\n        const custom = res.raw.res[Config.symbol];\n        if (custom) {\n            res.result = custom.result;\n            res.request = custom.request;\n            delete res.raw.res[Config.symbol];\n        }\n\n        if (res.result === undefined) {\n            res.result = res.payload;\n        }\n\n        return res;\n    }\n\n    log(tags, data) {\n\n        return this._core.log(tags, data);\n    }\n\n    lookup(id) {\n\n        Hoek.assert(id && typeof id === 'string', 'Invalid route id:', id);\n\n        const record = this._core.router.ids[id];\n        if (!record) {\n            return null;\n        }\n\n        return record.route.public;\n    }\n\n    match(method, path, host) {\n\n        Hoek.assert(method && typeof method === 'string', 'Invalid method:', method);\n        Hoek.assert(path && typeof path === 'string' && path[0] === '/', 'Invalid path:', path);\n        Hoek.assert(!host || typeof host === 'string', 'Invalid host:', host);\n\n        const match = this._core.router.route(method.toLowerCase(), path, host);\n        Hoek.assert(match !== this._core.router.specials.badRequest, 'Invalid path:', path);\n        if (match === this._core.router.specials.notFound) {\n            return null;\n        }\n\n        return match.route.public;\n    }\n\n    method(name, method, options = {}) {\n\n        return this._core.methods.add(name, method, options, this.realm);\n    }\n\n    path(relativeTo) {\n\n        Hoek.assert(relativeTo && typeof relativeTo === 'string', 'relativeTo must be a non-empty string');\n        this.realm.settings.files.relativeTo = relativeTo;\n    }\n\n    async register(plugins, options = {}) {\n\n        if (this.realm.modifiers.route.prefix ||\n            this.realm.modifiers.route.vhost) {\n\n            options = Hoek.clone(options);\n            options.routes = options.routes || {};\n\n            options.routes.prefix = (this.realm.modifiers.route.prefix || '') + (options.routes.prefix || '') || undefined;\n            options.routes.vhost = this.realm.modifiers.route.vhost || options.routes.vhost;\n        }\n\n        options = Config.apply('register', options);\n\n        ++this._core.registring;\n\n        try {\n            const items = [].concat(plugins);\n            for (let item of items) {\n\n                /*\n                    { register, ...attributes }\n                    { plugin: { register, ...attributes }, options, once, routes }\n                    { plugin: { plugin: { register, ...attributes } }, options, once, routes }      // Required module\n                */\n\n                if (!item.plugin) {\n                    item = {\n                        plugin: item\n                    };\n                }\n                else if (!item.plugin.register) {\n                    item = {\n                        options: item.options,\n                        once: item.once,\n                        routes: item.routes,\n                        plugin: item.plugin.plugin\n                    };\n                }\n                else if (typeof item === 'function') {\n                    item = Hoek.shallow(item);\n                }\n\n                item = Config.apply('plugin', item);\n\n                const name = item.plugin.name || item.plugin.pkg.name;\n                const clone = this._clone(name);\n\n                clone.realm.modifiers.route.prefix = item.routes.prefix || options.routes.prefix;\n                clone.realm.modifiers.route.vhost = item.routes.vhost || options.routes.vhost;\n                clone.realm.pluginOptions = item.options || {};\n\n                // Protect against multiple registrations\n\n                if (this._core.registrations[name]) {\n                    if (item.plugin.once ||\n                        item.once ||\n                        options.once) {\n\n                        continue;\n                    }\n\n                    Hoek.assert(item.plugin.multiple, 'Plugin', name, 'already registered');\n                }\n                else {\n                    this._core.registrations[name] = {\n                        version: item.plugin.version || item.plugin.pkg.version,\n                        name,\n                        options: item.options\n                    };\n                }\n\n                if (item.plugin.dependencies) {\n                    clone.dependency(item.plugin.dependencies);\n                }\n\n                // Register\n\n                await item.plugin.register(clone, item.options || {});\n            }\n        }\n        catch (err) {\n            throw err;\n        }\n        finally {\n            --this._core.registring;\n        }\n    }\n\n    route(options) {\n\n        Hoek.assert(typeof options === 'object', 'Invalid route options');\n\n        options = [].concat(options);\n        for (const config of options) {\n            if (Array.isArray(config.method)) {\n                for (const method of config.method) {\n                    const settings = Hoek.shallow(config);\n                    settings.method = method;\n                    this._addRoute(settings, this);\n                }\n            }\n            else {\n                this._addRoute(config, this);\n            }\n        }\n    }\n\n    _addRoute(config, server) {\n\n        const route = new Route(config, server);                        // Do no use config beyond this point, use route members\n        const vhosts = [].concat(route.settings.vhost || '*');\n\n        for (const vhost of vhosts) {\n            const record = this._core.router.add({ method: route.method, path: route.path, vhost, analysis: route._analysis, id: route.settings.id }, route);\n            route.fingerprint = record.fingerprint;\n            route.params = record.params;\n        }\n\n        this.events.emit('route', route.public);\n        Cors.options(route.public, server);\n    }\n\n    rules(processor, options = {}) {\n\n        Hoek.assert(!this.realm._rules, 'Server realm rules already defined');\n\n        const settings = Config.apply('rules', options);\n        if (settings.validate) {\n            const schema = settings.validate.schema;\n            settings.validate.schema = Joi.compile(schema);\n        }\n\n        this.realm._rules = { processor, settings };\n    }\n\n    state(name, options) {\n\n        this.states.add(name, options);\n    }\n\n    table(host) {\n\n        return this._core.router.table(host);\n    }\n\n    start() {\n\n        return this._core._start();\n    }\n\n    initialize() {\n\n        return this._core._initialize();\n    }\n\n    stop(options) {\n\n        return this._core._stop(options);\n    }\n};\n\n\ninternals.cache = (plugin) => {\n\n    const policy = function (options, _segment) {\n\n        return this._core._cachePolicy(options, _segment, plugin.realm);\n    };\n\n    policy.provision = async (opts) => {\n\n        const clients = plugin._core._createCache(opts);\n\n        // Start cache\n\n        if (['initialized', 'starting', 'started'].indexOf(plugin._core.phase) !== -1) {\n            await Promise.all(clients.map((client) => client.start()));\n        }\n    };\n\n    return policy;\n};\n","'use strict';\n\n// Load modules\n\nconst Teamwork = require('teamwork');\n\n\n// Declare internals\n\nconst internals = {\n    team: Symbol('team')\n};\n\n\nexports.drain = function (stream) {\n\n    const team = new Teamwork();\n    stream[internals.team] = team;\n\n    stream.on('readable', internals.read);\n    stream.on('error', internals.end);\n    stream.on('end', internals.end);\n\n    return team.work;\n};\n\n\ninternals.read = function () {\n\n    this.read();\n};\n\n\ninternals.end = function () {\n\n    this.removeListener('readable', internals.read);\n    this.removeListener('error', internals.end);\n    this.removeListener('end', internals.end);\n\n    this[internals.team].attend();\n};\n","'use strict';\n\n// Load modules\n\nconst Boom = require('boom');\nconst Bounce = require('bounce');\nconst Hoek = require('hoek');\n\nconst Response = require('./response');\n\n\n// Declare internals\n\nconst internals = {\n    reserved: ['abandon', 'authenticated', 'close', 'context', 'continue', 'entity', 'redirect', 'realm', 'request', 'response', 'state', 'unauthenticated', 'unstate']\n};\n\n\nexports = module.exports = internals.Manager = class {\n\n    constructor() {\n\n        this.abandon = Symbol('abandon');\n        this.close = Symbol('close');\n        this.continue = Symbol('continue');\n        this.reserved = internals.reserved;\n    }\n\n    async execute(method, request, options) {\n\n        const h = new internals.Toolkit(request, this, options);\n        const bind = options.bind || null;\n\n        try {\n            var response = await (options.args ? method.call(bind, request, h, ...options.args) : method.call(bind, request, h));\n        }\n        catch (err) {\n            if (Bounce.isSystem(err)) {\n                response = Boom.badImplementation(err);\n            }\n            else if (!Bounce.isError(err)) {\n                response = Boom.badImplementation('Cannot throw non-error object', err);\n            }\n            else {\n                response = Boom.boomify(err);\n            }\n        }\n\n        // Process response\n\n        if (response === undefined) {\n            response = Boom.badImplementation(`${method.name} method did not return a value, a promise, or throw an error`);\n        }\n\n        if (options.continue &&\n            response === this.continue) {\n\n            if (options.continue === 'undefined') {\n                return;\n            }\n\n            // 'null'\n\n            response = null;\n        }\n\n        if (options.auth &&\n            response instanceof internals.Auth) {\n\n            return response;\n        }\n\n        if (typeof response !== 'symbol') {\n            response = Response.wrap(response, request);\n            if (!response.isBoom) {\n                response = await response._prepare();\n            }\n        }\n\n        return response;\n    }\n\n    failAction(request, failAction, err, options) {\n\n        const retain = options.retain ? err : undefined;\n        if (failAction === 'ignore') {\n            return retain;\n        }\n\n        if (failAction === 'log') {\n            request._log(options.tags, err);\n            return retain;\n        }\n\n        if (failAction === 'error') {\n            throw err;\n        }\n\n        return this.execute(failAction, request, { realm: request.route.realm, args: [options.details || err] });\n    }\n};\n\n\n/*\n    const handler = function (request, h) {\n\n        result / h.response(result)         -> result                           // Not allowed before handler\n        h.response(result).takeover()       -> result (respond)\n        h.continue                          -> null                             // Defaults to null only in handler and pre, not allowed in auth\n\n        throw error / h.response(error)     -> error (respond)                  // failAction override in pre\n        <undefined>                         -> badImplementation (respond)\n\n        // Auth only (scheme.payload and scheme.response use the same interface as pre-handler extension methods)\n\n        h.unauthenticated(error, data)      -> error (respond) + data\n        h.authenticated(data )              -> (continue) + data\n    };\n*/\n\ninternals.Toolkit = class {\n\n    constructor(request, manager, options) {\n\n        this.abandon = manager.abandon;\n        this.close = manager.close;\n        this.continue = manager.continue;\n        this.context = options.bind;\n        this.realm = options.realm;\n        this.request = request;\n\n        if (options.auth) {\n            this.authenticated = internals.authenticated;\n            this.unauthenticated = internals.unauthenticated;\n        }\n\n        for (const method of request._core.decorations.toolkit) {\n            this[method] = request._core._decorations.toolkit[method];\n        }\n    }\n\n    response(result) {\n\n        Hoek.assert(!result || typeof result !== 'object' || typeof result.then !== 'function', 'Cannot wrap a promise');\n        Hoek.assert(result instanceof Error === false, 'Cannot wrap an error');\n        Hoek.assert(typeof result !== 'symbol', 'Cannot wrap a symbol');\n\n        return Response.wrap(result, this.request);\n    }\n\n    redirect(location) {\n\n        return this.response('').redirect(location);\n    }\n\n    entity(options) {\n\n        Hoek.assert(options, 'Entity method missing required options');\n        Hoek.assert(options.etag || options.modified, 'Entity methods missing require options key');\n\n        this.request._entity = options;\n\n        const entity = Response.entity(options.etag, options);\n        if (Response.unmodified(this.request, entity)) {\n            return this.response().code(304).takeover();\n        }\n    }\n\n    state(name, value, options) {\n\n        this.request._setState(name, value, options);\n    }\n\n    unstate(name, options) {\n\n        this.request._clearState(name, options);\n    }\n};\n\n\ninternals.authenticated = function (data) {\n\n    Hoek.assert(data && data.credentials, 'Authentication data missing credentials information');\n\n    return new internals.Auth(null, data);\n};\n\n\ninternals.unauthenticated = function (error, data) {\n\n    Hoek.assert(!data || data.credentials, 'Authentication data missing credentials information');\n\n    return new internals.Auth(error, data);\n};\n\n\ninternals.Auth = class {\n\n    constructor(error, data) {\n\n        this.isAuth = true;\n        this.error = error;\n        this.data = data;\n    }\n};\n","'use strict';\n\n// Load modules\n\nconst Http = require('http');\n\nconst Ammo = require('ammo');\nconst Boom = require('boom');\nconst Bounce = require('bounce');\nconst Hoek = require('hoek');\nconst Shot = require('shot');\nconst Teamwork = require('teamwork');\n\nconst Config = require('./config');\nconst Response = require('./response');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports.send = async function (request) {\n\n    const response = request.response;\n    if (response.isBoom) {\n        return internals.fail(request, response);\n    }\n\n    try {\n        await internals.marshal(request);\n        await internals.transmit(response);\n    }\n    catch (err) {\n        Bounce.rethrow(err, 'system');\n        request._setResponse(err);\n        return internals.fail(request, err);\n    }\n};\n\n\ninternals.marshal = async function (request) {\n\n    for (const func of request._route._marshalCycle) {\n        const result = func(request);\n        if (result && typeof result.then === 'function') {      // Skip await if no reason to\n            await result;\n        }\n    }\n};\n\n\ninternals.fail = async function (request, boom) {\n\n    const error = boom.output;\n    const response = new Response(error.payload, request);\n    response._error = boom;\n    response.code(error.statusCode);\n    response.headers = Hoek.clone(error.headers);               // Prevent source from being modified\n    request.response = response;                                // Not using request._setResponse() to avoid double log\n\n    try {\n        await internals.marshal(request);\n    }\n    catch (err) {\n        Bounce.rethrow(err, 'system');\n\n        // Failed to marshal an error - replace with minimal representation of original error\n\n        const minimal = {\n            statusCode: error.statusCode,\n            error: Http.STATUS_CODES[error.statusCode],\n            message: boom.message\n        };\n\n        response._payload = new Response.Payload(JSON.stringify(minimal), {});\n    }\n\n    return internals.transmit(response);\n};\n\n\ninternals.transmit = function (response) {\n\n    const request = response.request;\n    const length = internals.length(response);\n\n    // Pipes\n\n    const encoding = request._core.compression.encoding(response, length);\n    const ranger = (encoding ? null : internals.range(response, length));\n    const compressor = internals.encoding(response, encoding);\n\n    // Connection: close\n\n    const isInjection = Shot.isInjection(request.raw.req);\n    if (!(isInjection || request._core.started) ||\n        (request._isPayloadPending && !request.raw.req._readableState.ended)) {\n\n        response._header('connection', 'close');\n    }\n\n    // Write headers\n\n    internals.writeHead(response);\n\n    // Injection\n\n    if (isInjection) {\n        request.raw.res[Config.symbol] = { request };\n\n        if (response.variety === 'plain') {\n            request.raw.res[Config.symbol].result = response._isPayloadSupported() ? response.source : null;\n        }\n    }\n\n    // Finalize response stream\n\n    const stream = internals.chain([response._payload, response._tap(), compressor, ranger]);\n    return internals.pipe(request, stream);\n};\n\n\ninternals.length = function (response) {\n\n    const request = response.request;\n\n    const header = response.headers['content-length'];\n    if (header === undefined) {\n        return null;\n    }\n\n    let length = header;\n    if (typeof length === 'string') {\n        length = parseInt(header, 10);\n        if (!isFinite(length)) {\n            delete response.headers['content-length'];\n            return null;\n        }\n    }\n\n    // Empty response\n\n    if (length === 0 &&\n        !response._statusCode &&\n        response.statusCode === 200 &&\n        request.route.settings.response.emptyStatusCode === 204) {\n\n        response.code(204);\n        delete response.headers['content-length'];\n    }\n\n    return length;\n};\n\n\ninternals.range = function (response, length) {\n\n    const request = response.request;\n\n    if (!length ||\n        !request.route.settings.response.ranges ||\n        request.method !== 'get' ||\n        response.statusCode !== 200) {\n\n        return null;\n    }\n\n    response._header('accept-ranges', 'bytes');\n\n    if (!request.headers.range) {\n        return null;\n    }\n\n    // Check If-Range\n\n    if (request.headers['if-range'] &&\n        request.headers['if-range'] !== response.headers.etag) {            // Ignoring last-modified date (weak)\n\n        return null;\n    }\n\n    // Parse header\n\n    const ranges = Ammo.header(request.headers.range, length);\n    if (!ranges) {\n        const error = Boom.rangeNotSatisfiable();\n        error.output.headers['content-range'] = 'bytes */' + length;\n        throw error;\n    }\n\n    // Prepare transform\n\n    if (ranges.length !== 1) {                                          // Ignore requests for multiple ranges\n        return null;\n    }\n\n    const range = ranges[0];\n    response.code(206);\n    response.bytes(range.to - range.from + 1);\n    response._header('content-range', 'bytes ' + range.from + '-' + range.to + '/' + length);\n\n    return new Ammo.Stream(range);\n};\n\n\ninternals.encoding = function (response, encoding) {\n\n    const request = response.request;\n\n    const header = response.headers['content-encoding'] || encoding;\n    if (header &&\n        response.headers.etag &&\n        response.settings.varyEtag) {\n\n        response.headers.etag = response.headers.etag.slice(0, -1) + '-' + header + '\"';\n    }\n\n    if (!encoding ||\n        response.statusCode === 206 ||\n        !response._isPayloadSupported()) {\n\n        return null;\n    }\n\n    delete response.headers['content-length'];\n    response._header('content-encoding', encoding);\n    const compressor = request._core.compression.encoder(request, encoding);\n    if (response.variety === 'stream' &&\n        typeof response._payload.setCompressor === 'function') {\n\n        response._payload.setCompressor(compressor);\n    }\n\n    return compressor;\n};\n\n\ninternals.pipe = function (request, stream) {\n\n    const team = new Teamwork();\n\n    // Write payload\n\n    const env = { stream, request, team };\n\n    const aborted = internals.end.bind(null, env, 'aborted');\n    const close = internals.end.bind(null, env, 'close');\n    const end = internals.end.bind(null, env, null);\n\n    request.raw.req.on('aborted', aborted);\n    request.raw.req.on('close', close);\n    request.raw.res.on('close', close);\n    request.raw.res.on('error', end);\n    request.raw.res.on('finish', end);\n\n    if (stream.writeToStream) {\n        stream.writeToStream(request.raw.res);\n    }\n    else {\n        stream.on('error', end);\n        stream.pipe(request.raw.res);\n    }\n\n    return team.work;\n};\n\n\ninternals.end = function (env, event, err) {\n\n    const { request, stream, team } = env;\n    if (!team) {                                                                            // Used instead of cleaning up emitter listeners\n        return;\n    }\n\n    env.team = null;\n\n    if (err) {\n        request.raw.res.destroy();\n\n        if (request.raw.res[Config.symbol]) {\n            request.raw.res.statusCode = 500;\n            request.raw.res[Config.symbol].result = Boom.boomify(err).output.payload;      // Force injected response to error\n        }\n\n        Response.drain(stream);\n    }\n\n    if (!request.raw.res.finished &&\n        event !== 'aborted') {\n\n        request.raw.res.end();\n    }\n\n    if (event ||\n        err) {\n\n        if (request._events) {\n            request._events.emit('disconnect');\n        }\n\n        request._log(event ? ['response', 'error', event] : ['response', 'error'], err);\n    }\n    else {\n        request._transmitted = true;\n    }\n\n    team.attend();\n};\n\n\ninternals.writeHead = function (response) {\n\n    const res = response.request.raw.res;\n    const headers = Object.keys(response.headers);\n    let i = 0;\n\n    try {\n        for (; i < headers.length; ++i) {\n            const header = headers[i];\n            const value = response.headers[header];\n            if (value !== undefined) {\n                res.setHeader(header, value);\n            }\n        }\n    }\n    catch (err) {\n        for (--i; i >= 0; --i) {\n            res.removeHeader(headers[i]);       // Undo headers\n        }\n\n        throw Boom.boomify(err);\n    }\n\n    if (response.settings.message) {\n        res.statusMessage = response.settings.message;\n    }\n\n    try {\n        res.writeHead(response.statusCode);\n    }\n    catch (err) {\n        throw Boom.boomify(err);\n    }\n};\n\n\ninternals.chain = function (sources) {\n\n    let from = sources[0];\n    for (let i = 1; i < sources.length; ++i) {\n        const to = sources[i];\n        if (to) {\n            from.on('error', internals.errorPipe.bind(from, to));\n            from = from.pipe(to);\n        }\n    }\n\n    return from;\n};\n\n\ninternals.errorPipe = function (to, err) {\n\n    to.emit('error', err);\n};\n","'use strict';\n\n// Load modules\n\nconst Boom = require('boom');\nconst Hoek = require('hoek');\nconst Joi = require('joi');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports.compile = function (rule) {\n\n    // null, undefined, true - anything allowed\n    // false - nothing allowed\n    // {...} - ... allowed\n\n    return (rule === false) ?\n        Joi.object({}).allow(null) :\n        (typeof rule === 'function' ?\n            rule :\n            !rule || rule === true ? null : Joi.compile(rule));     // false tested earlier\n\n};\n\n\nexports.headers = function (request) {\n\n    return internals.input('headers', request);\n};\n\n\nexports.params = function (request) {\n\n    return internals.input('params', request);\n};\n\n\nexports.payload = function (request) {\n\n    if (request.method === 'get' ||\n        request.method === 'head') {                // When route.method is '*'\n\n        return;\n    }\n\n    return internals.input('payload', request);\n};\n\n\nexports.query = function (request) {\n\n    return internals.input('query', request);\n};\n\n\ninternals.input = async function (source, request) {\n\n    const localOptions = {\n        context: {\n            headers: request.headers,\n            params: request.params,\n            query: request.query,\n            payload: request.payload,\n            auth: request.auth,\n            app: {\n                route: request.route.settings.app,\n                request: request.app\n            }\n        }\n    };\n\n    delete localOptions.context[source];\n    Hoek.merge(localOptions, request.route.settings.validate.options);\n\n    try {\n        const schema = request.route.settings.validate[source];\n        const bind = request.route.settings.bind;\n\n        var value = await (typeof schema !== 'function' ? Joi.validate(request[source], schema, localOptions) : schema.call(bind, request[source], localOptions));\n        return;\n    }\n    catch (err) {\n        var validationError = err;\n    }\n    finally {\n        request.orig[source] = request[source];\n        if (value !== undefined) {\n            request[source] = value;\n        }\n    }\n\n    if (request.route.settings.validate.failAction === 'ignore') {\n        return;\n    }\n\n    // Prepare error\n\n    const defaultError = validationError.isBoom ? validationError : Boom.badRequest(`Invalid request ${source} input`);\n    const detailedError = Boom.boomify(validationError, { statusCode: 400, override: false });\n    detailedError.output.payload.validation = { source, keys: [] };\n    if (validationError.details) {\n        for (const details of validationError.details) {\n            const path = details.path;\n            detailedError.output.payload.validation.keys.push(Hoek.escapeHtml(path.join('.')));\n        }\n    }\n\n    if (request.route.settings.validate.errorFields) {\n        for (const field in request.route.settings.validate.errorFields) {\n            detailedError.output.payload[field] = request.route.settings.validate.errorFields[field];\n        }\n    }\n\n    return request._core.toolkit.failAction(request, request.route.settings.validate.failAction, defaultError, { details: detailedError, tags: ['validation', 'error', source] });\n};\n\n\nexports.response = async function (request) {\n\n    if (request.route.settings.response.sample) {\n        const currentSample = Math.ceil((Math.random() * 100));\n        if (currentSample > request.route.settings.response.sample) {\n            return;\n        }\n    }\n\n    const response = request.response;\n    const statusCode = response.isBoom ? response.output.statusCode : response.statusCode;\n\n    const statusSchema = request.route.settings.response.status[statusCode];\n    if (statusCode >= 400 &&\n        !statusSchema) {\n\n        return;                 // Do not validate errors by default\n    }\n\n    const schema = statusSchema !== undefined ? statusSchema : request.route.settings.response.schema;\n    if (schema === null) {\n        return;                 // No rules\n    }\n\n    if (!response.isBoom &&\n        request.response.variety !== 'plain') {\n\n        throw Boom.badImplementation('Cannot validate non-object response');\n    }\n\n    const localOptions = {\n        context: {\n            headers: request.headers,\n            params: request.params,\n            query: request.query,\n            payload: request.payload,\n            auth: request.auth,\n            app: {\n                route: request.route.settings.app,\n                request: request.app\n            }\n        }\n    };\n\n    const source = response.isBoom ? response.output.payload : response.source;\n    Hoek.merge(localOptions, request.route.settings.response.options);\n\n    try {\n        let value;\n\n        if (typeof schema !== 'function') {\n            value = await Joi.validate(source, schema, localOptions);\n        }\n        else {\n            value = await schema(source, localOptions);\n        }\n\n        if (value !== undefined &&\n            request.route.settings.response.modify) {\n\n            if (response.isBoom) {\n                response.output.payload = value;\n            }\n            else {\n                response.source = value;\n            }\n        }\n    }\n    catch (err) {\n\n        return request._core.toolkit.failAction(request, request.route.settings.response.failAction, err, { tags: ['validation', 'response', 'error'] });\n    }\n};\n","'use strict';\n\n// Load modules\n\nconst Boom = require('boom');\nconst Hoek = require('hoek');\nconst Joi = require('joi');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.schema = Joi.object({\n    sampleInterval: Joi.number().min(0),\n    maxHeapUsedBytes: Joi.number().min(0),\n    maxEventLoopDelay: Joi.number().min(0),\n    maxRssBytes: Joi.number().min(0)\n})\n    .unknown();\n\n\ninternals.defaults = {\n    sampleInterval: 0,                          // Frequency of load sampling in milliseconds (zero is no sampling)\n    maxHeapUsedBytes: 0,                        // Reject requests when V8 heap is over size in bytes (zero is no max)\n    maxRssBytes: 0,                             // Reject requests when process RSS is over size in bytes (zero is no max)\n    maxEventLoopDelay: 0                        // Milliseconds of delay after which requests are rejected (zero is no max)\n};\n\n\nexports = module.exports = internals.Heavy = function (options) {\n\n    options = options || {};\n\n    Joi.assert(options, internals.schema, 'Invalid load monitoring options');\n    this.settings = Hoek.applyToDefaults(internals.defaults, options);\n    Hoek.assert(this.settings.sampleInterval || (!this.settings.maxEventLoopDelay && !this.settings.maxHeapUsedBytes && !this.settings.maxRssBytes), 'Load sample interval must be set to enable load limits');\n\n    this._eventLoopTimer = null;\n    this._loadBench = new Hoek.Bench();\n    this.load = {\n        eventLoopDelay: 0,\n        heapUsed: 0,\n        rss: 0\n    };\n};\n\n\ninternals.Heavy.prototype.start = function () {\n\n    if (!this.settings.sampleInterval) {\n        return;\n    }\n\n    const loopSample = () => {\n\n        this._loadBench.reset();\n        const measure = () => {\n\n            const mem = process.memoryUsage();\n\n            // Retain the same this.load object to keep external references valid\n\n            this.load.eventLoopDelay = (this._loadBench.elapsed() - this.settings.sampleInterval);\n            this.load.heapUsed = mem.heapUsed;\n            this.load.rss = mem.rss;\n\n            loopSample();\n        };\n\n        this._eventLoopTimer = setTimeout(measure, this.settings.sampleInterval);\n    };\n\n    loopSample();\n};\n\n\ninternals.Heavy.prototype.stop = function () {\n\n    clearTimeout(this._eventLoopTimer);\n    this._eventLoopTimer = null;\n};\n\n\ninternals.Heavy.prototype.check = function () {\n\n    if (!this.settings.sampleInterval) {\n        return;\n    }\n\n    Hoek.assert(this._eventLoopTimer, 'Cannot check load when sampler is not started');\n\n    const elapsed = this._loadBench.elapsed();\n    const load = this.load;\n\n    if (elapsed > this.settings.sampleInterval) {\n        load.eventLoopDelay = Math.max(load.eventLoopDelay, elapsed - this.settings.sampleInterval);\n    }\n\n    if (this.settings.maxEventLoopDelay &&\n        load.eventLoopDelay > this.settings.maxEventLoopDelay) {\n\n        throw Boom.serverUnavailable('Server under heavy load (event loop)', load);\n    }\n\n    if (this.settings.maxHeapUsedBytes &&\n        load.heapUsed > this.settings.maxHeapUsedBytes) {\n\n        throw Boom.serverUnavailable('Server under heavy load (heap)', load);\n    }\n\n    if (this.settings.maxRssBytes &&\n        load.rss > this.settings.maxRssBytes) {\n\n        throw Boom.serverUnavailable('Server under heavy load (rss)', load);\n    }\n};\n","'use strict';\n\n// Declare internals\n\nconst internals = {};\n\n\nexports.escapeJavaScript = function (input) {\n\n    if (!input) {\n        return '';\n    }\n\n    let escaped = '';\n\n    for (let i = 0; i < input.length; ++i) {\n\n        const charCode = input.charCodeAt(i);\n\n        if (internals.isSafe(charCode)) {\n            escaped += input[i];\n        }\n        else {\n            escaped += internals.escapeJavaScriptChar(charCode);\n        }\n    }\n\n    return escaped;\n};\n\n\nexports.escapeHtml = function (input) {\n\n    if (!input) {\n        return '';\n    }\n\n    let escaped = '';\n\n    for (let i = 0; i < input.length; ++i) {\n\n        const charCode = input.charCodeAt(i);\n\n        if (internals.isSafe(charCode)) {\n            escaped += input[i];\n        }\n        else {\n            escaped += internals.escapeHtmlChar(charCode);\n        }\n    }\n\n    return escaped;\n};\n\n\nexports.escapeJson = function (input) {\n\n    if (!input) {\n        return '';\n    }\n\n    const lessThan = 0x3C;\n    const greaterThan = 0x3E;\n    const andSymbol = 0x26;\n    const lineSeperator = 0x2028;\n\n    // replace method\n    let charCode;\n    return input.replace(/[<>&\\u2028\\u2029]/g, (match) => {\n\n        charCode = match.charCodeAt(0);\n\n        if (charCode === lessThan) {\n            return '\\\\u003c';\n        }\n        else if (charCode === greaterThan) {\n            return '\\\\u003e';\n        }\n        else if (charCode === andSymbol) {\n            return '\\\\u0026';\n        }\n        else if (charCode === lineSeperator) {\n            return '\\\\u2028';\n        }\n        return '\\\\u2029';\n    });\n};\n\n\ninternals.escapeJavaScriptChar = function (charCode) {\n\n    if (charCode >= 256) {\n        return '\\\\u' + internals.padLeft('' + charCode, 4);\n    }\n\n    const hexValue = Buffer.from(String.fromCharCode(charCode), 'ascii').toString('hex');\n    return '\\\\x' + internals.padLeft(hexValue, 2);\n};\n\n\ninternals.escapeHtmlChar = function (charCode) {\n\n    const namedEscape = internals.namedHtml[charCode];\n    if (typeof namedEscape !== 'undefined') {\n        return namedEscape;\n    }\n\n    if (charCode >= 256) {\n        return '&#' + charCode + ';';\n    }\n\n    const hexValue = Buffer.from(String.fromCharCode(charCode), 'ascii').toString('hex');\n    return '&#x' + internals.padLeft(hexValue, 2) + ';';\n};\n\n\ninternals.padLeft = function (str, len) {\n\n    while (str.length < len) {\n        str = '0' + str;\n    }\n\n    return str;\n};\n\n\ninternals.isSafe = function (charCode) {\n\n    return (typeof internals.safeCharCodes[charCode] !== 'undefined');\n};\n\n\ninternals.namedHtml = {\n    '38': '&amp;',\n    '60': '&lt;',\n    '62': '&gt;',\n    '34': '&quot;',\n    '160': '&nbsp;',\n    '162': '&cent;',\n    '163': '&pound;',\n    '164': '&curren;',\n    '169': '&copy;',\n    '174': '&reg;'\n};\n\n\ninternals.safeCharCodes = (function () {\n\n    const safe = {};\n\n    for (let i = 32; i < 123; ++i) {\n\n        if ((i >= 97) ||                    // a-z\n            (i >= 65 && i <= 90) ||         // A-Z\n            (i >= 48 && i <= 57) ||         // 0-9\n            i === 32 ||                     // space\n            i === 46 ||                     // .\n            i === 44 ||                     // ,\n            i === 45 ||                     // -\n            i === 58 ||                     // :\n            i === 95) {                     // _\n\n            safe[i] = null;\n        }\n    }\n\n    return safe;\n}());\n","'use strict';\n\n// Load modules\n\nconst Assert = require('assert');\nconst Crypto = require('crypto');\nconst Path = require('path');\nconst Util = require('util');\n\nconst Escape = require('./escape');\n\n\n// Declare internals\n\nconst internals = {};\n\n\n// Clone object or array\n\nexports.clone = function (obj, seen) {\n\n    if (typeof obj !== 'object' ||\n        obj === null) {\n\n        return obj;\n    }\n\n    seen = seen || new Map();\n\n    const lookup = seen.get(obj);\n    if (lookup) {\n        return lookup;\n    }\n\n    let newObj;\n    let cloneDeep = false;\n\n    if (!Array.isArray(obj)) {\n        if (Buffer.isBuffer(obj)) {\n            newObj = Buffer.from(obj);\n        }\n        else if (obj instanceof Date) {\n            newObj = new Date(obj.getTime());\n        }\n        else if (obj instanceof RegExp) {\n            newObj = new RegExp(obj);\n        }\n        else {\n            const proto = Object.getPrototypeOf(obj);\n            if (proto &&\n                proto.isImmutable) {\n\n                newObj = obj;\n            }\n            else {\n                newObj = Object.create(proto);\n                cloneDeep = true;\n            }\n        }\n    }\n    else {\n        newObj = [];\n        cloneDeep = true;\n    }\n\n    seen.set(obj, newObj);\n\n    if (cloneDeep) {\n        const keys = Object.getOwnPropertyNames(obj);\n        for (let i = 0; i < keys.length; ++i) {\n            const key = keys[i];\n            const descriptor = Object.getOwnPropertyDescriptor(obj, key);\n            if (descriptor &&\n                (descriptor.get ||\n                    descriptor.set)) {\n\n                Object.defineProperty(newObj, key, descriptor);\n            }\n            else {\n                newObj[key] = exports.clone(obj[key], seen);\n            }\n        }\n    }\n\n    return newObj;\n};\n\n\n// Merge all the properties of source into target, source wins in conflict, and by default null and undefined from source are applied\n\n/*eslint-disable */\nexports.merge = function (target, source, isNullOverride /* = true */, isMergeArrays /* = true */) {\n    /*eslint-enable */\n\n    exports.assert(target && typeof target === 'object', 'Invalid target value: must be an object');\n    exports.assert(source === null || source === undefined || typeof source === 'object', 'Invalid source value: must be null, undefined, or an object');\n\n    if (!source) {\n        return target;\n    }\n\n    if (Array.isArray(source)) {\n        exports.assert(Array.isArray(target), 'Cannot merge array onto an object');\n        if (isMergeArrays === false) {                                                  // isMergeArrays defaults to true\n            target.length = 0;                                                          // Must not change target assignment\n        }\n\n        for (let i = 0; i < source.length; ++i) {\n            target.push(exports.clone(source[i]));\n        }\n\n        return target;\n    }\n\n    const keys = Object.keys(source);\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (key === '__proto__') {\n            continue;\n        }\n\n        const value = source[key];\n        if (value &&\n            typeof value === 'object') {\n\n            if (!target[key] ||\n                typeof target[key] !== 'object' ||\n                (Array.isArray(target[key]) !== Array.isArray(value)) ||\n                value instanceof Date ||\n                Buffer.isBuffer(value) ||\n                value instanceof RegExp) {\n\n                target[key] = exports.clone(value);\n            }\n            else {\n                exports.merge(target[key], value, isNullOverride, isMergeArrays);\n            }\n        }\n        else {\n            if (value !== null &&\n                value !== undefined) {                              // Explicit to preserve empty strings\n\n                target[key] = value;\n            }\n            else if (isNullOverride !== false) {                    // Defaults to true\n                target[key] = value;\n            }\n        }\n    }\n\n    return target;\n};\n\n\n// Apply options to a copy of the defaults\n\nexports.applyToDefaults = function (defaults, options, isNullOverride) {\n\n    exports.assert(defaults && typeof defaults === 'object', 'Invalid defaults value: must be an object');\n    exports.assert(!options || options === true || typeof options === 'object', 'Invalid options value: must be true, falsy or an object');\n\n    if (!options) {                                                 // If no options, return null\n        return null;\n    }\n\n    const copy = exports.clone(defaults);\n\n    if (options === true) {                                         // If options is set to true, use defaults\n        return copy;\n    }\n\n    return exports.merge(copy, options, isNullOverride === true, false);\n};\n\n\n// Clone an object except for the listed keys which are shallow copied\n\nexports.cloneWithShallow = function (source, keys) {\n\n    if (!source ||\n        typeof source !== 'object') {\n\n        return source;\n    }\n\n    const storage = internals.store(source, keys);    // Move shallow copy items to storage\n    const copy = exports.clone(source);               // Deep copy the rest\n    internals.restore(copy, source, storage);       // Shallow copy the stored items and restore\n    return copy;\n};\n\n\ninternals.store = function (source, keys) {\n\n    const storage = {};\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        const value = exports.reach(source, key);\n        if (value !== undefined) {\n            storage[key] = value;\n            internals.reachSet(source, key, undefined);\n        }\n    }\n\n    return storage;\n};\n\n\ninternals.restore = function (copy, source, storage) {\n\n    const keys = Object.keys(storage);\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        internals.reachSet(copy, key, storage[key]);\n        internals.reachSet(source, key, storage[key]);\n    }\n};\n\n\ninternals.reachSet = function (obj, key, value) {\n\n    const path = key.split('.');\n    let ref = obj;\n    for (let i = 0; i < path.length; ++i) {\n        const segment = path[i];\n        if (i + 1 === path.length) {\n            ref[segment] = value;\n        }\n\n        ref = ref[segment];\n    }\n};\n\n\n// Apply options to defaults except for the listed keys which are shallow copied from option without merging\n\nexports.applyToDefaultsWithShallow = function (defaults, options, keys) {\n\n    exports.assert(defaults && typeof defaults === 'object', 'Invalid defaults value: must be an object');\n    exports.assert(!options || options === true || typeof options === 'object', 'Invalid options value: must be true, falsy or an object');\n    exports.assert(keys && Array.isArray(keys), 'Invalid keys');\n\n    if (!options) {                                                 // If no options, return null\n        return null;\n    }\n\n    const copy = exports.cloneWithShallow(defaults, keys);\n\n    if (options === true) {                                         // If options is set to true, use defaults\n        return copy;\n    }\n\n    const storage = internals.store(options, keys);   // Move shallow copy items to storage\n    exports.merge(copy, options, false, false);     // Deep copy the rest\n    internals.restore(copy, options, storage);      // Shallow copy the stored items and restore\n    return copy;\n};\n\n\n// Deep object or array comparison\n\nexports.deepEqual = function (obj, ref, options, seen) {\n\n    if (obj === ref) {                                                      // Copied from Deep-eql, copyright(c) 2013 Jake Luer, jake@alogicalparadox.com, MIT Licensed, https://github.com/chaijs/deep-eql\n        return obj !== 0 || 1 / obj === 1 / ref;        // -0 / +0\n    }\n\n    options = options || { prototype: true };\n\n    const type = typeof obj;\n\n    if (type !== typeof ref) {\n        return false;\n    }\n\n    if (type !== 'object' ||\n        obj === null ||\n        ref === null) {\n\n        return obj !== obj && ref !== ref;                  // NaN\n    }\n\n    seen = seen || [];\n    if (seen.indexOf(obj) !== -1) {\n        return true;                            // If previous comparison failed, it would have stopped execution\n    }\n\n    seen.push(obj);\n\n    if (Array.isArray(obj)) {\n        if (!Array.isArray(ref)) {\n            return false;\n        }\n\n        if (!options.part && obj.length !== ref.length) {\n            return false;\n        }\n\n        for (let i = 0; i < obj.length; ++i) {\n            if (options.part) {\n                let found = false;\n                for (let j = 0; j < ref.length; ++j) {\n                    if (exports.deepEqual(obj[i], ref[j], options)) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                return found;\n            }\n\n            if (!exports.deepEqual(obj[i], ref[i], options)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    if (Buffer.isBuffer(obj)) {\n        if (!Buffer.isBuffer(ref)) {\n            return false;\n        }\n\n        if (obj.length !== ref.length) {\n            return false;\n        }\n\n        for (let i = 0; i < obj.length; ++i) {\n            if (obj[i] !== ref[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    if (obj instanceof Date) {\n        return (ref instanceof Date && obj.getTime() === ref.getTime());\n    }\n\n    if (obj instanceof RegExp) {\n        return (ref instanceof RegExp && obj.toString() === ref.toString());\n    }\n\n    if (options.prototype) {\n        if (Object.getPrototypeOf(obj) !== Object.getPrototypeOf(ref)) {\n            return false;\n        }\n    }\n\n    const keys = Object.getOwnPropertyNames(obj);\n\n    if (!options.part && keys.length !== Object.getOwnPropertyNames(ref).length) {\n        return false;\n    }\n\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        const descriptor = Object.getOwnPropertyDescriptor(obj, key);\n        if (descriptor.get) {\n            if (!exports.deepEqual(descriptor, Object.getOwnPropertyDescriptor(ref, key), options, seen)) {\n                return false;\n            }\n        }\n        else if (!exports.deepEqual(obj[key], ref[key], options, seen)) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\n\n// Remove duplicate items from array\n\nexports.unique = (array, key) => {\n\n    let result;\n    if (key) {\n        result = [];\n        const index = new Set();\n        array.forEach((item) => {\n\n            const identifier = item[key];\n            if (!index.has(identifier)) {\n                index.add(identifier);\n                result.push(item);\n            }\n        });\n    }\n    else {\n        result = Array.from(new Set(array));\n    }\n\n    return result;\n};\n\n\n// Convert array into object\n\nexports.mapToObject = function (array, key) {\n\n    if (!array) {\n        return null;\n    }\n\n    const obj = {};\n    for (let i = 0; i < array.length; ++i) {\n        if (key) {\n            if (array[i][key]) {\n                obj[array[i][key]] = true;\n            }\n        }\n        else {\n            obj[array[i]] = true;\n        }\n    }\n\n    return obj;\n};\n\n\n// Find the common unique items in two arrays\n\nexports.intersect = function (array1, array2, justFirst) {\n\n    if (!array1 || !array2) {\n        return [];\n    }\n\n    const common = [];\n    const hash = (Array.isArray(array1) ? exports.mapToObject(array1) : array1);\n    const found = {};\n    for (let i = 0; i < array2.length; ++i) {\n        if (hash[array2[i]] && !found[array2[i]]) {\n            if (justFirst) {\n                return array2[i];\n            }\n\n            common.push(array2[i]);\n            found[array2[i]] = true;\n        }\n    }\n\n    return (justFirst ? null : common);\n};\n\n\n// Test if the reference contains the values\n\nexports.contain = function (ref, values, options) {\n\n    /*\n        string -> string(s)\n        array -> item(s)\n        object -> key(s)\n        object -> object (key:value)\n    */\n\n    let valuePairs = null;\n    if (typeof ref === 'object' &&\n        typeof values === 'object' &&\n        !Array.isArray(ref) &&\n        !Array.isArray(values)) {\n\n        valuePairs = values;\n        values = Object.keys(values);\n    }\n    else {\n        values = [].concat(values);\n    }\n\n    options = options || {};            // deep, once, only, part\n\n    exports.assert(typeof ref === 'string' || typeof ref === 'object', 'Reference must be string or an object');\n    exports.assert(values.length, 'Values array cannot be empty');\n\n    let compare;\n    let compareFlags;\n    if (options.deep) {\n        compare = exports.deepEqual;\n\n        const hasOnly = options.hasOwnProperty('only');\n        const hasPart = options.hasOwnProperty('part');\n\n        compareFlags = {\n            prototype: hasOnly ? options.only : hasPart ? !options.part : false,\n            part: hasOnly ? !options.only : hasPart ? options.part : true\n        };\n    }\n    else {\n        compare = (a, b) => a === b;\n    }\n\n    let misses = false;\n    const matches = new Array(values.length);\n    for (let i = 0; i < matches.length; ++i) {\n        matches[i] = 0;\n    }\n\n    if (typeof ref === 'string') {\n        let pattern = '(';\n        for (let i = 0; i < values.length; ++i) {\n            const value = values[i];\n            exports.assert(typeof value === 'string', 'Cannot compare string reference to non-string value');\n            pattern += (i ? '|' : '') + exports.escapeRegex(value);\n        }\n\n        const regex = new RegExp(pattern + ')', 'g');\n        const leftovers = ref.replace(regex, ($0, $1) => {\n\n            const index = values.indexOf($1);\n            ++matches[index];\n            return '';          // Remove from string\n        });\n\n        misses = !!leftovers;\n    }\n    else if (Array.isArray(ref)) {\n        for (let i = 0; i < ref.length; ++i) {\n            let matched = false;\n            for (let j = 0; j < values.length && matched === false; ++j) {\n                matched = compare(values[j], ref[i], compareFlags) && j;\n            }\n\n            if (matched !== false) {\n                ++matches[matched];\n            }\n            else {\n                misses = true;\n            }\n        }\n    }\n    else {\n        const keys = Object.getOwnPropertyNames(ref);\n        for (let i = 0; i < keys.length; ++i) {\n            const key = keys[i];\n            const pos = values.indexOf(key);\n            if (pos !== -1) {\n                if (valuePairs &&\n                    !compare(valuePairs[key], ref[key], compareFlags)) {\n\n                    return false;\n                }\n\n                ++matches[pos];\n            }\n            else {\n                misses = true;\n            }\n        }\n    }\n\n    let result = false;\n    for (let i = 0; i < matches.length; ++i) {\n        result = result || !!matches[i];\n        if ((options.once && matches[i] > 1) ||\n            (!options.part && !matches[i])) {\n\n            return false;\n        }\n    }\n\n    if (options.only &&\n        misses) {\n\n        return false;\n    }\n\n    return result;\n};\n\n\n// Flatten array\n\nexports.flatten = function (array, target) {\n\n    const result = target || [];\n\n    for (let i = 0; i < array.length; ++i) {\n        if (Array.isArray(array[i])) {\n            exports.flatten(array[i], result);\n        }\n        else {\n            result.push(array[i]);\n        }\n    }\n\n    return result;\n};\n\n\n// Convert an object key chain string ('a.b.c') to reference (object[a][b][c])\n\nexports.reach = function (obj, chain, options) {\n\n    if (chain === false ||\n        chain === null ||\n        typeof chain === 'undefined') {\n\n        return obj;\n    }\n\n    options = options || {};\n    if (typeof options === 'string') {\n        options = { separator: options };\n    }\n\n    const path = chain.split(options.separator || '.');\n    let ref = obj;\n    for (let i = 0; i < path.length; ++i) {\n        let key = path[i];\n        if (key[0] === '-' && Array.isArray(ref)) {\n            key = key.slice(1, key.length);\n            key = ref.length - key;\n        }\n\n        if (!ref ||\n            !((typeof ref === 'object' || typeof ref === 'function') && key in ref) ||\n            (typeof ref !== 'object' && options.functions === false)) {         // Only object and function can have properties\n\n            exports.assert(!options.strict || i + 1 === path.length, 'Missing segment', key, 'in reach path ', chain);\n            exports.assert(typeof ref === 'object' || options.functions === true || typeof ref !== 'function', 'Invalid segment', key, 'in reach path ', chain);\n            ref = options.default;\n            break;\n        }\n\n        ref = ref[key];\n    }\n\n    return ref;\n};\n\n\nexports.reachTemplate = function (obj, template, options) {\n\n    return template.replace(/{([^}]+)}/g, ($0, chain) => {\n\n        const value = exports.reach(obj, chain, options);\n        return (value === undefined || value === null ? '' : value);\n    });\n};\n\n\nexports.formatStack = function (stack) {\n\n    const trace = [];\n    for (let i = 0; i < stack.length; ++i) {\n        const item = stack[i];\n        trace.push([item.getFileName(), item.getLineNumber(), item.getColumnNumber(), item.getFunctionName(), item.isConstructor()]);\n    }\n\n    return trace;\n};\n\n\nexports.formatTrace = function (trace) {\n\n    const display = [];\n\n    for (let i = 0; i < trace.length; ++i) {\n        const row = trace[i];\n        display.push((row[4] ? 'new ' : '') + row[3] + ' (' + row[0] + ':' + row[1] + ':' + row[2] + ')');\n    }\n\n    return display;\n};\n\n\nexports.callStack = function (slice) {\n\n    // http://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n\n    const v8 = Error.prepareStackTrace;\n    Error.prepareStackTrace = function (_, stack) {\n\n        return stack;\n    };\n\n    const capture = {};\n    Error.captureStackTrace(capture, this);\n    const stack = capture.stack;\n\n    Error.prepareStackTrace = v8;\n\n    const trace = exports.formatStack(stack);\n\n    return trace.slice(1 + slice);\n};\n\n\nexports.displayStack = function (slice) {\n\n    const trace = exports.callStack(slice === undefined ? 1 : slice + 1);\n\n    return exports.formatTrace(trace);\n};\n\n\nexports.abortThrow = false;\n\n\nexports.abort = function (message, hideStack) {\n\n    if (process.env.NODE_ENV === 'test' || exports.abortThrow === true) {\n        throw new Error(message || 'Unknown error');\n    }\n\n    let stack = '';\n    if (!hideStack) {\n        stack = exports.displayStack(1).join('\\n\\t');\n    }\n    console.log('ABORT: ' + message + '\\n\\t' + stack);\n    process.exit(1);\n};\n\n\nexports.assert = function (condition, ...args) {\n\n    if (condition) {\n        return;\n    }\n\n    if (args.length === 1 && args[0] instanceof Error) {\n        throw args[0];\n    }\n\n    const msgs = args\n        .filter((arg) => arg !== '')\n        .map((arg) => {\n\n            return typeof arg === 'string' ? arg : arg instanceof Error ? arg.message : exports.stringify(arg);\n        });\n\n    throw new Assert.AssertionError({\n        message: msgs.join(' ') || 'Unknown error',\n        actual: false,\n        expected: true,\n        operator: '==',\n        stackStartFunction: exports.assert\n    });\n};\n\n\nexports.Bench = function () {\n\n    this.ts = 0;\n    this.reset();\n};\n\n\nexports.Bench.prototype.reset = function () {\n\n    this.ts = exports.Bench.now();\n};\n\n\nexports.Bench.prototype.elapsed = function () {\n\n    return exports.Bench.now() - this.ts;\n};\n\n\nexports.Bench.now = function () {\n\n    const ts = process.hrtime();\n    return (ts[0] * 1e3) + (ts[1] / 1e6);\n};\n\n\n// Escape string for Regex construction\n\nexports.escapeRegex = function (string) {\n\n    // Escape ^$.*+-?=!:|\\/()[]{},\n    return string.replace(/[\\^\\$\\.\\*\\+\\-\\?\\=\\!\\:\\|\\\\\\/\\(\\)\\[\\]\\{\\}\\,]/g, '\\\\$&');\n};\n\n\n// Base64url (RFC 4648) encode\n\nexports.base64urlEncode = function (value, encoding) {\n\n    exports.assert(typeof value === 'string' || Buffer.isBuffer(value), 'value must be string or buffer');\n    const buf = (Buffer.isBuffer(value) ? value : Buffer.from(value, encoding || 'binary'));\n    return buf.toString('base64').replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=/g, '');\n};\n\n\n// Base64url (RFC 4648) decode\n\nexports.base64urlDecode = function (value, encoding) {\n\n    if (typeof value !== 'string') {\n\n        throw new Error('Value not a string');\n    }\n\n    if (!/^[\\w\\-]*$/.test(value)) {\n\n        throw new Error('Invalid character');\n    }\n\n    const buf = Buffer.from(value, 'base64');\n    return (encoding === 'buffer' ? buf : buf.toString(encoding || 'binary'));\n};\n\n\n// Escape attribute value for use in HTTP header\n\nexports.escapeHeaderAttribute = function (attribute) {\n\n    // Allowed value characters: !#$%&'()*+,-./:;<=>?@[]^_`{|}~ and space, a-z, A-Z, 0-9, \\, \"\n\n    exports.assert(/^[ \\w\\!#\\$%&'\\(\\)\\*\\+,\\-\\.\\/\\:;<\\=>\\?@\\[\\]\\^`\\{\\|\\}~\\\"\\\\]*$/.test(attribute), 'Bad attribute value (' + attribute + ')');\n\n    return attribute.replace(/\\\\/g, '\\\\\\\\').replace(/\\\"/g, '\\\\\"');                             // Escape quotes and slash\n};\n\n\nexports.escapeHtml = function (string) {\n\n    return Escape.escapeHtml(string);\n};\n\n\nexports.escapeJavaScript = function (string) {\n\n    return Escape.escapeJavaScript(string);\n};\n\n\nexports.escapeJson = function (string) {\n\n    return Escape.escapeJson(string);\n};\n\n\nexports.once = function (method) {\n\n    if (method._hoekOnce) {\n        return method;\n    }\n\n    let once = false;\n    const wrapped = function (...args) {\n\n        if (!once) {\n            once = true;\n            method.apply(null, args);\n        }\n    };\n\n    wrapped._hoekOnce = true;\n    return wrapped;\n};\n\n\nexports.isInteger = Number.isSafeInteger;\n\n\nexports.ignore = function () { };\n\n\nexports.inherits = Util.inherits;\n\n\nexports.format = Util.format;\n\n\nexports.transform = function (source, transform, options) {\n\n    exports.assert(source === null || source === undefined || typeof source === 'object' || Array.isArray(source), 'Invalid source object: must be null, undefined, an object, or an array');\n    const separator = (typeof options === 'object' && options !== null) ? (options.separator || '.') : '.';\n\n    if (Array.isArray(source)) {\n        const results = [];\n        for (let i = 0; i < source.length; ++i) {\n            results.push(exports.transform(source[i], transform, options));\n        }\n        return results;\n    }\n\n    const result = {};\n    const keys = Object.keys(transform);\n\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        const path = key.split(separator);\n        const sourcePath = transform[key];\n\n        exports.assert(typeof sourcePath === 'string', 'All mappings must be \".\" delineated strings');\n\n        let segment;\n        let res = result;\n\n        while (path.length > 1) {\n            segment = path.shift();\n            if (!res[segment]) {\n                res[segment] = {};\n            }\n            res = res[segment];\n        }\n        segment = path.shift();\n        res[segment] = exports.reach(source, sourcePath, options);\n    }\n\n    return result;\n};\n\n\nexports.uniqueFilename = function (path, extension) {\n\n    if (extension) {\n        extension = extension[0] !== '.' ? '.' + extension : extension;\n    }\n    else {\n        extension = '';\n    }\n\n    path = Path.resolve(path);\n    const name = [Date.now(), process.pid, Crypto.randomBytes(8).toString('hex')].join('-') + extension;\n    return Path.join(path, name);\n};\n\n\nexports.stringify = function (...args) {\n\n    try {\n        return JSON.stringify.apply(null, args);\n    }\n    catch (err) {\n        return '[Cannot display object: ' + err.message + ']';\n    }\n};\n\n\nexports.shallow = function (source) {\n\n    return Object.assign({}, source);\n};\n\n\nexports.wait = function (timeout) {\n\n    return new Promise((resolve) => setTimeout(resolve, timeout));\n};\n\n\nexports.block = function () {\n\n    return new Promise(exports.ignore);\n};\n","'use strict';\n\n// Load modules\n\nconst Path = require('path');\n\nconst Boom = require('boom');\nconst Bounce = require('bounce');\nconst Hoek = require('hoek');\nconst Joi = require('joi');\n\nconst File = require('./file');\nconst Fs = require('./fs');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.schema = Joi.object({\n    path: Joi.alternatives(Joi.array().items(Joi.string()).single(), Joi.func()).required(),\n    index: Joi.alternatives(Joi.boolean(), Joi.array().items(Joi.string()).single()).default(true),\n    listing: Joi.boolean(),\n    showHidden: Joi.boolean(),\n    redirectToSlash: Joi.boolean(),\n    lookupCompressed: Joi.boolean(),\n    lookupMap: Joi.object().min(1).pattern(/.+/, Joi.string()),\n    etagMethod: Joi.string().valid('hash', 'simple').allow(false),\n    defaultExtension: Joi.string().alphanum()\n});\n\n\ninternals.normalizePaths = function (basePath, paths) {\n\n    return paths.map((path) => {\n\n        return Path.isAbsolute(path) ? path : Path.join(basePath, path);\n    });\n};\n\n\ninternals.resolvePathOption = function (basePath, result) {\n\n    if (result instanceof Error) {\n        throw result;\n    }\n\n    let paths;\n    if (typeof result === 'string') {\n        paths = [result];\n    }\n    else if (Array.isArray(result)) {\n        paths = result;\n    }\n    else {\n        throw Boom.internal('Invalid path function');\n    }\n\n    return internals.normalizePaths(basePath, paths);\n};\n\n\nexports.handler = function (route, options) {\n\n    const settings = Joi.attempt(options, internals.schema, 'Invalid directory handler options (' + route.path + ')');\n    Hoek.assert(route.path[route.path.length - 1] === '}', 'The route path for a directory handler must end with a parameter:', route.path);\n\n    const paramName = /\\w+/.exec(route.path.slice(route.path.lastIndexOf('{')))[0];\n    const basePath = route.settings.files.relativeTo;\n    const normalized = (Array.isArray(settings.path) ? internals.normalizePaths(basePath, settings.path) : null);            // Array or function\n    const indexNames = (settings.index === true) ? ['index.html'] : (settings.index || []);\n\n    // Declare handler\n\n    const handler = async (request, reply) => {\n\n        const paths = normalized || internals.resolvePathOption(basePath, settings.path.call(null, request));\n\n        // Append parameter\n\n        const selection = request.params[paramName];\n        if (selection &&\n            !settings.showHidden &&\n            internals.isFileHidden(selection)) {\n\n            throw Boom.notFound(null, {});\n        }\n\n        // Generate response\n\n        const resource = request.path;\n        const hasTrailingSlash = resource.endsWith('/');\n        const fileOptions = {\n            confine: null,\n            lookupCompressed: settings.lookupCompressed,\n            lookupMap: settings.lookupMap,\n            etagMethod: settings.etagMethod\n        };\n\n        const each = async (baseDir) => {\n\n            fileOptions.confine = baseDir;\n\n            let path = selection || '';\n            let error;\n\n            try {\n                return await File.load(path, request, fileOptions);\n            }\n            catch (err) {\n                Bounce.ignore(err, 'boom');\n                error = err;\n            }\n\n            // Handle Not found\n\n            if (internals.isNotFound(error)) {\n                if (!settings.defaultExtension) {\n                    throw error;\n                }\n\n                if (hasTrailingSlash) {\n                    path = path.slice(0, -1);\n                }\n\n                return await File.load(path + '.' + settings.defaultExtension, request, fileOptions);\n            }\n\n            // Handle Directory\n\n            if (internals.isDirectory(error)) {\n                if (settings.redirectToSlash !== false &&                       // Defaults to true\n                    !request.server.settings.router.stripTrailingSlash &&\n                    !hasTrailingSlash) {\n\n                    return reply.redirect(resource + '/');\n                }\n\n                for (const indexName of indexNames) {\n                    const indexFile = Path.join(path, indexName);\n                    try {\n                        return await File.load(indexFile, request, fileOptions);\n                    }\n                    catch (err) {\n                        Bounce.ignore(err, 'boom');\n\n                        if (!internals.isNotFound(err)) {\n                            throw Boom.internal(indexName + ' is a directory', err);\n                        }\n\n                        // Not found - try next\n                    }\n                }\n\n                // None of the index files were found\n\n                if (settings.listing) {\n                    return internals.generateListing(Path.join(baseDir, path), resource, selection, hasTrailingSlash, settings, request);\n                }\n            }\n\n            throw error;\n        };\n\n        for (let i = 0; i < paths.length; ++i) {\n            try {\n                return await each(paths[i]);\n            }\n            catch (err) {\n                Bounce.ignore(err, 'boom');\n\n                // Propagate any non-404 errors\n\n                if (!internals.isNotFound(err) ||\n                    i === paths.length - 1) {\n                    throw err;\n                }\n            }\n        }\n\n        throw Boom.notFound(null, {});\n    };\n\n    return handler;\n};\n\n\ninternals.generateListing = async function (path, resource, selection, hasTrailingSlash, settings, request) {\n\n    let files;\n    try {\n        files = await Fs.readdir(path);\n    }\n    catch (err) {\n        Bounce.rethrow(err, 'system');\n        throw Boom.internal('Error accessing directory', err);\n    }\n\n    resource = decodeURIComponent(resource);\n    const display = Hoek.escapeHtml(resource);\n    let html = '<html><head><title>' + display + '</title></head><body><h1>Directory: ' + display + '</h1><ul>';\n\n    if (selection) {\n        const parent = resource.substring(0, resource.lastIndexOf('/', resource.length - (hasTrailingSlash ? 2 : 1))) + '/';\n        html = html + '<li><a href=\"' + internals.pathEncode(parent) + '\">Parent Directory</a></li>';\n    }\n\n    for (let i = 0; i < files.length; ++i) {\n        if (settings.showHidden ||\n            !internals.isFileHidden(files[i])) {\n\n            html = html + '<li><a href=\"' + internals.pathEncode(resource + (selection && !hasTrailingSlash ? '/' : '') + files[i]) + '\">' + Hoek.escapeHtml(files[i]) + '</a></li>';\n        }\n    }\n\n    html = html + '</ul></body></html>';\n\n    return request.generateResponse(html);\n};\n\n\ninternals.isFileHidden = function (path) {\n\n    return /(^|[\\\\\\/])\\.([^.\\\\\\/]|\\.[^\\\\\\/])/.test(path);           // Starts with a '.' or contains '/.' or '\\.', which is not followed by a '/' or '\\' or '.'\n};\n\n\ninternals.pathEncode = function (path) {\n\n    return encodeURIComponent(path).replace(/%2F/g, '/').replace(/%5C/g, '\\\\');\n};\n\n\ninternals.isNotFound = function (boom) {\n\n    return boom.output.statusCode === 404;\n};\n\n\ninternals.isDirectory = function (boom) {\n\n    return boom.output.statusCode === 403 && boom.data.code === 'EISDIR';\n};\n","'use strict';\n\n// Load modules\n\nconst Crypto = require('crypto');\n\nconst Boom = require('boom');\nconst Bounce = require('bounce');\nconst LruCache = require('lru-cache');\n\n\n// Declare internals\n\nconst internals = {\n    pendings: Object.create(null)\n};\n\n\ninternals.streamEnd = function (stream) {\n\n    return new Promise((resolve, reject) => {\n\n        stream.on('end', resolve);\n        stream.on('error', reject);\n    });\n};\n\n\ninternals.computeHashed = async function (response, stat) {\n\n    const etags = response.request.server.plugins.inert._etags;\n    if (!etags) {\n        return null;\n    }\n\n    // Use stat info for an LRU cache key.\n\n    const path = response.source.path;\n    const cachekey = [path, stat.ino, stat.size, stat.mtime.getTime()].join('-');\n\n    // The etag hashes the file contents in order to be consistent across distributed deployments\n\n    const cachedEtag = etags.get(cachekey);\n    if (cachedEtag) {\n        return cachedEtag;\n    }\n\n    let promise = internals.pendings[cachekey];\n    if (promise) {\n        return await promise;\n    }\n\n    // Start hashing\n\n    const compute = async () => {\n\n        try {\n            const hash = await internals.hashFile(response);\n            etags.set(cachekey, hash);\n\n            return hash;\n        }\n        finally {\n            delete internals.pendings[cachekey];\n        }\n    };\n\n    internals.pendings[cachekey] = promise = compute();\n\n    return await promise;\n};\n\n\ninternals.hashFile = async function (response) {\n\n    const hash = Crypto.createHash('sha1');\n    hash.setEncoding('hex');\n\n    const fileStream = response.source.file.createReadStream({ autoClose: false });\n    fileStream.pipe(hash);\n\n    try {\n        await internals.streamEnd(fileStream);\n        return hash.read();\n    }\n    catch (err) {\n        Bounce.rethrow(err, 'system');\n        throw Boom.boomify(err, { message: 'Failed to hash file', data: { path: response.source.path } });\n    }\n};\n\n\ninternals.computeSimple = function (response, stat) {\n\n    const size = stat.size.toString(16);\n    const mtime = stat.mtime.getTime().toString(16);\n\n    return size + '-' + mtime;\n};\n\n\nexports.apply = async function (response, stat) {\n\n    const etagMethod = response.source.settings.etagMethod;\n    if (etagMethod === false) {\n        return;\n    }\n\n    let etag;\n    if (etagMethod === 'simple') {\n        etag = internals.computeSimple(response, stat);\n    }\n    else {\n        etag = await internals.computeHashed(response, stat);\n    }\n\n    if (etag !== null) {\n        response.etag(etag, { vary: true });\n    }\n};\n\n\nexports.Cache = LruCache;\n","'use strict';\n\n// Load modules\n\nconst Path = require('path');\n\nconst Ammo = require('ammo');\nconst Boom = require('boom');\nconst Bounce = require('bounce');\nconst Hoek = require('hoek');\nconst Joi = require('joi');\n\nconst Etag = require('./etag');\nconst Fs = require('./fs');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.defaultMap = {\n    gzip: '.gz'\n};\n\n\ninternals.schema = Joi.alternatives([\n    Joi.string(),\n    Joi.func(),\n    Joi.object({\n        path: Joi.alternatives(Joi.string(), Joi.func()).required(),\n        confine: Joi.alternatives(Joi.string(), Joi.boolean()).default(true),\n        filename: Joi.string(),\n        mode: Joi.string().valid('attachment', 'inline').allow(false),\n        lookupCompressed: Joi.boolean(),\n        lookupMap: Joi.object().min(1).pattern(/.+/, Joi.string()),\n        etagMethod: Joi.string().valid('hash', 'simple').allow(false),\n        start: Joi.number().integer().min(0).default(0),\n        end: Joi.number().integer().min(Joi.ref('start'))\n    })\n        .with('filename', 'mode')\n]);\n\n\nexports.handler = function (route, options) {\n\n    let settings = Joi.attempt(options, internals.schema, 'Invalid file handler options (' + route.path + ')');\n    settings = (typeof options !== 'object' ? { path: options, confine: '.' } : settings);\n    settings.confine = settings.confine === true ? '.' : settings.confine;\n    Hoek.assert(typeof settings.path !== 'string' || settings.path[settings.path.length - 1] !== '/', 'File path cannot end with a \\'/\\':', route.path);\n\n    const handler = (request) => {\n\n        const path = (typeof settings.path === 'function' ? settings.path(request) : settings.path);\n        return exports.response(path, settings, request);\n    };\n\n    return handler;\n};\n\n\nexports.load = function (path, request, options) {\n\n    const response = exports.response(path, options, request, true);\n    return internals.prepare(response);\n};\n\n\nexports.response = function (path, options, request, _preloaded) {\n\n    Hoek.assert(!options.mode || ['attachment', 'inline'].indexOf(options.mode) !== -1, 'options.mode must be either false, attachment, or inline');\n\n    if (options.confine) {\n        const confineDir = Path.resolve(request.route.settings.files.relativeTo, options.confine);\n        path = Path.isAbsolute(path) ? Path.normalize(path) : Path.join(confineDir, path);\n\n        // Verify that resolved path is within confineDir\n        if (path.lastIndexOf(confineDir, 0) !== 0) {\n            path = null;\n        }\n    }\n    else {\n        path = Path.isAbsolute(path) ? Path.normalize(path) : Path.join(request.route.settings.files.relativeTo, path);\n    }\n\n    const source = {\n        path,\n        settings: options,\n        stat: null,\n        file: null\n    };\n\n    const prepare = _preloaded ? null : internals.prepare;\n\n    return request.generateResponse(source, { variety: 'file', marshal: internals.marshal, prepare, close: internals.close });\n};\n\n\ninternals.prepare = async function (response) {\n\n    const path = response.source.path;\n\n    if (path === null) {\n        throw Boom.forbidden(null, { code: 'EACCES' });\n    }\n\n    const file = response.source.file = new Fs.File(path);\n\n    try {\n        const stat = await file.openStat('r');\n\n        const start = response.source.settings.start || 0;\n        if (response.source.settings.end !== undefined) {\n            response.bytes(response.source.settings.end - start + 1);\n        }\n        else {\n            response.bytes(stat.size - start);\n        }\n\n        if (!response.headers['content-type']) {\n            response.type(response.request.server.mime.path(path).type || 'application/octet-stream');\n        }\n\n        response.header('last-modified', stat.mtime.toUTCString());\n\n        if (response.source.settings.mode) {\n            const fileName = response.source.settings.filename || Path.basename(path);\n            response.header('content-disposition', response.source.settings.mode + '; filename=' + encodeURIComponent(fileName));\n        }\n\n        await Etag.apply(response, stat);\n\n        return response;\n    }\n    catch (err) {\n        internals.close(response);\n        throw err;\n    }\n};\n\n\ninternals.marshal = async function (response) {\n\n    if (response.source.settings.lookupCompressed &&\n        !response.source.settings.start &&\n        response.source.settings.end === undefined &&\n        response.request.server.settings.compression !== false) {\n\n        const lookupMap = response.source.settings.lookupMap || internals.defaultMap;\n        const encoding = response.request.info.acceptEncoding;\n        const extension = lookupMap.hasOwnProperty(encoding) ? lookupMap[encoding] : null;\n        if (extension) {\n            const precompressed = new Fs.File(`${response.source.path}${extension}`);\n            let stat;\n            try {\n                stat = await precompressed.openStat('r');\n            }\n            catch (err) {\n                precompressed.close();\n                Bounce.ignore(err, 'boom');\n            }\n\n            if (stat) {\n                response.source.file.close();\n                response.source.file = precompressed;\n\n                response.bytes(stat.size);\n                response.header('content-encoding', encoding);\n                response.vary('accept-encoding');\n            }\n        }\n    }\n\n    return internals.createStream(response);\n};\n\n\ninternals.addContentRange = function (response) {\n\n    const request = response.request;\n    const length = response.headers['content-length'];\n    let range = null;\n\n    if (request.route.settings.response.ranges) {\n        if (request.headers.range && length) {\n\n            // Check If-Range\n\n            if (!request.headers['if-range'] ||\n                request.headers['if-range'] === response.headers.etag) {            // Ignoring last-modified date (weak)\n\n                // Check that response is not encoded once transmitted\n\n                const mime = request.server.mime.type(response.headers['content-type'] || 'application/octet-stream');\n                const encoding = (request.server.settings.compression && mime.compressible && !response.headers['content-encoding'] ? request.info.acceptEncoding : null);\n\n                if (encoding === 'identity' || !encoding) {\n\n                    // Parse header\n\n                    const ranges = Ammo.header(request.headers.range, length);\n                    if (!ranges) {\n                        const error = Boom.rangeNotSatisfiable();\n                        error.output.headers['content-range'] = 'bytes */' + length;\n                        throw error;\n                    }\n\n                    // Prepare transform\n\n                    if (ranges.length === 1) {                                          // Ignore requests for multiple ranges\n                        range = ranges[0];\n                        response.code(206);\n                        response.bytes(range.to - range.from + 1);\n                        response.header('content-range', 'bytes ' + range.from + '-' + range.to + '/' + length);\n                    }\n                }\n            }\n        }\n\n        response.header('accept-ranges', 'bytes');\n    }\n\n    return range;\n};\n\n\ninternals.createStream = function (response) {\n\n    const source = response.source;\n\n    Hoek.assert(source.file !== null);\n\n    const range = internals.addContentRange(response);\n\n    const options = {\n        start: source.settings.start || 0,\n        end: source.settings.end\n    };\n\n    if (range) {\n        options.end = range.to + options.start;\n        options.start = range.from + options.start;\n    }\n\n    return source.file.createReadStream(options);\n};\n\n\ninternals.close = function (response) {\n\n    if (response.source.file !== null) {\n        response.source.file.close();\n        response.source.file = null;\n    }\n};\n","'use strict';\n\n// Load modules\n\nconst Util = require('util');\n\nconst Boom = require('boom');\nconst Bounce = require('bounce');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {\n    methods: {\n        promised: ['open', 'close', 'fstat', 'readdir'],\n        raw: ['createReadStream']\n    }\n};\n\n\nexports.File = function (path) {\n\n    this.path = path;\n    this.fd = null;\n};\n\n\nexports.File.prototype.open = async function (mode) {\n\n    Hoek.assert(this.fd === null);\n\n    try {\n        this.fd = await exports.open(this.path, mode);\n    }\n    catch (err) {\n        const data = { path: this.path };\n\n        if (this.path.indexOf('\\u0000') !== -1 || err.code === 'ENOENT') {\n            throw Boom.notFound(null, data);\n        }\n\n        if (err.code === 'EACCES' || err.code === 'EPERM') {\n            data.code = err.code;\n            throw Boom.forbidden(null, data);\n        }\n\n        throw Boom.boomify(err, { message: 'Failed to open file', data });\n    }\n};\n\n\nexports.File.prototype.close = function () {\n\n    if (this.fd !== null) {\n        Bounce.background(exports.close(this.fd));\n        this.fd = null;\n    }\n};\n\n\nexports.File.prototype.stat = async function () {\n\n    Hoek.assert(this.fd !== null);\n\n    try {\n        const stat = await exports.fstat(this.fd);\n\n        if (stat.isDirectory()) {\n            throw Boom.forbidden(null, { code: 'EISDIR', path: this.path });\n        }\n\n        return stat;\n    }\n    catch (err) {\n        this.close(this.fd);\n\n        Bounce.rethrow(err, ['boom', 'system']);\n        throw Boom.boomify(err, { message: 'Failed to stat file', data: { path: this.path } });\n    }\n};\n\n\nexports.File.prototype.openStat = async function (mode) {\n\n    await this.open(mode);\n    return this.stat();\n};\n\n\nexports.File.prototype.createReadStream = function (options) {\n\n    Hoek.assert(this.fd !== null);\n\n    options = Object.assign({ fd: this.fd, start: 0 }, options);\n\n    const stream = exports.createReadStream(this.path, options);\n\n    if (options.autoClose !== false) {\n        this.fd = null;           // The stream now owns the fd\n    }\n\n    return stream;\n};\n\n\n// Export Fs methods\n\nconst NodeFs = require('fs');\nfor (let i = 0; i < internals.methods.raw.length; ++i) {\n    const method = internals.methods.raw[i];\n    exports[method] = NodeFs[method].bind(NodeFs);\n}\n\nfor (let i = 0; i < internals.methods.promised.length; ++i) {\n    const method = internals.methods.promised[i];\n    exports[method] = Util.promisify(NodeFs[method]);\n}\n","'use strict';\n\n// Load modules\n\nconst Directory = require('./directory');\nconst Etag = require('./etag');\nconst File = require('./file');\nconst Hoek = require('hoek');\nconst Joi = require('joi');\n\n\n// Declare internals\n\nconst internals = {\n    schema: Joi.object({\n        etagsCacheMaxSize: Joi.number().integer().min(0).default(1000)\n    }).required()\n};\n\n\ninternals.fileMethod = function (path, responseOptions) {\n\n    // Set correct confine value\n\n    responseOptions = responseOptions || {};\n\n    if (typeof responseOptions.confine === 'undefined' || responseOptions.confine === true) {\n        responseOptions.confine = '.';\n    }\n\n    Hoek.assert(responseOptions.end === undefined || +responseOptions.start <= +responseOptions.end, 'options.start must be less than or equal to options.end');\n\n    return this.response(File.response(path, responseOptions, this.request));\n};\n\n\nexports.plugin = {\n    pkg: require('../package.json'),\n    once: true,\n\n    register(server, options) {\n\n        Hoek.assert(Object.keys(options).length === 0, 'Inert does not support registration options');\n        const settings = Joi.attempt(Hoek.reach(server.settings.plugins, 'inert') || {}, internals.schema, 'Invalid \"inert\" server options');\n\n        server.expose('_etags', settings.etagsCacheMaxSize > 0 ? new Etag.Cache(settings.etagsCacheMaxSize) : null);\n\n        server.decorate('handler', 'file', File.handler);\n        server.decorate('handler', 'directory', Directory.handler);\n        server.decorate('toolkit', 'file', internals.fileMethod);\n    }\n};\n","'use strict';\n\n// Load modules\n\nconst Crypto = require('crypto');\n\nconst Boom = require('boom');\nconst Hoek = require('hoek');\nconst Cryptiles = require('cryptiles');\n\n\n// Declare internals\n\nconst internals = {};\n\n\n// Common defaults\n\nexports.defaults = {\n    encryption: {\n        saltBits: 256,\n        algorithm: 'aes-256-cbc',\n        iterations: 1,\n        minPasswordlength: 32\n    },\n\n    integrity: {\n        saltBits: 256,\n        algorithm: 'sha256',\n        iterations: 1,\n        minPasswordlength: 32\n    },\n\n    ttl: 0,                                             // Milliseconds, 0 means forever\n    timestampSkewSec: 60,                               // Seconds of permitted clock skew for incoming expirations\n    localtimeOffsetMsec: 0                              // Local clock time offset express in a number of milliseconds (positive or negative)\n};\n\n\n// Algorithm configuration\n\nexports.algorithms = {\n    'aes-128-ctr': { keyBits: 128, ivBits: 128 },       // Requires node 0.10.x\n    'aes-256-cbc': { keyBits: 256, ivBits: 128 },\n    'sha256': { keyBits: 256 }\n};\n\n\n// MAC normalization format version\n\nexports.macFormatVersion = '2';                         // Prevent comparison of mac values generated with different normalized string formats\nexports.macPrefix = 'Fe26.' + exports.macFormatVersion;\n\n\n// Generate a unique encryption key\n\n/*\n    const options =  {\n        saltBits: 256,                                  // Ignored if salt is set\n        salt: '4d8nr9q384nr9q384nr93q8nruq9348run',\n        algorithm: 'aes-128-ctr',\n        iterations: 10000,\n        iv: 'sdfsdfsdfsdfscdrgercgesrcgsercg',          // Optional\n        minPasswordlength: 32\n    };\n*/\n\nexports.generateKey = async function (password, options) {\n\n    if (!password) {\n        throw new Boom('Empty password');\n    }\n\n    if (!options ||\n        typeof options !== 'object') {\n\n        throw new Boom('Bad options');\n    }\n\n    const algorithm = exports.algorithms[options.algorithm];\n    if (!algorithm) {\n        throw new Boom('Unknown algorithm: ' + options.algorithm);\n    }\n\n    const result = {};\n\n    if (Buffer.isBuffer(password)) {\n        if (password.length < algorithm.keyBits / 8) {\n            throw new Boom('Key buffer (password) too small');\n        }\n\n        result.key = password;\n        result.salt = '';\n    }\n    else {\n        if (password.length < options.minPasswordlength) {\n            throw new Boom('Password string too short (min ' + options.minPasswordlength + ' characters required)');\n        }\n\n        let salt = options.salt;\n        if (!salt) {\n            if (!options.saltBits) {\n                throw new Boom('Missing salt or saltBits options');\n            }\n\n            const randomSalt = Cryptiles.randomBits(options.saltBits);\n            salt = randomSalt.toString('hex');\n        }\n\n        const derivedKey = await internals.pbkdf2(password, salt, options.iterations, algorithm.keyBits / 8, 'sha1');\n\n        result.key = derivedKey;\n        result.salt = salt;\n    }\n\n    if (algorithm.ivBits &&\n        !options.iv) {\n\n        const randomIv = Cryptiles.randomBits(algorithm.ivBits);\n        result.iv = randomIv;\n    }\n    else if (options.iv) {\n        result.iv = options.iv;\n    }\n\n    return result;\n};\n\n\n// Encrypt data\n// options: see exports.generateKey()\n\nexports.encrypt = async function (password, options, data) {\n\n    const key = await exports.generateKey(password, options);\n    const cipher = Crypto.createCipheriv(options.algorithm, key.key, key.iv);\n    const encrypted = Buffer.concat([cipher.update(data, 'utf8'), cipher.final()]);\n\n    return { encrypted, key };\n};\n\n\n// Decrypt data\n// options: see exports.generateKey()\n\nexports.decrypt = async function (password, options, data) {\n\n    const key = await exports.generateKey(password, options);\n    const decipher = Crypto.createDecipheriv(options.algorithm, key.key, key.iv);\n    let dec = decipher.update(data, null, 'utf8');\n    dec = dec + decipher.final('utf8');\n\n    return dec;\n};\n\n\n// HMAC using a password\n// options: see exports.generateKey()\n\nexports.hmacWithPassword = async function (password, options, data) {\n\n    const key = await exports.generateKey(password, options);\n    const hmac = Crypto.createHmac(options.algorithm, key.key).update(data);\n    const digest = hmac.digest('base64').replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=/g, '');\n\n    const result = {\n        digest,\n        salt: key.salt\n    };\n\n    return result;\n};\n\n\n// Normalizes a password parameter into a { id, encryption, integrity } object\n// password: string, buffer or object with { id, secret } or { id, encryption, integrity }\n\ninternals.normalizePassword = function (password) {\n\n    const obj = {};\n\n    if (password instanceof Object &&\n        !Buffer.isBuffer(password)) {\n\n        obj.id = password.id;\n        obj.encryption = password.secret || password.encryption;\n        obj.integrity = password.secret || password.integrity;\n    }\n    else {\n        obj.encryption = password;\n        obj.integrity = password;\n    }\n\n    return obj;\n};\n\n\n// Encrypt and HMAC an object\n// password: string, buffer or object with { id, secret } or { id, encryption, integrity }\n// options: see exports.defaults\n\nexports.seal = async function (object, password, options) {\n\n    const now = Date.now() + (options.localtimeOffsetMsec || 0);                 // Measure now before any other processing\n\n    // Serialize object\n\n    const objectString = internals.stringify(object);\n\n    // Obtain password\n\n    let passwordId = '';\n    password = internals.normalizePassword(password);\n    if (password.id) {\n        if (!/^\\w+$/.test(password.id)) {\n            throw new Boom('Invalid password id');\n        }\n\n        passwordId = password.id;\n    }\n\n    // Encrypt object string\n\n    const { encrypted, key } = await exports.encrypt(password.encryption, options.encryption, objectString);\n\n    // Base64url the encrypted value\n\n    const encryptedB64 = Hoek.base64urlEncode(encrypted);\n    const iv = Hoek.base64urlEncode(key.iv);\n    const expiration = (options.ttl ? now + options.ttl : '');\n    const macBaseString = exports.macPrefix + '*' + passwordId + '*' + key.salt + '*' + iv + '*' + encryptedB64 + '*' + expiration;\n\n    // Mac the combined values\n\n    const mac = await exports.hmacWithPassword(password.integrity, options.integrity, macBaseString);\n\n    // Put it all together\n\n    // prefix*[password-id]*encryption-salt*encryption-iv*encrypted*[expiration]*hmac-salt*hmac\n    // Allowed URI query name/value characters: *-. \\d \\w\n\n    const sealed = macBaseString + '*' + mac.salt + '*' + mac.digest;\n    return sealed;\n};\n\n\n// Decrypt and validate sealed string\n// password: string, buffer or object with { id: secret } or { id: { encryption, integrity } }\n// options: see exports.defaults\n\nexports.unseal = async function (sealed, password, options) {\n\n    const now = Date.now() + (options.localtimeOffsetMsec || 0);                 // Measure now before any other processing\n\n    // Break string into components\n\n    const parts = sealed.split('*');\n    if (parts.length !== 8) {\n        throw new Boom('Incorrect number of sealed components');\n    }\n\n    const macPrefix = parts[0];\n    const passwordId = parts[1];\n    const encryptionSalt = parts[2];\n    const encryptionIv = parts[3];\n    const encryptedB64 = parts[4];\n    const expiration = parts[5];\n    const hmacSalt = parts[6];\n    const hmac = parts[7];\n    const macBaseString = macPrefix + '*' + passwordId + '*' + encryptionSalt + '*' + encryptionIv + '*' + encryptedB64 + '*' + expiration;\n\n    // Check prefix\n\n    if (macPrefix !== exports.macPrefix) {\n        throw new Boom('Wrong mac prefix');\n    }\n\n    // Check expiration\n\n    if (expiration) {\n        if (!expiration.match(/^\\d+$/)) {\n            throw new Boom('Invalid expiration');\n        }\n\n        const exp = parseInt(expiration, 10);\n        if (exp <= (now - (options.timestampSkewSec * 1000))) {\n            throw new Boom('Expired seal');\n        }\n    }\n\n    // Obtain password\n\n    if (password instanceof Object &&\n        !(Buffer.isBuffer(password))) {\n\n        password = password[passwordId || 'default'];\n        if (!password) {\n            throw new Boom('Cannot find password: ' + passwordId);\n        }\n    }\n    password = internals.normalizePassword(password);\n\n    // Check hmac\n\n    const macOptions = Hoek.clone(options.integrity);\n    macOptions.salt = hmacSalt;\n    const mac = await exports.hmacWithPassword(password.integrity, macOptions, macBaseString);\n\n    if (!Cryptiles.fixedTimeComparison(mac.digest, hmac)) {\n        throw new Boom('Bad hmac value');\n    }\n\n    // Decrypt\n\n    try {\n        var encrypted = Hoek.base64urlDecode(encryptedB64, 'buffer');\n    }\n    catch (err) {\n        throw Boom.boomify(err);\n    }\n\n    const decryptOptions = Hoek.clone(options.encryption);\n    decryptOptions.salt = encryptionSalt;\n\n    try {\n        decryptOptions.iv = Hoek.base64urlDecode(encryptionIv, 'buffer');\n    }\n    catch (err) {\n        throw Boom.boomify(err);\n    }\n\n    const decrypted = await exports.decrypt(password.encryption, decryptOptions, encrypted);\n\n    // Parse JSON\n\n    let object = null;\n    try {\n        object = JSON.parse(decrypted);\n    }\n    catch (err) {\n        throw new Boom('Failed parsing sealed object JSON: ' + err.message);\n    }\n\n    return object;\n};\n\n\ninternals.stringify = function (object) {\n\n    try {\n        return JSON.stringify(object);\n    }\n    catch (err) {\n        throw new Boom('Failed to stringify object: ' + err.message);\n    }\n};\n\n\ninternals.pbkdf2 = function (...args) {\n\n    return new Promise((resolve, reject) => {\n\n        const next = (err, result) => {\n\n            if (err) {\n                return reject(Boom.boomify(err));\n            }\n\n            resolve(result);\n        };\n\n        args.push(next);\n        Crypto.pbkdf2(...args);\n    });\n};\n","'use strict';\n\n// Load modules\n\nconst Punycode = require('punycode');\nconst Util = require('util');\n\n// Declare internals\n\nconst internals = {\n    hasOwn: Object.prototype.hasOwnProperty,\n    indexOf: Array.prototype.indexOf,\n    defaultThreshold: 16,\n    maxIPv6Groups: 8,\n\n    categories: {\n        valid: 1,\n        dnsWarn: 7,\n        rfc5321: 15,\n        cfws: 31,\n        deprecated: 63,\n        rfc5322: 127,\n        error: 255\n    },\n\n    diagnoses: {\n\n        // Address is valid\n\n        valid: 0,\n\n        // Address is valid for SMTP but has unusual elements\n\n        rfc5321TLD: 9,\n        rfc5321TLDNumeric: 10,\n        rfc5321QuotedString: 11,\n        rfc5321AddressLiteral: 12,\n\n        // Address is valid for message, but must be modified for envelope\n\n        cfwsComment: 17,\n        cfwsFWS: 18,\n\n        // Address contains non-ASCII when the allowUnicode option is false\n        // Has to be > internals.defaultThreshold so that it's rejected\n        // without an explicit errorLevel:\n        undesiredNonAscii: 25,\n\n        // Address contains deprecated elements, but may still be valid in some contexts\n\n        deprecatedLocalPart: 33,\n        deprecatedFWS: 34,\n        deprecatedQTEXT: 35,\n        deprecatedQP: 36,\n        deprecatedComment: 37,\n        deprecatedCTEXT: 38,\n        deprecatedIPv6: 39,\n        deprecatedCFWSNearAt: 49,\n\n        // Address is only valid according to broad definition in RFC 5322, but is otherwise invalid\n\n        rfc5322Domain: 65,\n        rfc5322TooLong: 66,\n        rfc5322LocalTooLong: 67,\n        rfc5322DomainTooLong: 68,\n        rfc5322LabelTooLong: 69,\n        rfc5322DomainLiteral: 70,\n        rfc5322DomainLiteralOBSDText: 71,\n        rfc5322IPv6GroupCount: 72,\n        rfc5322IPv62x2xColon: 73,\n        rfc5322IPv6BadCharacter: 74,\n        rfc5322IPv6MaxGroups: 75,\n        rfc5322IPv6ColonStart: 76,\n        rfc5322IPv6ColonEnd: 77,\n\n        // Address is invalid for any purpose\n\n        errExpectingDTEXT: 129,\n        errNoLocalPart: 130,\n        errNoDomain: 131,\n        errConsecutiveDots: 132,\n        errATEXTAfterCFWS: 133,\n        errATEXTAfterQS: 134,\n        errATEXTAfterDomainLiteral: 135,\n        errExpectingQPair: 136,\n        errExpectingATEXT: 137,\n        errExpectingQTEXT: 138,\n        errExpectingCTEXT: 139,\n        errBackslashEnd: 140,\n        errDotStart: 141,\n        errDotEnd: 142,\n        errDomainHyphenStart: 143,\n        errDomainHyphenEnd: 144,\n        errUnclosedQuotedString: 145,\n        errUnclosedComment: 146,\n        errUnclosedDomainLiteral: 147,\n        errFWSCRLFx2: 148,\n        errFWSCRLFEnd: 149,\n        errCRNoLF: 150,\n        errUnknownTLD: 160,\n        errDomainTooShort: 161\n    },\n\n    components: {\n        localpart: 0,\n        domain: 1,\n        literal: 2,\n        contextComment: 3,\n        contextFWS: 4,\n        contextQuotedString: 5,\n        contextQuotedPair: 6\n    }\n};\n\n\ninternals.specials = function () {\n\n    const specials = '()<>[]:;@\\\\,.\"';        // US-ASCII visible characters not valid for atext (http://tools.ietf.org/html/rfc5322#section-3.2.3)\n    const lookup = new Array(0x100);\n    lookup.fill(false);\n\n    for (let i = 0; i < specials.length; ++i) {\n        lookup[specials.codePointAt(i)] = true;\n    }\n\n    return function (code) {\n\n        return lookup[code];\n    };\n}();\n\ninternals.c0Controls = function () {\n\n    const lookup = new Array(0x100);\n    lookup.fill(false);\n\n    // add C0 control characters\n\n    for (let i = 0; i < 33; ++i) {\n        lookup[i] = true;\n    }\n\n    return function (code) {\n\n        return lookup[code];\n    };\n}();\n\ninternals.c1Controls = function () {\n\n    const lookup = new Array(0x100);\n    lookup.fill(false);\n\n    // add C1 control characters\n\n    for (let i = 127; i < 160; ++i) {\n        lookup[i] = true;\n    }\n\n    return function (code) {\n\n        return lookup[code];\n    };\n}();\n\ninternals.regex = {\n    ipV4: /\\b(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n    ipV6: /^[a-fA-F\\d]{0,4}$/\n};\n\ninternals.normalizeSupportsNul = '\\0'.normalize('NFC') === '\\0';\n\n\n// $lab:coverage:off$\ninternals.nulNormalize = function (email) {\n\n    return email.split('\\0').map((part) => part.normalize('NFC')).join('\\0');\n};\n// $lab:coverage:on$\n\n\ninternals.normalize = function (email) {\n\n    // $lab:coverage:off$\n    if (!internals.normalizeSupportsNul && email.indexOf('\\0') >= 0) {\n        return internals.nulNormalize(email);\n    }\n    // $lab:coverage:on$\n\n    return email.normalize('NFC');\n};\n\n\ninternals.checkIpV6 = function (items) {\n\n    return items.every((value) => internals.regex.ipV6.test(value));\n};\n\n\n// Node 10 introduced isSet and isMap, which are useful for cross-context type\n// checking.\n// $lab:coverage:off$\ninternals._isSet = (value) => value instanceof Set;\ninternals._isMap = (value) => value instanceof Map;\ninternals.isSet = Util.types && Util.types.isSet || internals._isSet;\ninternals.isMap = Util.types && Util.types.isMap || internals._isMap;\n// $lab:coverage:on$\n\n\n/**\n * Normalize the given lookup \"table\" to an iterator. Outputs items in arrays\n * and sets, keys from maps (regardless of the corresponding value), and own\n * enumerable keys from all other objects (intended to be plain objects).\n *\n * @param {*} table The table to convert.\n * @returns {Iterable<*>} The converted table.\n */\ninternals.normalizeTable = function (table) {\n\n    if (internals.isSet(table) || Array.isArray(table)) {\n        return table;\n    }\n\n    if (internals.isMap(table)) {\n        return table.keys();\n    }\n\n    return Object.keys(table);\n};\n\n\n/**\n * Convert the given domain atom to its canonical form using Nameprep and string\n * lowercasing. Domain atoms that are all-ASCII will not undergo any changes via\n * Nameprep, and domain atoms that have already been canonicalized will not be\n * altered.\n *\n * @param {string} atom The atom to canonicalize.\n * @returns {string} The canonicalized atom.\n */\ninternals.canonicalizeAtom = function (atom) {\n\n    return Punycode.toASCII(atom).toLowerCase();\n};\n\n\n/**\n * Check whether any of the values in the given iterable, when passed through\n * the iteratee function, are equal to the given value.\n *\n * @param {Iterable<*>} iterable The iterable to check.\n * @param {function(*): *} iteratee The iteratee that receives each item from\n *   the iterable.\n * @param {*} value The reference value.\n * @returns {boolean} Whether the given value matches any of the items in the\n *   iterable per the iteratee.\n */\ninternals.includesMapped = function (iterable, iteratee, value) {\n\n    for (const item of iterable) {\n        if (value === iteratee(item)) {\n            return true;\n        }\n    }\n    return false;\n};\n\n\n/**\n * Check whether the given top-level domain atom is valid based on the\n * configured blacklist/whitelist.\n *\n * @param {string} tldAtom The atom to check.\n * @param {Object} options\n *   {*} tldBlacklist The set of domains to consider invalid.\n *   {*} tldWhitelist The set of domains to consider valid.\n * @returns {boolean} Whether the given domain atom is valid per the blacklist/\n *   whitelist.\n */\ninternals.validDomain = function (tldAtom, options) {\n\n    // Nameprep handles case-sensitive unicode stuff, but doesn't touch\n    // uppercase ASCII characters.\n    const canonicalTldAtom = internals.canonicalizeAtom(tldAtom);\n\n    if (options.tldBlacklist) {\n        return !internals.includesMapped(\n            internals.normalizeTable(options.tldBlacklist),\n            internals.canonicalizeAtom, canonicalTldAtom);\n    }\n\n    return internals.includesMapped(\n        internals.normalizeTable(options.tldWhitelist),\n        internals.canonicalizeAtom, canonicalTldAtom);\n};\n\n\n/**\n * Check that an email address conforms to RFCs 5321, 5322, 6530 and others\n *\n * We distinguish clearly between a Mailbox as defined by RFC 5321 and an\n * addr-spec as defined by RFC 5322. Depending on the context, either can be\n * regarded as a valid email address. The RFC 5321 Mailbox specification is\n * more restrictive (comments, white space and obsolete forms are not allowed).\n *\n * @param {string} email The email address to check. See README for specifics.\n * @param {Object} options The (optional) options:\n *   {*} errorLevel Determines the boundary between valid and invalid\n *     addresses.\n *   {*} tldBlacklist The set of domains to consider invalid.\n *   {*} tldWhitelist The set of domains to consider valid.\n *   {*} allowUnicode Whether to allow non-ASCII characters, defaults to true.\n *   {*} minDomainAtoms The minimum number of domain atoms which must be present\n *     for the address to be valid.\n * @param {function(number|boolean)} callback The (optional) callback handler.\n * @return {*}\n */\n\nexports.validate = internals.validate = function (email, options, callback) {\n\n    options = options || {};\n    email = internals.normalize(email);\n\n    // The callback function is deprecated.\n    // $lab:coverage:off$\n    if (typeof options === 'function') {\n        callback = options;\n        options = {};\n    }\n\n    if (typeof callback !== 'function') {\n        callback = null;\n    }\n    // $lab:coverage:on$\n\n    let diagnose;\n    let threshold;\n\n    if (typeof options.errorLevel === 'number') {\n        diagnose = true;\n        threshold = options.errorLevel;\n    }\n    else {\n        diagnose = !!options.errorLevel;\n        threshold = internals.diagnoses.valid;\n    }\n\n    if (options.tldWhitelist) {\n        if (typeof options.tldWhitelist === 'string') {\n            options.tldWhitelist = [options.tldWhitelist];\n        }\n        else if (typeof options.tldWhitelist !== 'object') {\n            throw new TypeError('expected array or object tldWhitelist');\n        }\n    }\n\n    if (options.tldBlacklist) {\n        if (typeof options.tldBlacklist === 'string') {\n            options.tldBlacklist = [options.tldBlacklist];\n        }\n        else if (typeof options.tldBlacklist !== 'object') {\n            throw new TypeError('expected array or object tldBlacklist');\n        }\n    }\n\n    if (options.minDomainAtoms && (options.minDomainAtoms !== ((+options.minDomainAtoms) | 0) || options.minDomainAtoms < 0)) {\n        throw new TypeError('expected positive integer minDomainAtoms');\n    }\n\n    let maxResult = internals.diagnoses.valid;\n    const updateResult = (value) => {\n\n        if (value > maxResult) {\n            maxResult = value;\n        }\n    };\n\n    const allowUnicode = options.allowUnicode === undefined || !!options.allowUnicode;\n    if (!allowUnicode && /[^\\x00-\\x7f]/.test(email)) {\n        updateResult(internals.diagnoses.undesiredNonAscii);\n    }\n\n    const context = {\n        now: internals.components.localpart,\n        prev: internals.components.localpart,\n        stack: [internals.components.localpart]\n    };\n\n    let prevToken = '';\n\n    const parseData = {\n        local: '',\n        domain: ''\n    };\n    const atomData = {\n        locals: [''],\n        domains: ['']\n    };\n\n    let elementCount = 0;\n    let elementLength = 0;\n    let crlfCount = 0;\n    let charCode;\n\n    let hyphenFlag = false;\n    let assertEnd = false;\n\n    const emailLength = email.length;\n\n    let token;                                      // Token is used outside the loop, must declare similarly\n    for (let i = 0; i < emailLength; i += token.length) {\n        // Utilize codepoints to account for Unicode surrogate pairs\n        token = String.fromCodePoint(email.codePointAt(i));\n\n        switch (context.now) {\n            // Local-part\n            case internals.components.localpart:\n                // http://tools.ietf.org/html/rfc5322#section-3.4.1\n                //   local-part      =   dot-atom / quoted-string / obs-local-part\n                //\n                //   dot-atom        =   [CFWS] dot-atom-text [CFWS]\n                //\n                //   dot-atom-text   =   1*atext *(\".\" 1*atext)\n                //\n                //   quoted-string   =   [CFWS]\n                //                       DQUOTE *([FWS] qcontent) [FWS] DQUOTE\n                //                       [CFWS]\n                //\n                //   obs-local-part  =   word *(\".\" word)\n                //\n                //   word            =   atom / quoted-string\n                //\n                //   atom            =   [CFWS] 1*atext [CFWS]\n                switch (token) {\n                    // Comment\n                    case '(':\n                        if (elementLength === 0) {\n                            // Comments are OK at the beginning of an element\n                            updateResult(elementCount === 0 ? internals.diagnoses.cfwsComment : internals.diagnoses.deprecatedComment);\n                        }\n                        else {\n                            updateResult(internals.diagnoses.cfwsComment);\n                            // Cannot start a comment in an element, should be end\n                            assertEnd = true;\n                        }\n\n                        context.stack.push(context.now);\n                        context.now = internals.components.contextComment;\n                        break;\n\n                        // Next dot-atom element\n                    case '.':\n                        if (elementLength === 0) {\n                            // Another dot, already?\n                            updateResult(elementCount === 0 ? internals.diagnoses.errDotStart : internals.diagnoses.errConsecutiveDots);\n                        }\n                        else {\n                            // The entire local-part can be a quoted string for RFC 5321; if one atom is quoted it's an RFC 5322 obsolete form\n                            if (assertEnd) {\n                                updateResult(internals.diagnoses.deprecatedLocalPart);\n                            }\n\n                            // CFWS & quoted strings are OK again now we're at the beginning of an element (although they are obsolete forms)\n                            assertEnd = false;\n                            elementLength = 0;\n                            ++elementCount;\n                            parseData.local += token;\n                            atomData.locals[elementCount] = '';\n                        }\n\n                        break;\n\n                        // Quoted string\n                    case '\"':\n                        if (elementLength === 0) {\n                            // The entire local-part can be a quoted string for RFC 5321; if one atom is quoted it's an RFC 5322 obsolete form\n                            updateResult(elementCount === 0 ? internals.diagnoses.rfc5321QuotedString : internals.diagnoses.deprecatedLocalPart);\n\n                            parseData.local += token;\n                            atomData.locals[elementCount] += token;\n                            elementLength += Buffer.byteLength(token, 'utf8');\n\n                            // Quoted string must be the entire element\n                            assertEnd = true;\n                            context.stack.push(context.now);\n                            context.now = internals.components.contextQuotedString;\n                        }\n                        else {\n                            updateResult(internals.diagnoses.errExpectingATEXT);\n                        }\n\n                        break;\n\n                        // Folding white space\n                    case '\\r':\n                        if (emailLength === ++i || email[i] !== '\\n') {\n                            // Fatal error\n                            updateResult(internals.diagnoses.errCRNoLF);\n                            break;\n                        }\n\n                        // Fallthrough\n\n                    case ' ':\n                    case '\\t':\n                        if (elementLength === 0) {\n                            updateResult(elementCount === 0 ? internals.diagnoses.cfwsFWS : internals.diagnoses.deprecatedFWS);\n                        }\n                        else {\n                            // We can't start FWS in the middle of an element, better be end\n                            assertEnd = true;\n                        }\n\n                        context.stack.push(context.now);\n                        context.now = internals.components.contextFWS;\n                        prevToken = token;\n                        break;\n\n                    case '@':\n                        // At this point we should have a valid local-part\n                        // $lab:coverage:off$\n                        if (context.stack.length !== 1) {\n                            throw new Error('unexpected item on context stack');\n                        }\n                        // $lab:coverage:on$\n\n                        if (parseData.local.length === 0) {\n                            // Fatal error\n                            updateResult(internals.diagnoses.errNoLocalPart);\n                        }\n                        else if (elementLength === 0) {\n                            // Fatal error\n                            updateResult(internals.diagnoses.errDotEnd);\n                        }\n                        // http://tools.ietf.org/html/rfc5321#section-4.5.3.1.1 the maximum total length of a user name or other local-part is 64\n                        //    octets\n                        else if (Buffer.byteLength(parseData.local, 'utf8') > 64) {\n                            updateResult(internals.diagnoses.rfc5322LocalTooLong);\n                        }\n                        // http://tools.ietf.org/html/rfc5322#section-3.4.1 comments and folding white space SHOULD NOT be used around \"@\" in the\n                        //    addr-spec\n                        //\n                        // http://tools.ietf.org/html/rfc2119\n                        // 4. SHOULD NOT this phrase, or the phrase \"NOT RECOMMENDED\" mean that there may exist valid reasons in particular\n                        //    circumstances when the particular behavior is acceptable or even useful, but the full implications should be understood\n                        //    and the case carefully weighed before implementing any behavior described with this label.\n                        else if (context.prev === internals.components.contextComment || context.prev === internals.components.contextFWS) {\n                            updateResult(internals.diagnoses.deprecatedCFWSNearAt);\n                        }\n\n                        // Clear everything down for the domain parsing\n                        context.now = internals.components.domain;\n                        context.stack[0] = internals.components.domain;\n                        elementCount = 0;\n                        elementLength = 0;\n                        assertEnd = false; // CFWS can only appear at the end of the element\n                        break;\n\n                        // ATEXT\n                    default:\n                        // http://tools.ietf.org/html/rfc5322#section-3.2.3\n                        //    atext = ALPHA / DIGIT / ; Printable US-ASCII\n                        //            \"!\" / \"#\" /     ;  characters not including\n                        //            \"$\" / \"%\" /     ;  specials.  Used for atoms.\n                        //            \"&\" / \"'\" /\n                        //            \"*\" / \"+\" /\n                        //            \"-\" / \"/\" /\n                        //            \"=\" / \"?\" /\n                        //            \"^\" / \"_\" /\n                        //            \"`\" / \"{\" /\n                        //            \"|\" / \"}\" /\n                        //            \"~\"\n                        if (assertEnd) {\n                            // We have encountered atext where it is no longer valid\n                            switch (context.prev) {\n                                case internals.components.contextComment:\n                                case internals.components.contextFWS:\n                                    updateResult(internals.diagnoses.errATEXTAfterCFWS);\n                                    break;\n\n                                case internals.components.contextQuotedString:\n                                    updateResult(internals.diagnoses.errATEXTAfterQS);\n                                    break;\n\n                                    // $lab:coverage:off$\n                                default:\n                                    throw new Error('more atext found where none is allowed, but unrecognized prev context: ' + context.prev);\n                                    // $lab:coverage:on$\n                            }\n                        }\n                        else {\n                            context.prev = context.now;\n                            charCode = token.codePointAt(0);\n\n                            // Especially if charCode == 10\n                            if (internals.specials(charCode) || internals.c0Controls(charCode) || internals.c1Controls(charCode)) {\n\n                                // Fatal error\n                                updateResult(internals.diagnoses.errExpectingATEXT);\n                            }\n\n                            parseData.local += token;\n                            atomData.locals[elementCount] += token;\n                            elementLength += Buffer.byteLength(token, 'utf8');\n                        }\n                }\n\n                break;\n\n            case internals.components.domain:\n                // http://tools.ietf.org/html/rfc5322#section-3.4.1\n                //   domain          =   dot-atom / domain-literal / obs-domain\n                //\n                //   dot-atom        =   [CFWS] dot-atom-text [CFWS]\n                //\n                //   dot-atom-text   =   1*atext *(\".\" 1*atext)\n                //\n                //   domain-literal  =   [CFWS] \"[\" *([FWS] dtext) [FWS] \"]\" [CFWS]\n                //\n                //   dtext           =   %d33-90 /          ; Printable US-ASCII\n                //                       %d94-126 /         ;  characters not including\n                //                       obs-dtext          ;  \"[\", \"]\", or \"\\\"\n                //\n                //   obs-domain      =   atom *(\".\" atom)\n                //\n                //   atom            =   [CFWS] 1*atext [CFWS]\n\n                // http://tools.ietf.org/html/rfc5321#section-4.1.2\n                //   Mailbox        = Local-part \"@\" ( Domain / address-literal )\n                //\n                //   Domain         = sub-domain *(\".\" sub-domain)\n                //\n                //   address-literal  = \"[\" ( IPv4-address-literal /\n                //                    IPv6-address-literal /\n                //                    General-address-literal ) \"]\"\n                //                    ; See Section 4.1.3\n\n                // http://tools.ietf.org/html/rfc5322#section-3.4.1\n                //      Note: A liberal syntax for the domain portion of addr-spec is\n                //      given here.  However, the domain portion contains addressing\n                //      information specified by and used in other protocols (e.g.,\n                //      [RFC1034], [RFC1035], [RFC1123], [RFC5321]).  It is therefore\n                //      incumbent upon implementations to conform to the syntax of\n                //      addresses for the context in which they are used.\n                //\n                // is_email() author's note: it's not clear how to interpret this in\n                // he context of a general email address validator. The conclusion I\n                // have reached is this: \"addressing information\" must comply with\n                // RFC 5321 (and in turn RFC 1035), anything that is \"semantically\n                // invisible\" must comply only with RFC 5322.\n                switch (token) {\n                    // Comment\n                    case '(':\n                        if (elementLength === 0) {\n                            // Comments at the start of the domain are deprecated in the text, comments at the start of a subdomain are obs-domain\n                            // http://tools.ietf.org/html/rfc5322#section-3.4.1\n                            updateResult(elementCount === 0 ? internals.diagnoses.deprecatedCFWSNearAt : internals.diagnoses.deprecatedComment);\n                        }\n                        else {\n                            // We can't start a comment mid-element, better be at the end\n                            assertEnd = true;\n                            updateResult(internals.diagnoses.cfwsComment);\n                        }\n\n                        context.stack.push(context.now);\n                        context.now = internals.components.contextComment;\n                        break;\n\n                        // Next dot-atom element\n                    case '.':\n                        const punycodeLength = Punycode.encode(atomData.domains[elementCount]).length;\n                        if (elementLength === 0) {\n                            // Another dot, already? Fatal error.\n                            updateResult(elementCount === 0 ? internals.diagnoses.errDotStart : internals.diagnoses.errConsecutiveDots);\n                        }\n                        else if (hyphenFlag) {\n                            // Previous subdomain ended in a hyphen. Fatal error.\n                            updateResult(internals.diagnoses.errDomainHyphenEnd);\n                        }\n                        else if (punycodeLength > 63) {\n                            // RFC 5890 specifies that domain labels that are encoded using the Punycode algorithm\n                            // must adhere to the <= 63 octet requirement.\n                            // This includes string prefixes from the Punycode algorithm.\n                            //\n                            // https://tools.ietf.org/html/rfc5890#section-2.3.2.1\n                            // labels          63 octets or less\n\n                            updateResult(internals.diagnoses.rfc5322LabelTooLong);\n                        }\n\n                        // CFWS is OK again now we're at the beginning of an element (although\n                        // it may be obsolete CFWS)\n                        assertEnd = false;\n                        elementLength = 0;\n                        ++elementCount;\n                        atomData.domains[elementCount] = '';\n                        parseData.domain += token;\n\n                        break;\n\n                        // Domain literal\n                    case '[':\n                        if (parseData.domain.length === 0) {\n                            // Domain literal must be the only component\n                            assertEnd = true;\n                            elementLength += Buffer.byteLength(token, 'utf8');\n                            context.stack.push(context.now);\n                            context.now = internals.components.literal;\n                            parseData.domain += token;\n                            atomData.domains[elementCount] += token;\n                            parseData.literal = '';\n                        }\n                        else {\n                            // Fatal error\n                            updateResult(internals.diagnoses.errExpectingATEXT);\n                        }\n\n                        break;\n\n                        // Folding white space\n                    case '\\r':\n                        if (emailLength === ++i || email[i] !== '\\n') {\n                            // Fatal error\n                            updateResult(internals.diagnoses.errCRNoLF);\n                            break;\n                        }\n\n                        // Fallthrough\n\n                    case ' ':\n                    case '\\t':\n                        if (elementLength === 0) {\n                            updateResult(elementCount === 0 ? internals.diagnoses.deprecatedCFWSNearAt : internals.diagnoses.deprecatedFWS);\n                        }\n                        else {\n                            // We can't start FWS in the middle of an element, so this better be the end\n                            updateResult(internals.diagnoses.cfwsFWS);\n                            assertEnd = true;\n                        }\n\n                        context.stack.push(context.now);\n                        context.now = internals.components.contextFWS;\n                        prevToken = token;\n                        break;\n\n                        // This must be ATEXT\n                    default:\n                        // RFC 5322 allows any atext...\n                        // http://tools.ietf.org/html/rfc5322#section-3.2.3\n                        //    atext = ALPHA / DIGIT / ; Printable US-ASCII\n                        //            \"!\" / \"#\" /     ;  characters not including\n                        //            \"$\" / \"%\" /     ;  specials.  Used for atoms.\n                        //            \"&\" / \"'\" /\n                        //            \"*\" / \"+\" /\n                        //            \"-\" / \"/\" /\n                        //            \"=\" / \"?\" /\n                        //            \"^\" / \"_\" /\n                        //            \"`\" / \"{\" /\n                        //            \"|\" / \"}\" /\n                        //            \"~\"\n\n                        // But RFC 5321 only allows letter-digit-hyphen to comply with DNS rules\n                        //   (RFCs 1034 & 1123)\n                        // http://tools.ietf.org/html/rfc5321#section-4.1.2\n                        //   sub-domain     = Let-dig [Ldh-str]\n                        //\n                        //   Let-dig        = ALPHA / DIGIT\n                        //\n                        //   Ldh-str        = *( ALPHA / DIGIT / \"-\" ) Let-dig\n                        //\n                        if (assertEnd) {\n                            // We have encountered ATEXT where it is no longer valid\n                            switch (context.prev) {\n                                case internals.components.contextComment:\n                                case internals.components.contextFWS:\n                                    updateResult(internals.diagnoses.errATEXTAfterCFWS);\n                                    break;\n\n                                case internals.components.literal:\n                                    updateResult(internals.diagnoses.errATEXTAfterDomainLiteral);\n                                    break;\n\n                                    // $lab:coverage:off$\n                                default:\n                                    throw new Error('more atext found where none is allowed, but unrecognized prev context: ' + context.prev);\n                                    // $lab:coverage:on$\n                            }\n                        }\n\n                        charCode = token.codePointAt(0);\n                        // Assume this token isn't a hyphen unless we discover it is\n                        hyphenFlag = false;\n\n                        if (internals.specials(charCode) || internals.c0Controls(charCode) || internals.c1Controls(charCode)) {\n                            // Fatal error\n                            updateResult(internals.diagnoses.errExpectingATEXT);\n                        }\n                        else if (token === '-') {\n                            if (elementLength === 0) {\n                                // Hyphens cannot be at the beginning of a subdomain, fatal error\n                                updateResult(internals.diagnoses.errDomainHyphenStart);\n                            }\n\n                            hyphenFlag = true;\n                        }\n                        // Check if it's a neither a number nor a latin/unicode letter\n                        else if (charCode < 48 || (charCode > 122 && charCode < 192) || (charCode > 57 && charCode < 65) || (charCode > 90 && charCode < 97)) {\n                            // This is not an RFC 5321 subdomain, but still OK by RFC 5322\n                            updateResult(internals.diagnoses.rfc5322Domain);\n                        }\n\n                        parseData.domain += token;\n                        atomData.domains[elementCount] += token;\n                        elementLength += Buffer.byteLength(token, 'utf8');\n                }\n\n                break;\n\n                // Domain literal\n            case internals.components.literal:\n                // http://tools.ietf.org/html/rfc5322#section-3.4.1\n                //   domain-literal  =   [CFWS] \"[\" *([FWS] dtext) [FWS] \"]\" [CFWS]\n                //\n                //   dtext           =   %d33-90 /          ; Printable US-ASCII\n                //                       %d94-126 /         ;  characters not including\n                //                       obs-dtext          ;  \"[\", \"]\", or \"\\\"\n                //\n                //   obs-dtext       =   obs-NO-WS-CTL / quoted-pair\n                switch (token) {\n                    // End of domain literal\n                    case ']':\n                        if (maxResult < internals.categories.deprecated) {\n                            // Could be a valid RFC 5321 address literal, so let's check\n\n                            // http://tools.ietf.org/html/rfc5321#section-4.1.2\n                            //   address-literal  = \"[\" ( IPv4-address-literal /\n                            //                    IPv6-address-literal /\n                            //                    General-address-literal ) \"]\"\n                            //                    ; See Section 4.1.3\n                            //\n                            // http://tools.ietf.org/html/rfc5321#section-4.1.3\n                            //   IPv4-address-literal  = Snum 3(\".\"  Snum)\n                            //\n                            //   IPv6-address-literal  = \"IPv6:\" IPv6-addr\n                            //\n                            //   General-address-literal  = Standardized-tag \":\" 1*dcontent\n                            //\n                            //   Standardized-tag  = Ldh-str\n                            //                     ; Standardized-tag MUST be specified in a\n                            //                     ; Standards-Track RFC and registered with IANA\n                            //\n                            //   dcontent      = %d33-90 / ; Printable US-ASCII\n                            //                 %d94-126 ; excl. \"[\", \"\\\", \"]\"\n                            //\n                            //   Snum          = 1*3DIGIT\n                            //                 ; representing a decimal integer\n                            //                 ; value in the range 0 through 255\n                            //\n                            //   IPv6-addr     = IPv6-full / IPv6-comp / IPv6v4-full / IPv6v4-comp\n                            //\n                            //   IPv6-hex      = 1*4HEXDIG\n                            //\n                            //   IPv6-full     = IPv6-hex 7(\":\" IPv6-hex)\n                            //\n                            //   IPv6-comp     = [IPv6-hex *5(\":\" IPv6-hex)] \"::\"\n                            //                 [IPv6-hex *5(\":\" IPv6-hex)]\n                            //                 ; The \"::\" represents at least 2 16-bit groups of\n                            //                 ; zeros.  No more than 6 groups in addition to the\n                            //                 ; \"::\" may be present.\n                            //\n                            //   IPv6v4-full   = IPv6-hex 5(\":\" IPv6-hex) \":\" IPv4-address-literal\n                            //\n                            //   IPv6v4-comp   = [IPv6-hex *3(\":\" IPv6-hex)] \"::\"\n                            //                 [IPv6-hex *3(\":\" IPv6-hex) \":\"]\n                            //                 IPv4-address-literal\n                            //                 ; The \"::\" represents at least 2 16-bit groups of\n                            //                 ; zeros.  No more than 4 groups in addition to the\n                            //                 ; \"::\" and IPv4-address-literal may be present.\n\n                            let index = -1;\n                            let addressLiteral = parseData.literal;\n                            const matchesIP = internals.regex.ipV4.exec(addressLiteral);\n\n                            // Maybe extract IPv4 part from the end of the address-literal\n                            if (matchesIP) {\n                                index = matchesIP.index;\n                                if (index !== 0) {\n                                    // Convert IPv4 part to IPv6 format for futher testing\n                                    addressLiteral = addressLiteral.slice(0, index) + '0:0';\n                                }\n                            }\n\n                            if (index === 0) {\n                                // Nothing there except a valid IPv4 address, so...\n                                updateResult(internals.diagnoses.rfc5321AddressLiteral);\n                            }\n                            else if (addressLiteral.slice(0, 5).toLowerCase() !== 'ipv6:') {\n                                updateResult(internals.diagnoses.rfc5322DomainLiteral);\n                            }\n                            else {\n                                const match = addressLiteral.slice(5);\n                                let maxGroups = internals.maxIPv6Groups;\n                                const groups = match.split(':');\n                                index = match.indexOf('::');\n\n                                if (!~index) {\n                                    // Need exactly the right number of groups\n                                    if (groups.length !== maxGroups) {\n                                        updateResult(internals.diagnoses.rfc5322IPv6GroupCount);\n                                    }\n                                }\n                                else if (index !== match.lastIndexOf('::')) {\n                                    updateResult(internals.diagnoses.rfc5322IPv62x2xColon);\n                                }\n                                else {\n                                    if (index === 0 || index === match.length - 2) {\n                                        // RFC 4291 allows :: at the start or end of an address with 7 other groups in addition\n                                        ++maxGroups;\n                                    }\n\n                                    if (groups.length > maxGroups) {\n                                        updateResult(internals.diagnoses.rfc5322IPv6MaxGroups);\n                                    }\n                                    else if (groups.length === maxGroups) {\n                                        // Eliding a single \"::\"\n                                        updateResult(internals.diagnoses.deprecatedIPv6);\n                                    }\n                                }\n\n                                // IPv6 testing strategy\n                                if (match[0] === ':' && match[1] !== ':') {\n                                    updateResult(internals.diagnoses.rfc5322IPv6ColonStart);\n                                }\n                                else if (match[match.length - 1] === ':' && match[match.length - 2] !== ':') {\n                                    updateResult(internals.diagnoses.rfc5322IPv6ColonEnd);\n                                }\n                                else if (internals.checkIpV6(groups)) {\n                                    updateResult(internals.diagnoses.rfc5321AddressLiteral);\n                                }\n                                else {\n                                    updateResult(internals.diagnoses.rfc5322IPv6BadCharacter);\n                                }\n                            }\n                        }\n                        else {\n                            updateResult(internals.diagnoses.rfc5322DomainLiteral);\n                        }\n\n                        parseData.domain += token;\n                        atomData.domains[elementCount] += token;\n                        elementLength += Buffer.byteLength(token, 'utf8');\n                        context.prev = context.now;\n                        context.now = context.stack.pop();\n                        break;\n\n                    case '\\\\':\n                        updateResult(internals.diagnoses.rfc5322DomainLiteralOBSDText);\n                        context.stack.push(context.now);\n                        context.now = internals.components.contextQuotedPair;\n                        break;\n\n                        // Folding white space\n                    case '\\r':\n                        if (emailLength === ++i || email[i] !== '\\n') {\n                            updateResult(internals.diagnoses.errCRNoLF);\n                            break;\n                        }\n\n                        // Fallthrough\n\n                    case ' ':\n                    case '\\t':\n                        updateResult(internals.diagnoses.cfwsFWS);\n\n                        context.stack.push(context.now);\n                        context.now = internals.components.contextFWS;\n                        prevToken = token;\n                        break;\n\n                        // DTEXT\n                    default:\n                        // http://tools.ietf.org/html/rfc5322#section-3.4.1\n                        //   dtext         =   %d33-90 /  ; Printable US-ASCII\n                        //                     %d94-126 / ;  characters not including\n                        //                     obs-dtext  ;  \"[\", \"]\", or \"\\\"\n                        //\n                        //   obs-dtext     =   obs-NO-WS-CTL / quoted-pair\n                        //\n                        //   obs-NO-WS-CTL =   %d1-8 /    ; US-ASCII control\n                        //                     %d11 /     ;  characters that do not\n                        //                     %d12 /     ;  include the carriage\n                        //                     %d14-31 /  ;  return, line feed, and\n                        //                     %d127      ;  white space characters\n                        charCode = token.codePointAt(0);\n\n                        // '\\r', '\\n', ' ', and '\\t' have already been parsed above\n                        if ((charCode !== 127 && internals.c1Controls(charCode)) || charCode === 0 || token === '[') {\n                            // Fatal error\n                            updateResult(internals.diagnoses.errExpectingDTEXT);\n                            break;\n                        }\n                        else if (internals.c0Controls(charCode) || charCode === 127) {\n                            updateResult(internals.diagnoses.rfc5322DomainLiteralOBSDText);\n                        }\n\n                        parseData.literal += token;\n                        parseData.domain += token;\n                        atomData.domains[elementCount] += token;\n                        elementLength += Buffer.byteLength(token, 'utf8');\n                }\n\n                break;\n\n                // Quoted string\n            case internals.components.contextQuotedString:\n                // http://tools.ietf.org/html/rfc5322#section-3.2.4\n                //   quoted-string = [CFWS]\n                //                   DQUOTE *([FWS] qcontent) [FWS] DQUOTE\n                //                   [CFWS]\n                //\n                //   qcontent      = qtext / quoted-pair\n                switch (token) {\n                    // Quoted pair\n                    case '\\\\':\n                        context.stack.push(context.now);\n                        context.now = internals.components.contextQuotedPair;\n                        break;\n\n                        // Folding white space. Spaces are allowed as regular characters inside a quoted string - it's only FWS if we include '\\t' or '\\r\\n'\n                    case '\\r':\n                        if (emailLength === ++i || email[i] !== '\\n') {\n                            // Fatal error\n                            updateResult(internals.diagnoses.errCRNoLF);\n                            break;\n                        }\n\n                        // Fallthrough\n\n                    case '\\t':\n                        // http://tools.ietf.org/html/rfc5322#section-3.2.2\n                        //   Runs of FWS, comment, or CFWS that occur between lexical tokens in\n                        //   a structured header field are semantically interpreted as a single\n                        //   space character.\n\n                        // http://tools.ietf.org/html/rfc5322#section-3.2.4\n                        //   the CRLF in any FWS/CFWS that appears within the quoted-string [is]\n                        //   semantically \"invisible\" and therefore not part of the\n                        //   quoted-string\n\n                        parseData.local += ' ';\n                        atomData.locals[elementCount] += ' ';\n                        elementLength += Buffer.byteLength(token, 'utf8');\n\n                        updateResult(internals.diagnoses.cfwsFWS);\n                        context.stack.push(context.now);\n                        context.now = internals.components.contextFWS;\n                        prevToken = token;\n                        break;\n\n                        // End of quoted string\n                    case '\"':\n                        parseData.local += token;\n                        atomData.locals[elementCount] += token;\n                        elementLength += Buffer.byteLength(token, 'utf8');\n                        context.prev = context.now;\n                        context.now = context.stack.pop();\n                        break;\n\n                        // QTEXT\n                    default:\n                        // http://tools.ietf.org/html/rfc5322#section-3.2.4\n                        //   qtext          =   %d33 /             ; Printable US-ASCII\n                        //                      %d35-91 /          ;  characters not including\n                        //                      %d93-126 /         ;  \"\\\" or the quote character\n                        //                      obs-qtext\n                        //\n                        //   obs-qtext      =   obs-NO-WS-CTL\n                        //\n                        //   obs-NO-WS-CTL  =   %d1-8 /            ; US-ASCII control\n                        //                      %d11 /             ;  characters that do not\n                        //                      %d12 /             ;  include the carriage\n                        //                      %d14-31 /          ;  return, line feed, and\n                        //                      %d127              ;  white space characters\n                        charCode = token.codePointAt(0);\n\n                        if ((charCode !== 127 && internals.c1Controls(charCode)) || charCode === 0 || charCode === 10) {\n                            updateResult(internals.diagnoses.errExpectingQTEXT);\n                        }\n                        else if (internals.c0Controls(charCode) || charCode === 127) {\n                            updateResult(internals.diagnoses.deprecatedQTEXT);\n                        }\n\n                        parseData.local += token;\n                        atomData.locals[elementCount] += token;\n                        elementLength += Buffer.byteLength(token, 'utf8');\n                }\n\n                // http://tools.ietf.org/html/rfc5322#section-3.4.1\n                //   If the string can be represented as a dot-atom (that is, it contains\n                //   no characters other than atext characters or \".\" surrounded by atext\n                //   characters), then the dot-atom form SHOULD be used and the quoted-\n                //   string form SHOULD NOT be used.\n\n                break;\n                // Quoted pair\n            case internals.components.contextQuotedPair:\n                // http://tools.ietf.org/html/rfc5322#section-3.2.1\n                //   quoted-pair     =   (\"\\\" (VCHAR / WSP)) / obs-qp\n                //\n                //   VCHAR           =  %d33-126   ; visible (printing) characters\n                //   WSP             =  SP / HTAB  ; white space\n                //\n                //   obs-qp          =   \"\\\" (%d0 / obs-NO-WS-CTL / LF / CR)\n                //\n                //   obs-NO-WS-CTL   =   %d1-8 /   ; US-ASCII control\n                //                       %d11 /    ;  characters that do not\n                //                       %d12 /    ;  include the carriage\n                //                       %d14-31 / ;  return, line feed, and\n                //                       %d127     ;  white space characters\n                //\n                // i.e. obs-qp       =  \"\\\" (%d0-8, %d10-31 / %d127)\n                charCode = token.codePointAt(0);\n\n                if (charCode !== 127 &&  internals.c1Controls(charCode)) {\n                    // Fatal error\n                    updateResult(internals.diagnoses.errExpectingQPair);\n                }\n                else if ((charCode < 31 && charCode !== 9) || charCode === 127) {\n                    // ' ' and '\\t' are allowed\n                    updateResult(internals.diagnoses.deprecatedQP);\n                }\n\n                // At this point we know where this qpair occurred so we could check to see if the character actually needed to be quoted at all.\n                // http://tools.ietf.org/html/rfc5321#section-4.1.2\n                //   the sending system SHOULD transmit the form that uses the minimum quoting possible.\n\n                context.prev = context.now;\n                // End of qpair\n                context.now = context.stack.pop();\n                const escapeToken = '\\\\' + token;\n\n                switch (context.now) {\n                    case internals.components.contextComment:\n                        break;\n\n                    case internals.components.contextQuotedString:\n                        parseData.local += escapeToken;\n                        atomData.locals[elementCount] += escapeToken;\n\n                        // The maximum sizes specified by RFC 5321 are octet counts, so we must include the backslash\n                        elementLength += 2;\n                        break;\n\n                    case internals.components.literal:\n                        parseData.domain += escapeToken;\n                        atomData.domains[elementCount] += escapeToken;\n\n                        // The maximum sizes specified by RFC 5321 are octet counts, so we must include the backslash\n                        elementLength += 2;\n                        break;\n\n                        // $lab:coverage:off$\n                    default:\n                        throw new Error('quoted pair logic invoked in an invalid context: ' + context.now);\n                        // $lab:coverage:on$\n                }\n                break;\n\n                // Comment\n            case internals.components.contextComment:\n                // http://tools.ietf.org/html/rfc5322#section-3.2.2\n                //   comment  = \"(\" *([FWS] ccontent) [FWS] \")\"\n                //\n                //   ccontent = ctext / quoted-pair / comment\n                switch (token) {\n                    // Nested comment\n                    case '(':\n                        // Nested comments are ok\n                        context.stack.push(context.now);\n                        context.now = internals.components.contextComment;\n                        break;\n\n                        // End of comment\n                    case ')':\n                        context.prev = context.now;\n                        context.now = context.stack.pop();\n                        break;\n\n                        // Quoted pair\n                    case '\\\\':\n                        context.stack.push(context.now);\n                        context.now = internals.components.contextQuotedPair;\n                        break;\n\n                        // Folding white space\n                    case '\\r':\n                        if (emailLength === ++i || email[i] !== '\\n') {\n                            // Fatal error\n                            updateResult(internals.diagnoses.errCRNoLF);\n                            break;\n                        }\n\n                        // Fallthrough\n\n                    case ' ':\n                    case '\\t':\n                        updateResult(internals.diagnoses.cfwsFWS);\n\n                        context.stack.push(context.now);\n                        context.now = internals.components.contextFWS;\n                        prevToken = token;\n                        break;\n\n                        // CTEXT\n                    default:\n                        // http://tools.ietf.org/html/rfc5322#section-3.2.3\n                        //   ctext         = %d33-39 /  ; Printable US-ASCII\n                        //                   %d42-91 /  ;  characters not including\n                        //                   %d93-126 / ;  \"(\", \")\", or \"\\\"\n                        //                   obs-ctext\n                        //\n                        //   obs-ctext     = obs-NO-WS-CTL\n                        //\n                        //   obs-NO-WS-CTL = %d1-8 /    ; US-ASCII control\n                        //                   %d11 /     ;  characters that do not\n                        //                   %d12 /     ;  include the carriage\n                        //                   %d14-31 /  ;  return, line feed, and\n                        //                   %d127      ;  white space characters\n                        charCode = token.codePointAt(0);\n\n                        if (charCode === 0 || charCode === 10 || (charCode !== 127 && internals.c1Controls(charCode))) {\n                            // Fatal error\n                            updateResult(internals.diagnoses.errExpectingCTEXT);\n                            break;\n                        }\n                        else if (internals.c0Controls(charCode) || charCode === 127) {\n                            updateResult(internals.diagnoses.deprecatedCTEXT);\n                        }\n                }\n\n                break;\n\n                // Folding white space\n            case internals.components.contextFWS:\n                // http://tools.ietf.org/html/rfc5322#section-3.2.2\n                //   FWS     =   ([*WSP CRLF] 1*WSP) /  obs-FWS\n                //                                   ; Folding white space\n\n                // But note the erratum:\n                // http://www.rfc-editor.org/errata_search.php?rfc=5322&eid=1908:\n                //   In the obsolete syntax, any amount of folding white space MAY be\n                //   inserted where the obs-FWS rule is allowed.  This creates the\n                //   possibility of having two consecutive \"folds\" in a line, and\n                //   therefore the possibility that a line which makes up a folded header\n                //   field could be composed entirely of white space.\n                //\n                //   obs-FWS =   1*([CRLF] WSP)\n\n                if (prevToken === '\\r') {\n                    if (token === '\\r') {\n                        // Fatal error\n                        updateResult(internals.diagnoses.errFWSCRLFx2);\n                        break;\n                    }\n\n                    if (++crlfCount > 1) {\n                        // Multiple folds => obsolete FWS\n                        updateResult(internals.diagnoses.deprecatedFWS);\n                    }\n                    else {\n                        crlfCount = 1;\n                    }\n                }\n\n                switch (token) {\n                    case '\\r':\n                        if (emailLength === ++i || email[i] !== '\\n') {\n                            // Fatal error\n                            updateResult(internals.diagnoses.errCRNoLF);\n                        }\n\n                        break;\n\n                    case ' ':\n                    case '\\t':\n                        break;\n\n                    default:\n                        if (prevToken === '\\r') {\n                            // Fatal error\n                            updateResult(internals.diagnoses.errFWSCRLFEnd);\n                        }\n\n                        crlfCount = 0;\n\n                        // End of FWS\n                        context.prev = context.now;\n                        context.now = context.stack.pop();\n\n                        // Look at this token again in the parent context\n                        --i;\n                }\n\n                prevToken = token;\n                break;\n\n                // Unexpected context\n                // $lab:coverage:off$\n            default:\n                throw new Error('unknown context: ' + context.now);\n                // $lab:coverage:on$\n        } // Primary state machine\n\n        if (maxResult > internals.categories.rfc5322) {\n            // Fatal error, no point continuing\n            break;\n        }\n    } // Token loop\n\n    // Check for errors\n    if (maxResult < internals.categories.rfc5322) {\n        const punycodeLength = Punycode.encode(parseData.domain).length;\n        // Fatal errors\n        if (context.now === internals.components.contextQuotedString) {\n            updateResult(internals.diagnoses.errUnclosedQuotedString);\n        }\n        else if (context.now === internals.components.contextQuotedPair) {\n            updateResult(internals.diagnoses.errBackslashEnd);\n        }\n        else if (context.now === internals.components.contextComment) {\n            updateResult(internals.diagnoses.errUnclosedComment);\n        }\n        else if (context.now === internals.components.literal) {\n            updateResult(internals.diagnoses.errUnclosedDomainLiteral);\n        }\n        else if (token === '\\r') {\n            updateResult(internals.diagnoses.errFWSCRLFEnd);\n        }\n        else if (parseData.domain.length === 0) {\n            updateResult(internals.diagnoses.errNoDomain);\n        }\n        else if (elementLength === 0) {\n            updateResult(internals.diagnoses.errDotEnd);\n        }\n        else if (hyphenFlag) {\n            updateResult(internals.diagnoses.errDomainHyphenEnd);\n        }\n\n        // Other errors\n        else if (punycodeLength > 255) {\n            // http://tools.ietf.org/html/rfc5321#section-4.5.3.1.2\n            //   The maximum total length of a domain name or number is 255 octets.\n            updateResult(internals.diagnoses.rfc5322DomainTooLong);\n        }\n        else if (Buffer.byteLength(parseData.local, 'utf8') + punycodeLength + /* '@' */ 1 > 254) {\n            // http://tools.ietf.org/html/rfc5321#section-4.1.2\n            //   Forward-path   = Path\n            //\n            //   Path           = \"<\" [ A-d-l \":\" ] Mailbox \">\"\n            //\n            // http://tools.ietf.org/html/rfc5321#section-4.5.3.1.3\n            //   The maximum total length of a reverse-path or forward-path is 256 octets (including the punctuation and element separators).\n            //\n            // Thus, even without (obsolete) routing information, the Mailbox can only be 254 characters long. This is confirmed by this verified\n            // erratum to RFC 3696:\n            //\n            // http://www.rfc-editor.org/errata_search.php?rfc=3696&eid=1690\n            //   However, there is a restriction in RFC 2821 on the length of an address in MAIL and RCPT commands of 254 characters.  Since\n            //   addresses that do not fit in those fields are not normally useful, the upper limit on address lengths should normally be considered\n            //   to be 254.\n            updateResult(internals.diagnoses.rfc5322TooLong);\n        }\n        else if (elementLength > 63) {\n            // http://tools.ietf.org/html/rfc1035#section-2.3.4\n            // labels   63 octets or less\n            updateResult(internals.diagnoses.rfc5322LabelTooLong);\n        }\n        else if (options.minDomainAtoms && atomData.domains.length < options.minDomainAtoms) {\n            updateResult(internals.diagnoses.errDomainTooShort);\n        }\n        else if (options.tldWhitelist || options.tldBlacklist) {\n            const tldAtom = atomData.domains[elementCount];\n\n            if (!internals.validDomain(tldAtom, options)) {\n                updateResult(internals.diagnoses.errUnknownTLD);\n            }\n        }\n    } // Check for errors\n\n    // Finish\n    if (maxResult < internals.categories.dnsWarn) {\n        // Per RFC 5321, domain atoms are limited to letter-digit-hyphen, so we only need to check code <= 57 to check for a digit\n        const code = atomData.domains[elementCount].codePointAt(0);\n\n        if (code <= 57) {\n            updateResult(internals.diagnoses.rfc5321TLDNumeric);\n        }\n    }\n\n    if (maxResult < threshold) {\n        maxResult = internals.diagnoses.valid;\n    }\n\n    const finishResult = diagnose ? maxResult : maxResult < internals.defaultThreshold;\n\n    // $lab:coverage:off$\n    if (callback) {\n        callback(finishResult);\n    }\n    // $lab:coverage:on$\n\n    return finishResult;\n};\n\n\nexports.diagnoses = internals.validate.diagnoses = (function () {\n\n    const diag = {};\n    const keys = Object.keys(internals.diagnoses);\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        diag[key] = internals.diagnoses[key];\n    }\n\n    return diag;\n})();\n\n\nexports.normalize = internals.normalize;\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\nconst Ref = require('./ref');\n\n// Type modules are delay-loaded to prevent circular dependencies\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports.schema = function (Joi, config) {\n\n    if (config !== undefined && config !== null && typeof config === 'object') {\n\n        if (config.isJoi) {\n            return config;\n        }\n\n        if (Array.isArray(config)) {\n            return Joi.alternatives().try(config);\n        }\n\n        if (config instanceof RegExp) {\n            return Joi.string().regex(config);\n        }\n\n        if (config instanceof Date) {\n            return Joi.date().valid(config);\n        }\n\n        return Joi.object().keys(config);\n    }\n\n    if (typeof config === 'string') {\n        return Joi.string().valid(config);\n    }\n\n    if (typeof config === 'number') {\n        return Joi.number().valid(config);\n    }\n\n    if (typeof config === 'boolean') {\n        return Joi.boolean().valid(config);\n    }\n\n    if (Ref.isRef(config)) {\n        return Joi.valid(config);\n    }\n\n    Hoek.assert(config === null, 'Invalid schema content:', config);\n\n    return Joi.valid(null);\n};\n\n\nexports.ref = function (id) {\n\n    return Ref.isRef(id) ? id : Ref.create(id);\n};\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\nconst Language = require('./language');\n\n\n// Declare internals\n\nconst internals = {\n    annotations: Symbol('joi-annotations')\n};\n\ninternals.stringify = function (value, wrapArrays) {\n\n    const type = typeof value;\n\n    if (value === null) {\n        return 'null';\n    }\n\n    if (type === 'string') {\n        return value;\n    }\n\n    if (value instanceof exports.Err || type === 'function' || type === 'symbol') {\n        return value.toString();\n    }\n\n    if (type === 'object') {\n        if (Array.isArray(value)) {\n            let partial = '';\n\n            for (let i = 0; i < value.length; ++i) {\n                partial = partial + (partial.length ? ', ' : '') + internals.stringify(value[i], wrapArrays);\n            }\n\n            return wrapArrays ? '[' + partial + ']' : partial;\n        }\n\n        return value.toString();\n    }\n\n    return JSON.stringify(value);\n};\n\nexports.Err = class {\n\n    constructor(type, context, state, options, flags, message, template) {\n\n        this.isJoi = true;\n        this.type = type;\n        this.context = context || {};\n        this.context.key = state.path[state.path.length - 1];\n        this.context.label = state.key;\n        this.path = state.path;\n        this.options = options;\n        this.flags = flags;\n        this.message = message;\n        this.template = template;\n\n        const localized = this.options.language;\n\n        if (this.flags.label) {\n            this.context.label = this.flags.label;\n        }\n        else if (localized &&                   // language can be null for arrays exclusion check\n            (this.context.label === '' ||\n            this.context.label === null)) {\n            this.context.label = localized.root || Language.errors.root;\n        }\n    }\n\n    toString() {\n\n        if (this.message) {\n            return this.message;\n        }\n\n        let format;\n\n        if (this.template) {\n            format = this.template;\n        }\n\n        const localized = this.options.language;\n\n        format = format || Hoek.reach(localized, this.type) || Hoek.reach(Language.errors, this.type);\n\n        if (format === undefined) {\n            return `Error code \"${this.type}\" is not defined, your custom type is missing the correct language definition`;\n        }\n\n        let wrapArrays = Hoek.reach(localized, 'messages.wrapArrays');\n        if (typeof wrapArrays !== 'boolean') {\n            wrapArrays = Language.errors.messages.wrapArrays;\n        }\n\n        if (format === null) {\n            const childrenString = internals.stringify(this.context.reason, wrapArrays);\n            if (wrapArrays) {\n                return childrenString.slice(1, -1);\n            }\n            return childrenString;\n        }\n\n        const hasKey = /\\{\\{\\!?label\\}\\}/.test(format);\n        const skipKey = format.length > 2 && format[0] === '!' && format[1] === '!';\n\n        if (skipKey) {\n            format = format.slice(2);\n        }\n\n        if (!hasKey && !skipKey) {\n            const localizedKey = Hoek.reach(localized, 'key');\n            if (typeof localizedKey === 'string') {\n                format = localizedKey + format;\n            }\n            else {\n                format = Hoek.reach(Language.errors, 'key') + format;\n            }\n        }\n\n        return format.replace(/\\{\\{(\\!?)([^}]+)\\}\\}/g, ($0, isSecure, name) => {\n\n            const value = Hoek.reach(this.context, name);\n            const normalized = internals.stringify(value, wrapArrays);\n            return (isSecure && this.options.escapeHtml ? Hoek.escapeHtml(normalized) : normalized);\n        });\n    }\n\n};\n\n\nexports.create = function (type, context, state, options, flags, message, template) {\n\n    return new exports.Err(type, context, state, options, flags, message, template);\n};\n\n\nexports.process = function (errors, object) {\n\n    if (!errors || !errors.length) {\n        return null;\n    }\n\n    // Construct error\n\n    let message = '';\n    const details = [];\n\n    const processErrors = function (localErrors, parent) {\n\n        for (let i = 0; i < localErrors.length; ++i) {\n            const item = localErrors[i];\n\n            if (item instanceof Error) {\n                return item;\n            }\n\n            if (item.flags.error && typeof item.flags.error !== 'function') {\n                return item.flags.error;\n            }\n\n            let itemMessage;\n            if (parent === undefined) {\n                itemMessage = item.toString();\n                message = message + (message ? '. ' : '') + itemMessage;\n            }\n\n            // Do not push intermediate errors, we're only interested in leafs\n\n            if (item.context.reason && item.context.reason.length) {\n                const override = processErrors(item.context.reason, item.path);\n                if (override) {\n                    return override;\n                }\n            }\n            else {\n                details.push({\n                    message: itemMessage || item.toString(),\n                    path: item.path,\n                    type: item.type,\n                    context: item.context\n                });\n            }\n        }\n    };\n\n    const override = processErrors(errors);\n    if (override) {\n        return override;\n    }\n\n    const error = new Error(message);\n    error.isJoi = true;\n    error.name = 'ValidationError';\n    error.details = details;\n    error._object = object;\n    error.annotate = internals.annotate;\n    return error;\n};\n\n\n// Inspired by json-stringify-safe\ninternals.safeStringify = function (obj, spaces) {\n\n    return JSON.stringify(obj, internals.serializer(), spaces);\n};\n\ninternals.serializer = function () {\n\n    const keys = [];\n    const stack = [];\n\n    const cycleReplacer = (key, value) => {\n\n        if (stack[0] === value) {\n            return '[Circular ~]';\n        }\n\n        return '[Circular ~.' + keys.slice(0, stack.indexOf(value)).join('.') + ']';\n    };\n\n    return function (key, value) {\n\n        if (stack.length > 0) {\n            const thisPos = stack.indexOf(this);\n            if (~thisPos) {\n                stack.length = thisPos + 1;\n                keys.length = thisPos + 1;\n                keys[thisPos] = key;\n            }\n            else {\n                stack.push(this);\n                keys.push(key);\n            }\n\n            if (~stack.indexOf(value)) {\n                value = cycleReplacer.call(this, key, value);\n            }\n        }\n        else {\n            stack.push(value);\n        }\n\n        if (value) {\n            const annotations = value[internals.annotations];\n            if (annotations) {\n                if (Array.isArray(value)) {\n                    const annotated = [];\n\n                    for (let i = 0; i < value.length; ++i) {\n                        if (annotations.errors[i]) {\n                            annotated.push(`_$idx$_${annotations.errors[i].sort().join(', ')}_$end$_`);\n                        }\n                        annotated.push(value[i]);\n                    }\n\n                    value = annotated;\n                }\n                else {\n                    const errorKeys = Object.keys(annotations.errors);\n                    for (let i = 0; i < errorKeys.length; ++i) {\n                        const errorKey = errorKeys[i];\n                        value[`${errorKey}_$key$_${annotations.errors[errorKey].sort().join(', ')}_$end$_`] = value[errorKey];\n                        value[errorKey] = undefined;\n                    }\n\n                    const missingKeys = Object.keys(annotations.missing);\n                    for (let i = 0; i < missingKeys.length; ++i) {\n                        const missingKey = missingKeys[i];\n                        value[`_$miss$_${missingKey}|${annotations.missing[missingKey]}_$end$_`] = '__missing__';\n                    }\n                }\n\n                return value;\n            }\n        }\n\n        if (value === Infinity || value === -Infinity || Number.isNaN(value) ||\n            typeof value === 'function' || typeof value === 'symbol') {\n            return '[' + value.toString() + ']';\n        }\n\n        return value;\n    };\n};\n\n\ninternals.annotate = function (stripColorCodes) {\n\n    const redFgEscape = stripColorCodes ? '' : '\\u001b[31m';\n    const redBgEscape = stripColorCodes ? '' : '\\u001b[41m';\n    const endColor = stripColorCodes ? '' : '\\u001b[0m';\n\n    if (typeof this._object !== 'object') {\n        return this.details[0].message;\n    }\n\n    const obj = Hoek.clone(this._object || {});\n\n    for (let i = this.details.length - 1; i >= 0; --i) {        // Reverse order to process deepest child first\n        const pos = i + 1;\n        const error = this.details[i];\n        const path = error.path;\n        let ref = obj;\n        for (let j = 0; ; ++j) {\n            const seg = path[j];\n\n            if (ref.isImmutable) {\n                ref = ref.clone();                              // joi schemas are not cloned by hoek, we have to take this extra step\n            }\n\n            if (j + 1 < path.length &&\n                ref[seg] &&\n                typeof ref[seg] !== 'string') {\n\n                ref = ref[seg];\n            }\n            else {\n                const refAnnotations = ref[internals.annotations] = ref[internals.annotations] || { errors: {}, missing: {} };\n                const value = ref[seg];\n                const cacheKey = seg || error.context.label;\n\n                if (value !== undefined) {\n                    refAnnotations.errors[cacheKey] = refAnnotations.errors[cacheKey] || [];\n                    refAnnotations.errors[cacheKey].push(pos);\n                }\n                else {\n                    refAnnotations.missing[cacheKey] = pos;\n                }\n\n                break;\n            }\n        }\n    }\n\n    const replacers = {\n        key: /_\\$key\\$_([, \\d]+)_\\$end\\$_\\\"/g,\n        missing: /\\\"_\\$miss\\$_([^\\|]+)\\|(\\d+)_\\$end\\$_\\\"\\: \\\"__missing__\\\"/g,\n        arrayIndex: /\\s*\\\"_\\$idx\\$_([, \\d]+)_\\$end\\$_\\\",?\\n(.*)/g,\n        specials: /\"\\[(NaN|Symbol.*|-?Infinity|function.*|\\(.*)\\]\"/g\n    };\n\n    let message = internals.safeStringify(obj, 2)\n        .replace(replacers.key, ($0, $1) => `\" ${redFgEscape}[${$1}]${endColor}`)\n        .replace(replacers.missing, ($0, $1, $2) => `${redBgEscape}\"${$1}\"${endColor}${redFgEscape} [${$2}]: -- missing --${endColor}`)\n        .replace(replacers.arrayIndex, ($0, $1, $2) => `\\n${$2} ${redFgEscape}[${$1}]${endColor}`)\n        .replace(replacers.specials, ($0, $1) => $1);\n\n    message = `${message}\\n${redFgEscape}`;\n\n    for (let i = 0; i < this.details.length; ++i) {\n        const pos = i + 1;\n        message = `${message}\\n[${pos}] ${this.details[i].message}`;\n    }\n\n    message = message + endColor;\n\n    return message;\n};\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\nconst Any = require('./types/any');\nconst Cast = require('./cast');\nconst Errors = require('./errors');\nconst Lazy = require('./types/lazy');\nconst Ref = require('./ref');\nconst Settings = require('./types/any/settings');\n\n\n// Declare internals\n\nconst internals = {\n    alternatives: require('./types/alternatives'),\n    array: require('./types/array'),\n    boolean: require('./types/boolean'),\n    binary: require('./types/binary'),\n    date: require('./types/date'),\n    func: require('./types/func'),\n    number: require('./types/number'),\n    object: require('./types/object'),\n    string: require('./types/string'),\n    symbol: require('./types/symbol')\n};\n\ninternals.callWithDefaults = function (schema, args) {\n\n    Hoek.assert(this, 'Must be invoked on a Joi instance.');\n\n    if (this._defaults) {\n        schema = this._defaults(schema);\n    }\n\n    schema._currentJoi = this;\n\n    return schema._init(...args);\n};\n\ninternals.root = function () {\n\n    const any = new Any();\n\n    const root = any.clone();\n    Any.prototype._currentJoi = root;\n    root._currentJoi = root;\n\n    root.any = function (...args) {\n\n        Hoek.assert(args.length === 0, 'Joi.any() does not allow arguments.');\n\n        return internals.callWithDefaults.call(this, any, args);\n    };\n\n    root.alternatives = root.alt = function (...args) {\n\n        return internals.callWithDefaults.call(this, internals.alternatives, args);\n    };\n\n    root.array = function (...args) {\n\n        Hoek.assert(args.length === 0, 'Joi.array() does not allow arguments.');\n\n        return internals.callWithDefaults.call(this, internals.array, args);\n    };\n\n    root.boolean = root.bool = function (...args) {\n\n        Hoek.assert(args.length === 0, 'Joi.boolean() does not allow arguments.');\n\n        return internals.callWithDefaults.call(this, internals.boolean, args);\n    };\n\n    root.binary = function (...args) {\n\n        Hoek.assert(args.length === 0, 'Joi.binary() does not allow arguments.');\n\n        return internals.callWithDefaults.call(this, internals.binary, args);\n    };\n\n    root.date = function (...args) {\n\n        Hoek.assert(args.length === 0, 'Joi.date() does not allow arguments.');\n\n        return internals.callWithDefaults.call(this, internals.date, args);\n    };\n\n    root.func = function (...args) {\n\n        Hoek.assert(args.length === 0, 'Joi.func() does not allow arguments.');\n\n        return internals.callWithDefaults.call(this, internals.func, args);\n    };\n\n    root.number = function (...args) {\n\n        Hoek.assert(args.length === 0, 'Joi.number() does not allow arguments.');\n\n        return internals.callWithDefaults.call(this, internals.number, args);\n    };\n\n    root.object = function (...args) {\n\n        return internals.callWithDefaults.call(this, internals.object, args);\n    };\n\n    root.string = function (...args) {\n\n        Hoek.assert(args.length === 0, 'Joi.string() does not allow arguments.');\n\n        return internals.callWithDefaults.call(this, internals.string, args);\n    };\n\n    root.symbol = function (...args) {\n\n        Hoek.assert(args.length === 0, 'Joi.symbol() does not allow arguments.');\n\n        return internals.callWithDefaults.call(this, internals.symbol, args);\n    };\n\n    root.ref = function (...args) {\n\n        return Ref.create(...args);\n    };\n\n    root.isRef = function (ref) {\n\n        return Ref.isRef(ref);\n    };\n\n    root.validate = function (value, ...args /*, [schema], [options], callback */) {\n\n        const last = args[args.length - 1];\n        const callback = typeof last === 'function' ? last : null;\n\n        const count = args.length - (callback ? 1 : 0);\n        if (count === 0) {\n            return any.validate(value, callback);\n        }\n\n        const options = count === 2 ? args[1] : undefined;\n        const schema = root.compile(args[0]);\n\n        return schema._validateWithOptions(value, options, callback);\n    };\n\n    root.describe = function (...args) {\n\n        const schema = args.length ? root.compile(args[0]) : any;\n        return schema.describe();\n    };\n\n    root.compile = function (schema) {\n\n        try {\n            return Cast.schema(this, schema);\n        }\n        catch (err) {\n            if (err.hasOwnProperty('path')) {\n                err.message = err.message + '(' + err.path + ')';\n            }\n            throw err;\n        }\n    };\n\n    root.assert = function (value, schema, message) {\n\n        root.attempt(value, schema, message);\n    };\n\n    root.attempt = function (value, schema, message) {\n\n        const result = root.validate(value, schema);\n        const error = result.error;\n        if (error) {\n            if (!message) {\n                if (typeof error.annotate === 'function') {\n                    error.message = error.annotate();\n                }\n                throw error;\n            }\n\n            if (!(message instanceof Error)) {\n                if (typeof error.annotate === 'function') {\n                    error.message = `${message} ${error.annotate()}`;\n                }\n                throw error;\n            }\n\n            throw message;\n        }\n\n        return result.value;\n    };\n\n    root.reach = function (schema, path) {\n\n        Hoek.assert(schema && schema instanceof Any, 'you must provide a joi schema');\n        Hoek.assert(Array.isArray(path) || typeof path === 'string', 'path must be a string or an array of strings');\n\n        const reach = (sourceSchema, schemaPath) => {\n\n            if (!schemaPath.length) {\n                return sourceSchema;\n            }\n\n            const children = sourceSchema._inner.children;\n            if (!children) {\n                return;\n            }\n\n            const key = schemaPath.shift();\n            for (let i = 0; i < children.length; ++i) {\n                const child = children[i];\n                if (child.key === key) {\n                    return reach(child.schema, schemaPath);\n                }\n            }\n        };\n\n        const schemaPath = typeof path === 'string' ? (path ? path.split('.') : []) : path.slice();\n\n        return reach(schema, schemaPath);\n    };\n\n    root.lazy = function (fn) {\n\n        return Lazy.set(fn);\n    };\n\n    root.defaults = function (fn) {\n\n        Hoek.assert(typeof fn === 'function', 'Defaults must be a function');\n\n        let joi = Object.create(this.any());\n        joi = fn(joi);\n\n        Hoek.assert(joi && joi instanceof this.constructor, 'defaults() must return a schema');\n\n        Object.assign(joi, this, joi.clone()); // Re-add the types from `this` but also keep the settings from joi's potential new defaults\n\n        joi._defaults = (schema) => {\n\n            if (this._defaults) {\n                schema = this._defaults(schema);\n                Hoek.assert(schema instanceof this.constructor, 'defaults() must return a schema');\n            }\n\n            schema = fn(schema);\n            Hoek.assert(schema instanceof this.constructor, 'defaults() must return a schema');\n            return schema;\n        };\n\n        return joi;\n    };\n\n    root.extend = function (...args) {\n\n        const extensions = Hoek.flatten(args);\n        Hoek.assert(extensions.length > 0, 'You need to provide at least one extension');\n\n        this.assert(extensions, root.extensionsSchema);\n\n        const joi = Object.create(this.any());\n        Object.assign(joi, this);\n\n        for (let i = 0; i < extensions.length; ++i) {\n            let extension = extensions[i];\n\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, root.extensionSchema);\n\n            const base = (extension.base || this.any()).clone(); // Cloning because we're going to override language afterwards\n            const ctor = base.constructor;\n            const type = class extends ctor { // eslint-disable-line no-loop-func\n\n                constructor() {\n\n                    super();\n                    if (extension.base) {\n                        Object.assign(this, base);\n                    }\n\n                    this._type = extension.name;\n\n                    if (extension.language) {\n                        this._settings = Settings.concat(this._settings, {\n                            language: {\n                                [extension.name]: extension.language\n                            }\n                        });\n                    }\n                }\n\n            };\n\n            if (extension.coerce) {\n                type.prototype._coerce = function (value, state, options) {\n\n                    if (ctor.prototype._coerce) {\n                        const baseRet = ctor.prototype._coerce.call(this, value, state, options);\n\n                        if (baseRet.errors) {\n                            return baseRet;\n                        }\n\n                        value = baseRet.value;\n                    }\n\n                    const ret = extension.coerce.call(this, value, state, options);\n                    if (ret instanceof Errors.Err) {\n                        return { value, errors: ret };\n                    }\n\n                    return { value: ret };\n                };\n            }\n            if (extension.pre) {\n                type.prototype._base = function (value, state, options) {\n\n                    if (ctor.prototype._base) {\n                        const baseRet = ctor.prototype._base.call(this, value, state, options);\n\n                        if (baseRet.errors) {\n                            return baseRet;\n                        }\n\n                        value = baseRet.value;\n                    }\n\n                    const ret = extension.pre.call(this, value, state, options);\n                    if (ret instanceof Errors.Err) {\n                        return { value, errors: ret };\n                    }\n\n                    return { value: ret };\n                };\n            }\n\n            if (extension.rules) {\n                for (let j = 0; j < extension.rules.length; ++j) {\n                    const rule = extension.rules[j];\n                    const ruleArgs = rule.params ?\n                        (rule.params instanceof Any ? rule.params._inner.children.map((k) => k.key) : Object.keys(rule.params)) :\n                        [];\n                    const validateArgs = rule.params ? Cast.schema(this, rule.params) : null;\n\n                    type.prototype[rule.name] = function (...rArgs) { // eslint-disable-line no-loop-func\n\n                        if (rArgs.length > ruleArgs.length) {\n                            throw new Error('Unexpected number of arguments');\n                        }\n\n                        let hasRef = false;\n                        let arg = {};\n\n                        for (let k = 0; k < ruleArgs.length; ++k) {\n                            arg[ruleArgs[k]] = rArgs[k];\n                            if (!hasRef && Ref.isRef(rArgs[k])) {\n                                hasRef = true;\n                            }\n                        }\n\n                        if (validateArgs) {\n                            arg = joi.attempt(arg, validateArgs);\n                        }\n\n                        let schema;\n                        if (rule.validate) {\n                            const validate = function (value, state, options) {\n\n                                return rule.validate.call(this, arg, value, state, options);\n                            };\n\n                            schema = this._test(rule.name, arg, validate, {\n                                description: rule.description,\n                                hasRef\n                            });\n                        }\n                        else {\n                            schema = this.clone();\n                        }\n\n                        if (rule.setup) {\n                            const newSchema = rule.setup.call(schema, arg);\n                            if (newSchema !== undefined) {\n                                Hoek.assert(newSchema instanceof Any, `Setup of extension Joi.${this._type}().${rule.name}() must return undefined or a Joi object`);\n                                schema = newSchema;\n                            }\n                        }\n\n                        return schema;\n                    };\n                }\n            }\n\n            if (extension.describe) {\n                type.prototype.describe = function () {\n\n                    const description = ctor.prototype.describe.call(this);\n                    return extension.describe.call(this, description);\n                };\n            }\n\n            const instance = new type();\n            joi[extension.name] = function (...extArgs) {\n\n                return internals.callWithDefaults.call(this, instance, extArgs);\n            };\n        }\n\n        return joi;\n    };\n\n    root.extensionSchema = internals.object.keys({\n        base: internals.object.type(Any, 'Joi object'),\n        name: internals.string.required(),\n        coerce: internals.func.arity(3),\n        pre: internals.func.arity(3),\n        language: internals.object,\n        describe: internals.func.arity(1),\n        rules: internals.array.items(internals.object.keys({\n            name: internals.string.required(),\n            setup: internals.func.arity(1),\n            validate: internals.func.arity(4),\n            params: [\n                internals.object.pattern(/.*/, internals.object.type(Any, 'Joi object')),\n                internals.object.type(internals.object.constructor, 'Joi object')\n            ],\n            description: [internals.string, internals.func.arity(1)]\n        }).or('setup', 'validate'))\n    }).strict();\n\n    root.extensionsSchema = internals.array.items([internals.object, internals.func.arity(1)]).strict();\n\n    root.version = require('../package.json').version;\n\n    return root;\n};\n\n\nmodule.exports = internals.root();\n","'use strict';\n\n// Load modules\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports.errors = {\n    root: 'value',\n    key: '\"{{!label}}\" ',\n    messages: {\n        wrapArrays: true\n    },\n    any: {\n        unknown: 'is not allowed',\n        invalid: 'contains an invalid value',\n        empty: 'is not allowed to be empty',\n        required: 'is required',\n        allowOnly: 'must be one of {{valids}}',\n        default: 'threw an error when running default method'\n    },\n    alternatives: {\n        base: 'not matching any of the allowed alternatives',\n        child: null\n    },\n    array: {\n        base: 'must be an array',\n        includes: 'at position {{pos}} does not match any of the allowed types',\n        includesSingle: 'single value of \"{{!label}}\" does not match any of the allowed types',\n        includesOne: 'at position {{pos}} fails because {{reason}}',\n        includesOneSingle: 'single value of \"{{!label}}\" fails because {{reason}}',\n        includesRequiredUnknowns: 'does not contain {{unknownMisses}} required value(s)',\n        includesRequiredKnowns: 'does not contain {{knownMisses}}',\n        includesRequiredBoth: 'does not contain {{knownMisses}} and {{unknownMisses}} other required value(s)',\n        excludes: 'at position {{pos}} contains an excluded value',\n        excludesSingle: 'single value of \"{{!label}}\" contains an excluded value',\n        min: 'must contain at least {{limit}} items',\n        max: 'must contain less than or equal to {{limit}} items',\n        length: 'must contain {{limit}} items',\n        ordered: 'at position {{pos}} fails because {{reason}}',\n        orderedLength: 'at position {{pos}} fails because array must contain at most {{limit}} items',\n        ref: 'references \"{{ref}}\" which is not a positive integer',\n        sparse: 'must not be a sparse array',\n        unique: 'position {{pos}} contains a duplicate value'\n    },\n    boolean: {\n        base: 'must be a boolean'\n    },\n    binary: {\n        base: 'must be a buffer or a string',\n        min: 'must be at least {{limit}} bytes',\n        max: 'must be less than or equal to {{limit}} bytes',\n        length: 'must be {{limit}} bytes'\n    },\n    date: {\n        base: 'must be a number of milliseconds or valid date string',\n        format: 'must be a string with one of the following formats {{format}}',\n        strict: 'must be a valid date',\n        min: 'must be larger than or equal to \"{{limit}}\"',\n        max: 'must be less than or equal to \"{{limit}}\"',\n        less: 'must be less than \"{{limit}}\"',\n        greater: 'must be greater than \"{{limit}}\"',\n        isoDate: 'must be a valid ISO 8601 date',\n        timestamp: {\n            javascript: 'must be a valid timestamp or number of milliseconds',\n            unix: 'must be a valid timestamp or number of seconds'\n        },\n        ref: 'references \"{{ref}}\" which is not a date'\n    },\n    function: {\n        base: 'must be a Function',\n        arity: 'must have an arity of {{n}}',\n        minArity: 'must have an arity greater or equal to {{n}}',\n        maxArity: 'must have an arity lesser or equal to {{n}}',\n        ref: 'must be a Joi reference',\n        class: 'must be a class'\n    },\n    lazy: {\n        base: '!!schema error: lazy schema must be set',\n        schema: '!!schema error: lazy schema function must return a schema'\n    },\n    object: {\n        base: 'must be an object',\n        child: '!!child \"{{!child}}\" fails because {{reason}}',\n        min: 'must have at least {{limit}} children',\n        max: 'must have less than or equal to {{limit}} children',\n        length: 'must have {{limit}} children',\n        allowUnknown: '!!\"{{!child}}\" is not allowed',\n        with: '!!\"{{mainWithLabel}}\" missing required peer \"{{peerWithLabel}}\"',\n        without: '!!\"{{mainWithLabel}}\" conflict with forbidden peer \"{{peerWithLabel}}\"',\n        missing: 'must contain at least one of {{peersWithLabels}}',\n        xor: 'contains a conflict between exclusive peers {{peersWithLabels}}',\n        or: 'must contain at least one of {{peersWithLabels}}',\n        and: 'contains {{presentWithLabels}} without its required peers {{missingWithLabels}}',\n        nand: '!!\"{{mainWithLabel}}\" must not exist simultaneously with {{peersWithLabels}}',\n        assert: '!!\"{{ref}}\" validation failed because \"{{ref}}\" failed to {{message}}',\n        rename: {\n            multiple: 'cannot rename child \"{{from}}\" because multiple renames are disabled and another key was already renamed to \"{{to}}\"',\n            override: 'cannot rename child \"{{from}}\" because override is disabled and target \"{{to}}\" exists',\n            regex: {\n                multiple: 'cannot rename children {{from}} because multiple renames are disabled and another key was already renamed to \"{{to}}\"',\n                override: 'cannot rename children {{from}} because override is disabled and target \"{{to}}\" exists'\n            }\n        },\n        type: 'must be an instance of \"{{type}}\"',\n        schema: 'must be a Joi instance'\n    },\n    number: {\n        base: 'must be a number',\n        min: 'must be larger than or equal to {{limit}}',\n        max: 'must be less than or equal to {{limit}}',\n        less: 'must be less than {{limit}}',\n        greater: 'must be greater than {{limit}}',\n        float: 'must be a float or double',\n        integer: 'must be an integer',\n        negative: 'must be a negative number',\n        positive: 'must be a positive number',\n        precision: 'must have no more than {{limit}} decimal places',\n        ref: 'references \"{{ref}}\" which is not a number',\n        multiple: 'must be a multiple of {{multiple}}',\n        port: 'must be a valid port'\n    },\n    string: {\n        base: 'must be a string',\n        min: 'length must be at least {{limit}} characters long',\n        max: 'length must be less than or equal to {{limit}} characters long',\n        length: 'length must be {{limit}} characters long',\n        alphanum: 'must only contain alpha-numeric characters',\n        token: 'must only contain alpha-numeric and underscore characters',\n        regex: {\n            base: 'with value \"{{!value}}\" fails to match the required pattern: {{pattern}}',\n            name: 'with value \"{{!value}}\" fails to match the {{name}} pattern',\n            invert: {\n                base: 'with value \"{{!value}}\" matches the inverted pattern: {{pattern}}',\n                name: 'with value \"{{!value}}\" matches the inverted {{name}} pattern'\n            }\n        },\n        email: 'must be a valid email',\n        uri: 'must be a valid uri',\n        uriRelativeOnly: 'must be a valid relative uri',\n        uriCustomScheme: 'must be a valid uri with a scheme matching the {{scheme}} pattern',\n        isoDate: 'must be a valid ISO 8601 date',\n        guid: 'must be a valid GUID',\n        hex: 'must only contain hexadecimal characters',\n        hexAlign: 'hex decoded representation must be byte aligned',\n        base64: 'must be a valid base64 string',\n        dataUri: 'must be a valid dataUri string',\n        hostname: 'must be a valid hostname',\n        normalize: 'must be unicode normalized in the {{form}} form',\n        lowercase: 'must only contain lowercase characters',\n        uppercase: 'must only contain uppercase characters',\n        trim: 'must not have leading or trailing whitespace',\n        creditCard: 'must be a credit card',\n        ref: 'references \"{{ref}}\" which is not a number',\n        ip: 'must be a valid ip address with a {{cidr}} CIDR',\n        ipVersion: 'must be a valid ip address of one of the following versions {{version}} with a {{cidr}} CIDR'\n    },\n    symbol: {\n        base: 'must be a symbol',\n        map: 'must be one of {{map}}'\n    }\n};\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports.create = function (key, options) {\n\n    Hoek.assert(typeof key === 'string', 'Invalid reference key:', key);\n\n    const settings = Hoek.clone(options);         // options can be reused and modified\n\n    const ref = function (value, validationOptions) {\n\n        return Hoek.reach(ref.isContext ? validationOptions.context : value, ref.key, settings);\n    };\n\n    ref.isContext = (key[0] === ((settings && settings.contextPrefix) || '$'));\n    ref.key = (ref.isContext ? key.slice(1) : key);\n    ref.path = ref.key.split((settings && settings.separator) || '.');\n    ref.depth = ref.path.length;\n    ref.root = ref.path[0];\n    ref.isJoi = true;\n\n    ref.toString = function () {\n\n        return (ref.isContext ? 'context:' : 'ref:') + ref.key;\n    };\n\n    return ref;\n};\n\n\nexports.isRef = function (ref) {\n\n    return typeof ref === 'function' && ref.isJoi;\n};\n\n\nexports.push = function (array, ref) {\n\n    if (exports.isRef(ref) &&\n        !ref.isContext) {\n\n        array.push(ref.root);\n    }\n};\n","'use strict';\n\n// Load modules\n\nconst Joi = require('./index');\n\n\n// Declare internals\n\nconst internals = {};\n\nexports.options = Joi.object({\n    abortEarly: Joi.boolean(),\n    convert: Joi.boolean(),\n    allowUnknown: Joi.boolean(),\n    skipFunctions: Joi.boolean(),\n    stripUnknown: [Joi.boolean(), Joi.object({ arrays: Joi.boolean(), objects: Joi.boolean() }).or('arrays', 'objects')],\n    language: Joi.object(),\n    presence: Joi.string().only('required', 'optional', 'forbidden', 'ignore'),\n    raw: Joi.boolean(),\n    context: Joi.object(),\n    strip: Joi.boolean(),\n    noDefaults: Joi.boolean(),\n    escapeHtml: Joi.boolean()\n}).strict();\n","'use strict';\n\nconst Ref = require('./ref');\n\n\nconst internals = {};\n\n\ninternals.extendedCheckForValue = function (value, insensitive) {\n\n    const valueType = typeof value;\n\n    if (valueType === 'object') {\n        if (value instanceof Date) {\n            return (item) => {\n\n                return item instanceof Date && value.getTime() === item.getTime();\n            };\n        }\n        if (Buffer.isBuffer(value)) {\n            return (item) => {\n\n                return Buffer.isBuffer(item) && value.length === item.length && value.toString('binary') === item.toString('binary');\n            };\n        }\n    }\n    else if (insensitive && valueType === 'string') {\n        const lowercaseValue = value.toLowerCase();\n        return (item) => {\n\n            return typeof item === 'string' && lowercaseValue === item.toLowerCase();\n        };\n    }\n\n    return null;\n};\n\n\nmodule.exports = class InternalSet {\n\n    constructor(from) {\n\n        this._set = new Set(from);\n        this._hasRef = false;\n    }\n\n    add(value, refs) {\n\n        const isRef = Ref.isRef(value);\n        if (!isRef && this.has(value, null, null, false)) {\n\n            return this;\n        }\n\n        if (refs !== undefined) { // If it's a merge, we don't have any refs\n            Ref.push(refs, value);\n        }\n\n        this._set.add(value);\n\n        this._hasRef |= isRef;\n\n        return this;\n    }\n\n    merge(add, remove) {\n\n        for (const item of add._set) {\n            this.add(item);\n        }\n\n        for (const item of remove._set) {\n            this.remove(item);\n        }\n\n        return this;\n    }\n\n    remove(value) {\n\n        this._set.delete(value);\n        return this;\n    }\n\n    has(value, state, options, insensitive) {\n\n        if (!this._set.size) {\n            return false;\n        }\n\n        const hasValue = this._set.has(value);\n        if (hasValue) {\n            return hasValue;\n        }\n\n        const extendedCheck = internals.extendedCheckForValue(value, insensitive);\n        if (!extendedCheck) {\n            if (state && this._hasRef) {\n                for (let item of this._set) {\n                    if (Ref.isRef(item)) {\n                        item = item(state.reference || state.parent, options);\n                        if (value === item || (Array.isArray(item) && item.includes(value))) {\n                            return true;\n                        }\n                    }\n                }\n            }\n\n            return false;\n        }\n\n        return this._has(value, state, options, extendedCheck);\n    }\n\n    _has(value, state, options, check) {\n\n        const checkRef = !!(state && this._hasRef);\n\n        const isReallyEqual = function (item) {\n\n            if (value === item) {\n                return true;\n            }\n\n            return check(item);\n        };\n\n        for (let item of this._set) {\n            if (checkRef && Ref.isRef(item)) { // Only resolve references if there is a state, otherwise it's a merge\n                item = item(state.reference || state.parent, options);\n\n                if (Array.isArray(item)) {\n                    if (item.find(isReallyEqual)) {\n                        return true;\n                    }\n                    continue;\n                }\n            }\n\n            if (isReallyEqual(item)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    values(options) {\n\n        if (options && options.stripUndefined) {\n            const values = [];\n\n            for (const item of this._set) {\n                if (item !== undefined) {\n                    values.push(item);\n                }\n            }\n\n            return values;\n        }\n\n        return Array.from(this._set);\n    }\n\n    slice() {\n\n        const set = new InternalSet(this._set);\n        set._hasRef = this._hasRef;\n        return set;\n    }\n\n    concat(source) {\n\n        const set = new InternalSet([...this._set, ...source._set]);\n        set._hasRef = !!(this._hasRef | source._hasRef);\n        return set;\n    }\n};\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\nconst Any = require('../any');\nconst Cast = require('../../cast');\nconst Ref = require('../../ref');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.Alternatives = class extends Any {\n\n    constructor() {\n\n        super();\n        this._type = 'alternatives';\n        this._invalids.remove(null);\n        this._inner.matches = [];\n    }\n\n    _init(...args) {\n\n        return args.length ? this.try(...args) : this;\n    }\n\n    _base(value, state, options) {\n\n        let errors = [];\n        const il = this._inner.matches.length;\n        const baseType = this._baseType;\n\n        for (let i = 0; i < il; ++i) {\n            const item = this._inner.matches[i];\n            if (!item.schema) {\n                const schema = item.peek || item.is;\n                const input = item.is ? item.ref(state.reference || state.parent, options) : value;\n                const failed = schema._validate(input, null, options, state.parent).errors;\n\n                if (failed) {\n                    if (item.otherwise) {\n                        return item.otherwise._validate(value, state, options);\n                    }\n                }\n                else if (item.then) {\n                    return item.then._validate(value, state, options);\n                }\n\n                if (i === (il - 1) && baseType) {\n                    return baseType._validate(value, state, options);\n                }\n\n                continue;\n            }\n\n            const result = item.schema._validate(value, state, options);\n            if (!result.errors) {     // Found a valid match\n                return result;\n            }\n\n            errors = errors.concat(result.errors);\n        }\n\n        if (errors.length) {\n            return { errors: this.createError('alternatives.child', { reason: errors }, state, options) };\n        }\n\n        return { errors: this.createError('alternatives.base', null, state, options) };\n    }\n\n    try(...schemas) {\n\n        schemas = Hoek.flatten(schemas);\n        Hoek.assert(schemas.length, 'Cannot add other alternatives without at least one schema');\n\n        const obj = this.clone();\n\n        for (let i = 0; i < schemas.length; ++i) {\n            const cast = Cast.schema(this._currentJoi, schemas[i]);\n            if (cast._refs.length) {\n                obj._refs = obj._refs.concat(cast._refs);\n            }\n            obj._inner.matches.push({ schema: cast });\n        }\n\n        return obj;\n    }\n\n    when(condition, options) {\n\n        let schemaCondition = false;\n        Hoek.assert(Ref.isRef(condition) || typeof condition === 'string' || (schemaCondition = condition instanceof Any), 'Invalid condition:', condition);\n        Hoek.assert(options, 'Missing options');\n        Hoek.assert(typeof options === 'object', 'Invalid options');\n        if (schemaCondition) {\n            Hoek.assert(!options.hasOwnProperty('is'), '\"is\" can not be used with a schema condition');\n        }\n        else {\n            Hoek.assert(options.hasOwnProperty('is'), 'Missing \"is\" directive');\n        }\n        Hoek.assert(options.then !== undefined || options.otherwise !== undefined, 'options must have at least one of \"then\" or \"otherwise\"');\n\n        const obj = this.clone();\n        let is;\n        if (!schemaCondition) {\n            is = Cast.schema(this._currentJoi, options.is);\n\n            if (options.is === null || !(Ref.isRef(options.is) || options.is instanceof Any)) {\n\n                // Only apply required if this wasn't already a schema or a ref, we'll suppose people know what they're doing\n                is = is.required();\n            }\n        }\n\n        const item = {\n            ref: schemaCondition ? null : Cast.ref(condition),\n            peek: schemaCondition ? condition : null,\n            is,\n            then: options.then !== undefined ? Cast.schema(this._currentJoi, options.then) : undefined,\n            otherwise: options.otherwise !== undefined ? Cast.schema(this._currentJoi, options.otherwise) : undefined\n        };\n\n        if (obj._baseType) {\n\n            item.then = item.then && obj._baseType.concat(item.then);\n            item.otherwise = item.otherwise && obj._baseType.concat(item.otherwise);\n        }\n\n        if (!schemaCondition) {\n            Ref.push(obj._refs, item.ref);\n            obj._refs = obj._refs.concat(item.is._refs);\n        }\n\n        if (item.then && item.then._refs) {\n            obj._refs = obj._refs.concat(item.then._refs);\n        }\n\n        if (item.otherwise && item.otherwise._refs) {\n            obj._refs = obj._refs.concat(item.otherwise._refs);\n        }\n\n        obj._inner.matches.push(item);\n\n        return obj;\n    }\n\n    describe() {\n\n        const description = super.describe();\n        const alternatives = [];\n        for (let i = 0; i < this._inner.matches.length; ++i) {\n            const item = this._inner.matches[i];\n            if (item.schema) {\n\n                // try()\n\n                alternatives.push(item.schema.describe());\n            }\n            else {\n\n                // when()\n\n                const when = item.is ? {\n                    ref: item.ref.toString(),\n                    is: item.is.describe()\n                } : {\n                    peek: item.peek.describe()\n                };\n\n                if (item.then) {\n                    when.then = item.then.describe();\n                }\n\n                if (item.otherwise) {\n                    when.otherwise = item.otherwise.describe();\n                }\n\n                alternatives.push(when);\n            }\n        }\n\n        description.alternatives = alternatives;\n        return description;\n    }\n\n};\n\n\nmodule.exports = new internals.Alternatives();\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\nconst Settings = require('./settings');\nconst Ref = require('../../ref');\nconst Errors = require('../../errors');\nlet Alternatives = null;                // Delay-loaded to prevent circular dependencies\nlet Cast = null;\n\n\n// Declare internals\n\nconst internals = {\n    Set: require('../../set')\n};\n\n\ninternals.defaults = {\n    abortEarly: true,\n    convert: true,\n    allowUnknown: false,\n    skipFunctions: false,\n    stripUnknown: false,\n    language: {},\n    presence: 'optional',\n    strip: false,\n    noDefaults: false,\n    escapeHtml: false\n\n    // context: null\n};\n\n\nmodule.exports = internals.Any = class {\n\n    constructor() {\n\n        Cast = Cast || require('../../cast');\n\n        this.isJoi = true;\n        this._type = 'any';\n        this._settings = null;\n        this._valids = new internals.Set();\n        this._invalids = new internals.Set();\n        this._tests = [];\n        this._refs = [];\n        this._flags = {\n            /*\n             presence: 'optional',                   // optional, required, forbidden, ignore\n             allowOnly: false,\n             allowUnknown: undefined,\n             default: undefined,\n             forbidden: false,\n             encoding: undefined,\n             insensitive: false,\n             trim: false,\n             normalize: undefined,                   // NFC, NFD, NFKC, NFKD\n             case: undefined,                        // upper, lower\n             empty: undefined,\n             func: false,\n             raw: false\n             */\n        };\n\n        this._description = null;\n        this._unit = null;\n        this._notes = [];\n        this._tags = [];\n        this._examples = [];\n        this._meta = [];\n\n        this._inner = {};                           // Hash of arrays of immutable objects\n    }\n\n    _init() {\n\n        return this;\n    }\n\n    get schemaType() {\n\n        return this._type;\n    }\n\n    createError(type, context, state, options, flags = this._flags) {\n\n        return Errors.create(type, context, state, options, flags);\n    }\n\n    createOverrideError(type, context, state, options, message, template) {\n\n        return Errors.create(type, context, state, options, this._flags, message, template);\n    }\n\n    checkOptions(options) {\n\n        const Schemas = require('../../schemas');\n        const result = Schemas.options.validate(options);\n        if (result.error) {\n            throw new Error(result.error.details[0].message);\n        }\n    }\n\n    clone() {\n\n        const obj = Object.create(Object.getPrototypeOf(this));\n\n        obj.isJoi = true;\n        obj._currentJoi = this._currentJoi;\n        obj._type = this._type;\n        obj._settings = this._settings;\n        obj._baseType = this._baseType;\n        obj._valids = this._valids.slice();\n        obj._invalids = this._invalids.slice();\n        obj._tests = this._tests.slice();\n        obj._refs = this._refs.slice();\n        obj._flags = Hoek.clone(this._flags);\n\n        obj._description = this._description;\n        obj._unit = this._unit;\n        obj._notes = this._notes.slice();\n        obj._tags = this._tags.slice();\n        obj._examples = this._examples.slice();\n        obj._meta = this._meta.slice();\n\n        obj._inner = {};\n        const inners = Object.keys(this._inner);\n        for (let i = 0; i < inners.length; ++i) {\n            const key = inners[i];\n            obj._inner[key] = this._inner[key] ? this._inner[key].slice() : null;\n        }\n\n        return obj;\n    }\n\n    concat(schema) {\n\n        Hoek.assert(schema instanceof internals.Any, 'Invalid schema object');\n        Hoek.assert(this._type === 'any' || schema._type === 'any' || schema._type === this._type, 'Cannot merge type', this._type, 'with another type:', schema._type);\n\n        let obj = this.clone();\n\n        if (this._type === 'any' && schema._type !== 'any') {\n\n            // Reset values as if we were \"this\"\n            const tmpObj = schema.clone();\n            const keysToRestore = ['_settings', '_valids', '_invalids', '_tests', '_refs', '_flags', '_description', '_unit',\n                '_notes', '_tags', '_examples', '_meta', '_inner'];\n\n            for (let i = 0; i < keysToRestore.length; ++i) {\n                tmpObj[keysToRestore[i]] = obj[keysToRestore[i]];\n            }\n\n            obj = tmpObj;\n        }\n\n        obj._settings = obj._settings ? Settings.concat(obj._settings, schema._settings) : schema._settings;\n        obj._valids.merge(schema._valids, schema._invalids);\n        obj._invalids.merge(schema._invalids, schema._valids);\n        obj._tests = obj._tests.concat(schema._tests);\n        obj._refs = obj._refs.concat(schema._refs);\n        Hoek.merge(obj._flags, schema._flags);\n\n        obj._description = schema._description || obj._description;\n        obj._unit = schema._unit || obj._unit;\n        obj._notes = obj._notes.concat(schema._notes);\n        obj._tags = obj._tags.concat(schema._tags);\n        obj._examples = obj._examples.concat(schema._examples);\n        obj._meta = obj._meta.concat(schema._meta);\n\n        const inners = Object.keys(schema._inner);\n        const isObject = obj._type === 'object';\n        for (let i = 0; i < inners.length; ++i) {\n            const key = inners[i];\n            const source = schema._inner[key];\n            if (source) {\n                const target = obj._inner[key];\n                if (target) {\n                    if (isObject && key === 'children') {\n                        const keys = {};\n\n                        for (let j = 0; j < target.length; ++j) {\n                            keys[target[j].key] = j;\n                        }\n\n                        for (let j = 0; j < source.length; ++j) {\n                            const sourceKey = source[j].key;\n                            if (keys[sourceKey] >= 0) {\n                                target[keys[sourceKey]] = {\n                                    key: sourceKey,\n                                    schema: target[keys[sourceKey]].schema.concat(source[j].schema)\n                                };\n                            }\n                            else {\n                                target.push(source[j]);\n                            }\n                        }\n                    }\n                    else {\n                        obj._inner[key] = obj._inner[key].concat(source);\n                    }\n                }\n                else {\n                    obj._inner[key] = source.slice();\n                }\n            }\n        }\n\n        return obj;\n    }\n\n    _test(name, arg, func, options) {\n\n        const obj = this.clone();\n        obj._tests.push({ func, name, arg, options });\n        return obj;\n    }\n\n    options(options) {\n\n        Hoek.assert(!options.context, 'Cannot override context');\n        this.checkOptions(options);\n\n        const obj = this.clone();\n        obj._settings = Settings.concat(obj._settings, options);\n        return obj;\n    }\n\n    strict(isStrict) {\n\n        const obj = this.clone();\n\n        const convert = isStrict === undefined ? false : !isStrict;\n        obj._settings = Settings.concat(obj._settings, { convert });\n        return obj;\n    }\n\n    raw(isRaw) {\n\n        const value = isRaw === undefined ? true : isRaw;\n\n        if (this._flags.raw === value) {\n            return this;\n        }\n\n        const obj = this.clone();\n        obj._flags.raw = value;\n        return obj;\n    }\n\n    error(err) {\n\n        Hoek.assert(err && (err instanceof Error || typeof err === 'function'), 'Must provide a valid Error object or a function');\n\n        const obj = this.clone();\n        obj._flags.error = err;\n        return obj;\n    }\n\n    allow(...values) {\n\n        const obj = this.clone();\n        values = Hoek.flatten(values);\n        for (let i = 0; i < values.length; ++i) {\n            const value = values[i];\n\n            Hoek.assert(value !== undefined, 'Cannot call allow/valid/invalid with undefined');\n            obj._invalids.remove(value);\n            obj._valids.add(value, obj._refs);\n        }\n        return obj;\n    }\n\n    valid(...values) {\n\n        const obj = this.allow(...values);\n        obj._flags.allowOnly = true;\n        return obj;\n    }\n\n    invalid(...values) {\n\n        const obj = this.clone();\n        values = Hoek.flatten(values);\n        for (let i = 0; i < values.length; ++i) {\n            const value = values[i];\n\n            Hoek.assert(value !== undefined, 'Cannot call allow/valid/invalid with undefined');\n            obj._valids.remove(value);\n            obj._invalids.add(value, obj._refs);\n        }\n\n        return obj;\n    }\n\n    required() {\n\n        if (this._flags.presence === 'required') {\n            return this;\n        }\n\n        const obj = this.clone();\n        obj._flags.presence = 'required';\n        return obj;\n    }\n\n    optional() {\n\n        if (this._flags.presence === 'optional') {\n            return this;\n        }\n\n        const obj = this.clone();\n        obj._flags.presence = 'optional';\n        return obj;\n    }\n\n\n    forbidden() {\n\n        if (this._flags.presence === 'forbidden') {\n            return this;\n        }\n\n        const obj = this.clone();\n        obj._flags.presence = 'forbidden';\n        return obj;\n    }\n\n\n    strip() {\n\n        if (this._flags.strip) {\n            return this;\n        }\n\n        const obj = this.clone();\n        obj._flags.strip = true;\n        return obj;\n    }\n\n    applyFunctionToChildren(children, fn, args, root) {\n\n        children = [].concat(children);\n\n        if (children.length !== 1 || children[0] !== '') {\n            root = root ? (root + '.') : '';\n\n            const extraChildren = (children[0] === '' ? children.slice(1) : children).map((child) => {\n\n                return root + child;\n            });\n\n            throw new Error('unknown key(s) ' + extraChildren.join(', '));\n        }\n\n        return this[fn].apply(this, args);\n    }\n\n    default(value, description) {\n\n        if (typeof value === 'function' &&\n            !Ref.isRef(value)) {\n\n            if (!value.description &&\n                description) {\n\n                value.description = description;\n            }\n\n            if (!this._flags.func) {\n                Hoek.assert(typeof value.description === 'string' && value.description.length > 0, 'description must be provided when default value is a function');\n            }\n        }\n\n        const obj = this.clone();\n        obj._flags.default = value;\n        Ref.push(obj._refs, value);\n        return obj;\n    }\n\n    empty(schema) {\n\n        const obj = this.clone();\n        if (schema === undefined) {\n            delete obj._flags.empty;\n        }\n        else {\n            obj._flags.empty = Cast.schema(this._currentJoi, schema);\n        }\n        return obj;\n    }\n\n    when(condition, options) {\n\n        Hoek.assert(options && typeof options === 'object', 'Invalid options');\n        Hoek.assert(options.then !== undefined || options.otherwise !== undefined, 'options must have at least one of \"then\" or \"otherwise\"');\n\n        const then = options.hasOwnProperty('then') ? this.concat(Cast.schema(this._currentJoi, options.then)) : undefined;\n        const otherwise = options.hasOwnProperty('otherwise') ? this.concat(Cast.schema(this._currentJoi, options.otherwise)) : undefined;\n\n        Alternatives = Alternatives || require('../alternatives');\n\n        const alternativeOptions = { then, otherwise };\n        if (Object.prototype.hasOwnProperty.call(options, 'is')) {\n            alternativeOptions.is = options.is;\n        }\n        const obj = Alternatives.when(condition, alternativeOptions);\n        obj._flags.presence = 'ignore';\n        obj._baseType = this;\n\n        return obj;\n    }\n\n    description(desc) {\n\n        Hoek.assert(desc && typeof desc === 'string', 'Description must be a non-empty string');\n\n        const obj = this.clone();\n        obj._description = desc;\n        return obj;\n    }\n\n    notes(notes) {\n\n        Hoek.assert(notes && (typeof notes === 'string' || Array.isArray(notes)), 'Notes must be a non-empty string or array');\n\n        const obj = this.clone();\n        obj._notes = obj._notes.concat(notes);\n        return obj;\n    }\n\n    tags(tags) {\n\n        Hoek.assert(tags && (typeof tags === 'string' || Array.isArray(tags)), 'Tags must be a non-empty string or array');\n\n        const obj = this.clone();\n        obj._tags = obj._tags.concat(tags);\n        return obj;\n    }\n\n    meta(meta) {\n\n        Hoek.assert(meta !== undefined, 'Meta cannot be undefined');\n\n        const obj = this.clone();\n        obj._meta = obj._meta.concat(meta);\n        return obj;\n    }\n\n    example(...args) {\n\n        Hoek.assert(args.length === 1, 'Missing example');\n        const value = args[0];\n\n        const obj = this.clone();\n        obj._examples.push(value);\n        return obj;\n    }\n\n    unit(name) {\n\n        Hoek.assert(name && typeof name === 'string', 'Unit name must be a non-empty string');\n\n        const obj = this.clone();\n        obj._unit = name;\n        return obj;\n    }\n\n    _prepareEmptyValue(value) {\n\n        if (typeof value === 'string' && this._flags.trim) {\n            return value.trim();\n        }\n\n        return value;\n    }\n\n    _validate(value, state, options, reference) {\n\n        const originalValue = value;\n\n        // Setup state and settings\n\n        state = state || { key: '', path: [], parent: null, reference };\n\n        if (this._settings) {\n            options = Settings.concat(options, this._settings);\n        }\n\n        let errors = [];\n        const finish = () => {\n\n            let finalValue;\n\n            if (value !== undefined) {\n                finalValue = this._flags.raw ? originalValue : value;\n            }\n            else if (options.noDefaults) {\n                finalValue = value;\n            }\n            else if (Ref.isRef(this._flags.default)) {\n                finalValue = this._flags.default(state.parent, options);\n            }\n            else if (typeof this._flags.default === 'function' &&\n                !(this._flags.func && !this._flags.default.description)) {\n\n                let args;\n\n                if (state.parent !== null &&\n                    this._flags.default.length > 0) {\n\n                    args = [Hoek.clone(state.parent), options];\n                }\n\n                const defaultValue = internals._try(this._flags.default, args);\n                finalValue = defaultValue.value;\n                if (defaultValue.error) {\n                    errors.push(this.createError('any.default', { error: defaultValue.error }, state, options));\n                }\n            }\n            else {\n                finalValue = Hoek.clone(this._flags.default);\n            }\n\n            if (errors.length && typeof this._flags.error === 'function') {\n                const change = this._flags.error.call(this, errors);\n\n                if (typeof change === 'string') {\n                    errors = [this.createOverrideError('override', { reason: errors }, state, options, change)];\n                }\n                else {\n                    errors = [].concat(change)\n                        .map((err) => {\n\n                            return err instanceof Error ?\n                                err :\n                                this.createOverrideError(err.type || 'override', err.context, state, options, err.message, err.template);\n                        });\n                }\n            }\n\n            return {\n                value: this._flags.strip ? undefined : finalValue,\n                finalValue,\n                errors: errors.length ? errors : null\n            };\n        };\n\n        if (this._coerce) {\n            const coerced = this._coerce.call(this, value, state, options);\n            if (coerced.errors) {\n                value = coerced.value;\n                errors = errors.concat(coerced.errors);\n                return finish();                            // Coerced error always aborts early\n            }\n\n            value = coerced.value;\n        }\n\n        if (this._flags.empty && !this._flags.empty._validate(this._prepareEmptyValue(value), null, internals.defaults).errors) {\n            value = undefined;\n        }\n\n        // Check presence requirements\n\n        const presence = this._flags.presence || options.presence;\n        if (presence === 'optional') {\n            if (value === undefined) {\n                const isDeepDefault = this._flags.hasOwnProperty('default') && this._flags.default === undefined;\n                if (isDeepDefault && this._type === 'object') {\n                    value = {};\n                }\n                else {\n                    return finish();\n                }\n            }\n        }\n        else if (presence === 'required' &&\n            value === undefined) {\n\n            errors.push(this.createError('any.required', null, state, options));\n            return finish();\n        }\n        else if (presence === 'forbidden') {\n            if (value === undefined) {\n                return finish();\n            }\n\n            errors.push(this.createError('any.unknown', null, state, options));\n            return finish();\n        }\n\n        // Check allowed and denied values using the original value\n\n        if (this._valids.has(value, state, options, this._flags.insensitive)) {\n            return finish();\n        }\n\n        if (this._invalids.has(value, state, options, this._flags.insensitive)) {\n            errors.push(this.createError(value === '' ? 'any.empty' : 'any.invalid', { value, invalids: this._invalids.values({ stripUndefined: true }) }, state, options));\n            if (options.abortEarly ||\n                value === undefined) {          // No reason to keep validating missing value\n\n                return finish();\n            }\n        }\n\n        // Convert value and validate type\n\n        if (this._base) {\n            const base = this._base.call(this, value, state, options);\n            if (base.errors) {\n                value = base.value;\n                errors = errors.concat(base.errors);\n                return finish();                            // Base error always aborts early\n            }\n\n            if (base.value !== value) {\n                value = base.value;\n\n                // Check allowed and denied values using the converted value\n\n                if (this._valids.has(value, state, options, this._flags.insensitive)) {\n                    return finish();\n                }\n\n                if (this._invalids.has(value, state, options, this._flags.insensitive)) {\n                    errors.push(this.createError(value === '' ? 'any.empty' : 'any.invalid', { value, invalids: this._invalids.values({ stripUndefined: true }) }, state, options));\n                    if (options.abortEarly) {\n                        return finish();\n                    }\n                }\n            }\n        }\n\n        // Required values did not match\n\n        if (this._flags.allowOnly) {\n            errors.push(this.createError('any.allowOnly', { value, valids: this._valids.values({ stripUndefined: true }) }, state, options));\n            if (options.abortEarly) {\n                return finish();\n            }\n        }\n\n        // Validate tests\n\n        for (let i = 0; i < this._tests.length; ++i) {\n            const test = this._tests[i];\n            const ret = test.func.call(this, value, state, options);\n            if (ret instanceof Errors.Err) {\n                errors.push(ret);\n                if (options.abortEarly) {\n                    return finish();\n                }\n            }\n            else {\n                value = ret;\n            }\n        }\n\n        return finish();\n    }\n\n    _validateWithOptions(value, options, callback) {\n\n        if (options) {\n            this.checkOptions(options);\n        }\n\n        const settings = Settings.concat(internals.defaults, options);\n        const result = this._validate(value, null, settings);\n        const errors = Errors.process(result.errors, value);\n\n        if (callback) {\n            return callback(errors, result.value);\n        }\n\n        return {\n            error: errors,\n            value: result.value,\n            then(resolve, reject) {\n\n                if (errors) {\n                    return Promise.reject(errors).catch(reject);\n                }\n\n                return Promise.resolve(result.value).then(resolve);\n            },\n            catch(reject) {\n\n                if (errors) {\n                    return Promise.reject(errors).catch(reject);\n                }\n\n                return Promise.resolve(result.value);\n            }\n        };\n    }\n\n    validate(value, options, callback) {\n\n        if (typeof options === 'function') {\n            return this._validateWithOptions(value, null, options);\n        }\n\n        return this._validateWithOptions(value, options, callback);\n    }\n\n    describe() {\n\n        const description = {\n            type: this._type\n        };\n\n        const flags = Object.keys(this._flags);\n        if (flags.length) {\n            if (['empty', 'default', 'lazy', 'label'].some((flag) => this._flags.hasOwnProperty(flag))) {\n                description.flags = {};\n                for (let i = 0; i < flags.length; ++i) {\n                    const flag = flags[i];\n                    if (flag === 'empty') {\n                        description.flags[flag] = this._flags[flag].describe();\n                    }\n                    else if (flag === 'default') {\n                        if (Ref.isRef(this._flags[flag])) {\n                            description.flags[flag] = this._flags[flag].toString();\n                        }\n                        else if (typeof this._flags[flag] === 'function') {\n                            description.flags[flag] = {\n                                description: this._flags[flag].description,\n                                function   : this._flags[flag]\n                            };\n                        }\n                        else {\n                            description.flags[flag] = this._flags[flag];\n                        }\n                    }\n                    else if (flag === 'lazy' || flag === 'label') {\n                        // We don't want it in the description\n                    }\n                    else {\n                        description.flags[flag] = this._flags[flag];\n                    }\n                }\n            }\n            else {\n                description.flags = this._flags;\n            }\n        }\n\n        if (this._settings) {\n            description.options = Hoek.clone(this._settings);\n        }\n\n        if (this._baseType) {\n            description.base = this._baseType.describe();\n        }\n\n        if (this._description) {\n            description.description = this._description;\n        }\n\n        if (this._notes.length) {\n            description.notes = this._notes;\n        }\n\n        if (this._tags.length) {\n            description.tags = this._tags;\n        }\n\n        if (this._meta.length) {\n            description.meta = this._meta;\n        }\n\n        if (this._examples.length) {\n            description.examples = this._examples;\n        }\n\n        if (this._unit) {\n            description.unit = this._unit;\n        }\n\n        const valids = this._valids.values();\n        if (valids.length) {\n            description.valids = valids.map((v) => {\n\n                return Ref.isRef(v) ? v.toString() : v;\n            });\n        }\n\n        const invalids = this._invalids.values();\n        if (invalids.length) {\n            description.invalids = invalids.map((v) => {\n\n                return Ref.isRef(v) ? v.toString() : v;\n            });\n        }\n\n        description.rules = [];\n\n        for (let i = 0; i < this._tests.length; ++i) {\n            const validator = this._tests[i];\n            const item = { name: validator.name };\n\n            if (validator.arg !== void 0) {\n                item.arg = Ref.isRef(validator.arg) ? validator.arg.toString() : validator.arg;\n            }\n\n            const options = validator.options;\n            if (options) {\n                if (options.hasRef) {\n                    item.arg = {};\n                    const keys = Object.keys(validator.arg);\n                    for (let j = 0; j < keys.length; ++j) {\n                        const key = keys[j];\n                        const value = validator.arg[key];\n                        item.arg[key] = Ref.isRef(value) ? value.toString() : value;\n                    }\n                }\n\n                if (typeof options.description === 'string') {\n                    item.description = options.description;\n                }\n                else if (typeof options.description === 'function') {\n                    item.description = options.description(item.arg);\n                }\n            }\n\n            description.rules.push(item);\n        }\n\n        if (!description.rules.length) {\n            delete description.rules;\n        }\n\n        const label = this._getLabel();\n        if (label) {\n            description.label = label;\n        }\n\n        return description;\n    }\n\n    label(name) {\n\n        Hoek.assert(name && typeof name === 'string', 'Label name must be a non-empty string');\n\n        const obj = this.clone();\n        obj._flags.label = name;\n        return obj;\n    }\n\n    _getLabel(def) {\n\n        return this._flags.label || def;\n    }\n\n};\n\n\ninternals.Any.prototype.isImmutable = true;     // Prevents Hoek from deep cloning schema objects\n\n// Aliases\n\ninternals.Any.prototype.only = internals.Any.prototype.equal = internals.Any.prototype.valid;\ninternals.Any.prototype.disallow = internals.Any.prototype.not = internals.Any.prototype.invalid;\ninternals.Any.prototype.exist = internals.Any.prototype.required;\n\n\ninternals._try = function (fn, args) {\n\n    let err;\n    let result;\n\n    try {\n        result = fn.apply(null, args);\n    }\n    catch (e) {\n        err = e;\n    }\n\n    return {\n        value: result,\n        error: err\n    };\n};\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports.concat = function (target, source) {\n\n    if (!source) {\n        return target;\n    }\n\n    const obj = Object.assign({}, target);\n\n    const sKeys = Object.keys(source);\n    for (let i = 0; i < sKeys.length; ++i) {\n        const key = sKeys[i];\n        if (key !== 'language' ||\n            !obj.hasOwnProperty(key)) {\n\n            obj[key] = source[key];\n        }\n        else {\n            obj[key] = Hoek.applyToDefaults(obj[key], source[key]);\n        }\n    }\n\n    return obj;\n};\n","'use strict';\n\n// Load modules\n\nconst Any = require('../any');\nconst Cast = require('../../cast');\nconst Ref = require('../../ref');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.fastSplice = function (arr, i) {\n\n    let pos = i;\n    while (pos < arr.length) {\n        arr[pos++] = arr[pos];\n    }\n\n    --arr.length;\n};\n\n\ninternals.Array = class extends Any {\n\n    constructor() {\n\n        super();\n        this._type = 'array';\n        this._inner.items = [];\n        this._inner.ordereds = [];\n        this._inner.inclusions = [];\n        this._inner.exclusions = [];\n        this._inner.requireds = [];\n        this._flags.sparse = false;\n    }\n\n    _base(value, state, options) {\n\n        const result = {\n            value\n        };\n\n        if (typeof value === 'string' &&\n            options.convert) {\n\n            internals.safeParse(value, result);\n        }\n\n        let isArray = Array.isArray(result.value);\n        const wasArray = isArray;\n        if (options.convert && this._flags.single && !isArray) {\n            result.value = [result.value];\n            isArray = true;\n        }\n\n        if (!isArray) {\n            result.errors = this.createError('array.base', null, state, options);\n            return result;\n        }\n\n        if (this._inner.inclusions.length ||\n            this._inner.exclusions.length ||\n            this._inner.requireds.length ||\n            this._inner.ordereds.length ||\n            !this._flags.sparse) {\n\n            // Clone the array so that we don't modify the original\n            if (wasArray) {\n                result.value = result.value.slice(0);\n            }\n\n            result.errors = this._checkItems.call(this, result.value, wasArray, state, options);\n\n            if (result.errors && wasArray && options.convert && this._flags.single) {\n\n                // Attempt a 2nd pass by putting the array inside one.\n                const previousErrors = result.errors;\n\n                result.value = [result.value];\n                result.errors = this._checkItems.call(this, result.value, wasArray, state, options);\n\n                if (result.errors) {\n\n                    // Restore previous errors and value since this didn't validate either.\n                    result.errors = previousErrors;\n                    result.value = result.value[0];\n                }\n            }\n        }\n\n        return result;\n    }\n\n    _checkItems(items, wasArray, state, options) {\n\n        const errors = [];\n        let errored;\n\n        const requireds = this._inner.requireds.slice();\n        const ordereds = this._inner.ordereds.slice();\n        const inclusions = this._inner.inclusions.concat(requireds);\n\n        let il = items.length;\n        for (let i = 0; i < il; ++i) {\n            errored = false;\n            const item = items[i];\n            let isValid = false;\n            const key = wasArray ? i : state.key;\n            const path = wasArray ? state.path.concat(i) : state.path;\n            const localState = { key, path, parent: state.parent, reference: state.reference };\n            let res;\n\n            // Sparse\n\n            if (!this._flags.sparse && item === undefined) {\n                errors.push(this.createError('array.sparse', null, { key: state.key, path: localState.path, pos: i }, options));\n\n                if (options.abortEarly) {\n                    return errors;\n                }\n\n                ordereds.shift();\n\n                continue;\n            }\n\n            // Exclusions\n\n            for (let j = 0; j < this._inner.exclusions.length; ++j) {\n                res = this._inner.exclusions[j]._validate(item, localState, {});                // Not passing options to use defaults\n\n                if (!res.errors) {\n                    errors.push(this.createError(wasArray ? 'array.excludes' : 'array.excludesSingle', { pos: i, value: item }, { key: state.key, path: localState.path }, options));\n                    errored = true;\n\n                    if (options.abortEarly) {\n                        return errors;\n                    }\n\n                    ordereds.shift();\n\n                    break;\n                }\n            }\n\n            if (errored) {\n                continue;\n            }\n\n            // Ordered\n            if (this._inner.ordereds.length) {\n                if (ordereds.length > 0) {\n                    const ordered = ordereds.shift();\n                    res = ordered._validate(item, localState, options);\n                    if (!res.errors) {\n                        if (ordered._flags.strip) {\n                            internals.fastSplice(items, i);\n                            --i;\n                            --il;\n                        }\n                        else if (!this._flags.sparse && res.value === undefined) {\n                            errors.push(this.createError('array.sparse', null, { key: state.key, path: localState.path, pos: i }, options));\n\n                            if (options.abortEarly) {\n                                return errors;\n                            }\n\n                            continue;\n                        }\n                        else {\n                            items[i] = res.value;\n                        }\n                    }\n                    else {\n                        errors.push(this.createError('array.ordered', { pos: i, reason: res.errors, value: item }, { key: state.key, path: localState.path }, options));\n                        if (options.abortEarly) {\n                            return errors;\n                        }\n                    }\n                    continue;\n                }\n                else if (!this._inner.items.length) {\n                    errors.push(this.createError('array.orderedLength', { pos: i, limit: this._inner.ordereds.length }, { key: state.key, path: localState.path }, options));\n                    if (options.abortEarly) {\n                        return errors;\n                    }\n                    continue;\n                }\n            }\n\n            // Requireds\n\n            const requiredChecks = [];\n            let jl = requireds.length;\n            for (let j = 0; j < jl; ++j) {\n                res = requiredChecks[j] = requireds[j]._validate(item, localState, options);\n                if (!res.errors) {\n                    items[i] = res.value;\n                    isValid = true;\n                    internals.fastSplice(requireds, j);\n                    --j;\n                    --jl;\n\n                    if (!this._flags.sparse && res.value === undefined) {\n                        errors.push(this.createError('array.sparse', null, { key: state.key, path: localState.path, pos: i }, options));\n\n                        if (options.abortEarly) {\n                            return errors;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (isValid) {\n                continue;\n            }\n\n            // Inclusions\n\n            const stripUnknown = options.stripUnknown\n                ? (options.stripUnknown === true ? true : !!options.stripUnknown.arrays)\n                : false;\n\n            jl = inclusions.length;\n            for (let j = 0; j < jl; ++j) {\n                const inclusion = inclusions[j];\n\n                // Avoid re-running requireds that already didn't match in the previous loop\n                const previousCheck = requireds.indexOf(inclusion);\n                if (previousCheck !== -1) {\n                    res = requiredChecks[previousCheck];\n                }\n                else {\n                    res = inclusion._validate(item, localState, options);\n\n                    if (!res.errors) {\n                        if (inclusion._flags.strip) {\n                            internals.fastSplice(items, i);\n                            --i;\n                            --il;\n                        }\n                        else if (!this._flags.sparse && res.value === undefined) {\n                            errors.push(this.createError('array.sparse', null, { key: state.key, path: localState.path, pos: i }, options));\n                            errored = true;\n                        }\n                        else {\n                            items[i] = res.value;\n                        }\n                        isValid = true;\n                        break;\n                    }\n                }\n\n                // Return the actual error if only one inclusion defined\n                if (jl === 1) {\n                    if (stripUnknown) {\n                        internals.fastSplice(items, i);\n                        --i;\n                        --il;\n                        isValid = true;\n                        break;\n                    }\n\n                    errors.push(this.createError(wasArray ? 'array.includesOne' : 'array.includesOneSingle', { pos: i, reason: res.errors, value: item }, { key: state.key, path: localState.path }, options));\n                    errored = true;\n\n                    if (options.abortEarly) {\n                        return errors;\n                    }\n\n                    break;\n                }\n            }\n\n            if (errored) {\n                continue;\n            }\n\n            if (this._inner.inclusions.length && !isValid) {\n                if (stripUnknown) {\n                    internals.fastSplice(items, i);\n                    --i;\n                    --il;\n                    continue;\n                }\n\n                errors.push(this.createError(wasArray ? 'array.includes' : 'array.includesSingle', { pos: i, value: item }, { key: state.key, path: localState.path }, options));\n\n                if (options.abortEarly) {\n                    return errors;\n                }\n            }\n        }\n\n        if (requireds.length) {\n            this._fillMissedErrors.call(this, errors, requireds, state, options);\n        }\n\n        if (ordereds.length) {\n            this._fillOrderedErrors.call(this, errors, ordereds, state, options);\n        }\n\n        return errors.length ? errors : null;\n    }\n\n    describe() {\n\n        const description = super.describe();\n\n        if (this._inner.ordereds.length) {\n            description.orderedItems = [];\n\n            for (let i = 0; i < this._inner.ordereds.length; ++i) {\n                description.orderedItems.push(this._inner.ordereds[i].describe());\n            }\n        }\n\n        if (this._inner.items.length) {\n            description.items = [];\n\n            for (let i = 0; i < this._inner.items.length; ++i) {\n                description.items.push(this._inner.items[i].describe());\n            }\n        }\n\n        return description;\n    }\n\n    items(...schemas) {\n\n        const obj = this.clone();\n\n        Hoek.flatten(schemas).forEach((type, index) => {\n\n            try {\n                type = Cast.schema(this._currentJoi, type);\n            }\n            catch (castErr) {\n                if (castErr.hasOwnProperty('path')) {\n                    castErr.path = index + '.' + castErr.path;\n                }\n                else {\n                    castErr.path = index;\n                }\n                castErr.message = castErr.message + '(' + castErr.path + ')';\n                throw castErr;\n            }\n\n            obj._inner.items.push(type);\n\n            if (type._flags.presence === 'required') {\n                obj._inner.requireds.push(type);\n            }\n            else if (type._flags.presence === 'forbidden') {\n                obj._inner.exclusions.push(type.optional());\n            }\n            else {\n                obj._inner.inclusions.push(type);\n            }\n        });\n\n        return obj;\n    }\n\n    ordered(...schemas) {\n\n        const obj = this.clone();\n\n        Hoek.flatten(schemas).forEach((type, index) => {\n\n            try {\n                type = Cast.schema(this._currentJoi, type);\n            }\n            catch (castErr) {\n                if (castErr.hasOwnProperty('path')) {\n                    castErr.path = index + '.' + castErr.path;\n                }\n                else {\n                    castErr.path = index;\n                }\n                castErr.message = castErr.message + '(' + castErr.path + ')';\n                throw castErr;\n            }\n            obj._inner.ordereds.push(type);\n        });\n\n        return obj;\n    }\n\n    min(limit) {\n\n        const isRef = Ref.isRef(limit);\n\n        Hoek.assert((Number.isSafeInteger(limit) && limit >= 0) || isRef, 'limit must be a positive integer or reference');\n\n        return this._test('min', limit, function (value, state, options) {\n\n            let compareTo;\n            if (isRef) {\n                compareTo = limit(state.reference || state.parent, options);\n\n                if (!(Number.isSafeInteger(compareTo) && compareTo >= 0)) {\n                    return this.createError('array.ref', { ref: limit.key }, state, options);\n                }\n            }\n            else {\n                compareTo = limit;\n            }\n\n            if (value.length >= compareTo) {\n                return value;\n            }\n\n            return this.createError('array.min', { limit, value }, state, options);\n        });\n    }\n\n    max(limit) {\n\n        const isRef = Ref.isRef(limit);\n\n        Hoek.assert((Number.isSafeInteger(limit) && limit >= 0) || isRef, 'limit must be a positive integer or reference');\n\n        return this._test('max', limit, function (value, state, options) {\n\n            let compareTo;\n            if (isRef) {\n                compareTo = limit(state.reference || state.parent, options);\n\n                if (!(Number.isSafeInteger(compareTo) && compareTo >= 0)) {\n                    return this.createError('array.ref', { ref: limit.key }, state, options);\n                }\n            }\n            else {\n                compareTo = limit;\n            }\n\n            if (value.length <= compareTo) {\n                return value;\n            }\n\n            return this.createError('array.max', { limit, value }, state, options);\n        });\n    }\n\n    length(limit) {\n\n        const isRef = Ref.isRef(limit);\n\n        Hoek.assert((Number.isSafeInteger(limit) && limit >= 0) || isRef, 'limit must be a positive integer or reference');\n\n        return this._test('length', limit, function (value, state, options) {\n\n            let compareTo;\n            if (isRef) {\n                compareTo = limit(state.reference || state.parent, options);\n\n                if (!(Number.isSafeInteger(compareTo) && compareTo >= 0)) {\n                    return this.createError('array.ref', { ref: limit.key }, state, options);\n                }\n            }\n            else {\n                compareTo = limit;\n            }\n\n            if (value.length === compareTo) {\n                return value;\n            }\n\n            return this.createError('array.length', { limit, value }, state, options);\n        });\n    }\n\n    unique(comparator, configs) {\n\n        Hoek.assert(comparator === undefined ||\n            typeof comparator === 'function' ||\n            typeof comparator === 'string', 'comparator must be a function or a string');\n\n        Hoek.assert(configs === undefined ||\n            typeof configs === 'object', 'configs must be an object');\n\n        const settings = {\n            ignoreUndefined: (configs && configs.ignoreUndefined) || false\n        };\n\n\n        if (typeof comparator === 'string') {\n            settings.path = comparator;\n        }\n        else if (typeof comparator === 'function') {\n            settings.comparator = comparator;\n        }\n\n        return this._test('unique', settings, function (value, state, options) {\n\n            const found = {\n                string: Object.create(null),\n                number: Object.create(null),\n                undefined: Object.create(null),\n                boolean: Object.create(null),\n                object: new Map(),\n                function: new Map(),\n                custom: new Map()\n            };\n\n            const compare = settings.comparator || Hoek.deepEqual;\n            const ignoreUndefined = settings.ignoreUndefined;\n\n            for (let i = 0; i < value.length; ++i) {\n                const item = settings.path ? Hoek.reach(value[i], settings.path) : value[i];\n                const records = settings.comparator ? found.custom : found[typeof item];\n\n                // All available types are supported, so it's not possible to reach 100% coverage without ignoring this line.\n                // I still want to keep the test for future js versions with new types (eg. Symbol).\n                if (/* $lab:coverage:off$ */ records /* $lab:coverage:on$ */) {\n                    if (records instanceof Map) {\n                        const entries = records.entries();\n                        let current;\n                        while (!(current = entries.next()).done) {\n                            if (compare(current.value[0], item)) {\n                                const localState = {\n                                    key: state.key,\n                                    path: state.path.concat(i),\n                                    parent: state.parent,\n                                    reference: state.reference\n                                };\n\n                                const context = {\n                                    pos: i,\n                                    value: value[i],\n                                    dupePos: current.value[1],\n                                    dupeValue: value[current.value[1]]\n                                };\n\n                                if (settings.path) {\n                                    context.path = settings.path;\n                                }\n\n                                return this.createError('array.unique', context, localState, options);\n                            }\n                        }\n\n                        records.set(item, i);\n                    }\n                    else {\n                        if ((!ignoreUndefined || item !== undefined) && records[item] !== undefined) {\n                            const localState = {\n                                key: state.key,\n                                path: state.path.concat(i),\n                                parent: state.parent,\n                                reference: state.reference\n                            };\n\n                            const context = {\n                                pos: i,\n                                value: value[i],\n                                dupePos: records[item],\n                                dupeValue: value[records[item]]\n                            };\n\n                            if (settings.path) {\n                                context.path = settings.path;\n                            }\n\n                            return this.createError('array.unique', context, localState, options);\n                        }\n\n                        records[item] = i;\n                    }\n                }\n            }\n\n            return value;\n        });\n    }\n\n    sparse(enabled) {\n\n        const value = enabled === undefined ? true : !!enabled;\n\n        if (this._flags.sparse === value) {\n            return this;\n        }\n\n        const obj = this.clone();\n        obj._flags.sparse = value;\n        return obj;\n    }\n\n    single(enabled) {\n\n        const value = enabled === undefined ? true : !!enabled;\n\n        if (this._flags.single === value) {\n            return this;\n        }\n\n        const obj = this.clone();\n        obj._flags.single = value;\n        return obj;\n    }\n\n    _fillMissedErrors(errors, requireds, state, options) {\n\n        const knownMisses = [];\n        let unknownMisses = 0;\n        for (let i = 0; i < requireds.length; ++i) {\n            const label = requireds[i]._getLabel();\n            if (label) {\n                knownMisses.push(label);\n            }\n            else {\n                ++unknownMisses;\n            }\n        }\n\n        if (knownMisses.length) {\n            if (unknownMisses) {\n                errors.push(this.createError('array.includesRequiredBoth', { knownMisses, unknownMisses }, { key: state.key, path: state.path }, options));\n            }\n            else {\n                errors.push(this.createError('array.includesRequiredKnowns', { knownMisses }, { key: state.key, path: state.path }, options));\n            }\n        }\n        else {\n            errors.push(this.createError('array.includesRequiredUnknowns', { unknownMisses }, { key: state.key, path: state.path }, options));\n        }\n    }\n\n\n    _fillOrderedErrors(errors, ordereds, state, options) {\n\n        const requiredOrdereds = [];\n\n        for (let i = 0; i < ordereds.length; ++i) {\n            const presence = Hoek.reach(ordereds[i], '_flags.presence');\n            if (presence === 'required') {\n                requiredOrdereds.push(ordereds[i]);\n            }\n        }\n\n        if (requiredOrdereds.length) {\n            this._fillMissedErrors.call(this, errors, requiredOrdereds, state, options);\n        }\n    }\n\n};\n\n\ninternals.safeParse = function (value, result) {\n\n    try {\n        const converted = JSON.parse(value);\n        if (Array.isArray(converted)) {\n            result.value = converted;\n        }\n    }\n    catch (e) { }\n};\n\n\nmodule.exports = new internals.Array();\n","'use strict';\n\n// Load modules\n\nconst Any = require('../any');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.Binary = class extends Any {\n\n    constructor() {\n\n        super();\n        this._type = 'binary';\n    }\n\n    _base(value, state, options) {\n\n        const result = {\n            value\n        };\n\n        if (typeof value === 'string' &&\n            options.convert) {\n\n            try {\n                result.value = Buffer.from(value, this._flags.encoding);\n            }\n            catch (e) {\n            }\n        }\n\n        result.errors = Buffer.isBuffer(result.value) ? null : this.createError('binary.base', null, state, options);\n        return result;\n    }\n\n    encoding(encoding) {\n\n        Hoek.assert(Buffer.isEncoding(encoding), 'Invalid encoding:', encoding);\n\n        if (this._flags.encoding === encoding) {\n            return this;\n        }\n\n        const obj = this.clone();\n        obj._flags.encoding = encoding;\n        return obj;\n    }\n\n    min(limit) {\n\n        Hoek.assert(Number.isSafeInteger(limit) && limit >= 0, 'limit must be a positive integer');\n\n        return this._test('min', limit, function (value, state, options) {\n\n            if (value.length >= limit) {\n                return value;\n            }\n\n            return this.createError('binary.min', { limit, value }, state, options);\n        });\n    }\n\n    max(limit) {\n\n        Hoek.assert(Number.isSafeInteger(limit) && limit >= 0, 'limit must be a positive integer');\n\n        return this._test('max', limit, function (value, state, options) {\n\n            if (value.length <= limit) {\n                return value;\n            }\n\n            return this.createError('binary.max', { limit, value }, state, options);\n        });\n    }\n\n    length(limit) {\n\n        Hoek.assert(Number.isSafeInteger(limit) && limit >= 0, 'limit must be a positive integer');\n\n        return this._test('length', limit, function (value, state, options) {\n\n            if (value.length === limit) {\n                return value;\n            }\n\n            return this.createError('binary.length', { limit, value }, state, options);\n        });\n    }\n\n};\n\n\nmodule.exports = new internals.Binary();\n","'use strict';\n\n// Load modules\n\nconst Any = require('../any');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {\n    Set: require('../../set')\n};\n\n\ninternals.Boolean = class extends Any {\n    constructor() {\n\n        super();\n        this._type = 'boolean';\n        this._flags.insensitive = true;\n        this._inner.truthySet = new internals.Set();\n        this._inner.falsySet = new internals.Set();\n    }\n\n    _base(value, state, options) {\n\n        const result = {\n            value\n        };\n\n        if (typeof value === 'string' &&\n            options.convert) {\n\n            const normalized = this._flags.insensitive ? value.toLowerCase() : value;\n            result.value = (normalized === 'true' ? true\n                : (normalized === 'false' ? false : value));\n        }\n\n        if (typeof result.value !== 'boolean') {\n            result.value = (this._inner.truthySet.has(value, null, null, this._flags.insensitive) ? true\n                : (this._inner.falsySet.has(value, null, null, this._flags.insensitive) ? false : value));\n        }\n\n        result.errors = (typeof result.value === 'boolean') ? null : this.createError('boolean.base', null, state, options);\n        return result;\n    }\n\n    truthy(...values) {\n\n        const obj = this.clone();\n        values = Hoek.flatten(values);\n        for (let i = 0; i < values.length; ++i) {\n            const value = values[i];\n\n            Hoek.assert(value !== undefined, 'Cannot call truthy with undefined');\n            obj._inner.truthySet.add(value);\n        }\n        return obj;\n    }\n\n    falsy(...values) {\n\n        const obj = this.clone();\n        values = Hoek.flatten(values);\n        for (let i = 0; i < values.length; ++i) {\n            const value = values[i];\n\n            Hoek.assert(value !== undefined, 'Cannot call falsy with undefined');\n            obj._inner.falsySet.add(value);\n        }\n        return obj;\n    }\n\n    insensitive(enabled) {\n\n        const insensitive = enabled === undefined ? true : !!enabled;\n\n        if (this._flags.insensitive === insensitive) {\n            return this;\n        }\n\n        const obj = this.clone();\n        obj._flags.insensitive = insensitive;\n        return obj;\n    }\n\n    describe() {\n\n        const description = super.describe();\n        description.truthy = [true].concat(this._inner.truthySet.values());\n        description.falsy = [false].concat(this._inner.falsySet.values());\n        return description;\n    }\n};\n\n\nmodule.exports = new internals.Boolean();\n","'use strict';\n\n// Load modules\n\nconst Any = require('../any');\nconst Ref = require('../../ref');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\ninternals.isoDate = /^(?:[-+]\\d{2})?(?:\\d{4}(?!\\d{2}\\b))(?:(-?)(?:(?:0[1-9]|1[0-2])(?:\\1(?:[12]\\d|0[1-9]|3[01]))?|W(?:[0-4]\\d|5[0-2])(?:-?[1-7])?|(?:00[1-9]|0[1-9]\\d|[12]\\d{2}|3(?:[0-5]\\d|6[1-6])))(?![T]$|[T][\\d]+Z$)(?:[T\\s](?:(?:(?:[01]\\d|2[0-3])(?:(:?)[0-5]\\d)?|24\\:?00)(?:[.,]\\d+(?!:))?)(?:\\2[0-5]\\d(?:[.,]\\d+)?)?(?:[Z]|(?:[+-])(?:[01]\\d|2[0-3])(?::?[0-5]\\d)?)?)?)?$/;\ninternals.invalidDate = new Date('');\ninternals.isIsoDate = (() => {\n\n    const isoString = internals.isoDate.toString();\n\n    return (date) => {\n\n        return date && (date.toString() === isoString);\n    };\n})();\n\ninternals.Date = class extends Any {\n\n    constructor() {\n\n        super();\n        this._type = 'date';\n    }\n\n    _base(value, state, options) {\n\n        const result = {\n            value: (options.convert && internals.Date.toDate(value, this._flags.format, this._flags.timestamp, this._flags.multiplier)) || value\n        };\n\n        if (result.value instanceof Date && !isNaN(result.value.getTime())) {\n            result.errors = null;\n        }\n        else if (!options.convert) {\n            result.errors = this.createError('date.strict', null, state, options);\n        }\n        else {\n            let type;\n            if (internals.isIsoDate(this._flags.format)) {\n                type = 'isoDate';\n            }\n            else if (this._flags.timestamp) {\n                type = `timestamp.${this._flags.timestamp}`;\n            }\n            else {\n                type = 'base';\n            }\n\n            result.errors = this.createError(`date.${type}`, null, state, options);\n        }\n\n        return result;\n    }\n\n    static toDate(value, format, timestamp, multiplier) {\n\n        if (value instanceof Date) {\n            return value;\n        }\n\n        if (typeof value === 'string' ||\n            (typeof value === 'number' && !isNaN(value) && isFinite(value))) {\n\n            if (typeof value === 'string' &&\n                /^[+-]?\\d+(\\.\\d+)?$/.test(value)) {\n\n                value = parseFloat(value);\n            }\n\n            let date;\n            if (format && internals.isIsoDate(format)) {\n                date = format.test(value) ? new Date(value) : internals.invalidDate;\n            }\n            else if (timestamp && multiplier) {\n                date = /^\\s*$/.test(value) ? internals.invalidDate : new Date(value * multiplier);\n            }\n            else {\n                date = new Date(value);\n            }\n\n            if (!isNaN(date.getTime())) {\n                return date;\n            }\n        }\n\n        return null;\n    }\n\n    iso() {\n\n        if (this._flags.format === internals.isoDate) {\n            return this;\n        }\n\n        const obj = this.clone();\n        obj._flags.format = internals.isoDate;\n        return obj;\n    }\n\n    timestamp(type = 'javascript') {\n\n        const allowed = ['javascript', 'unix'];\n        Hoek.assert(allowed.includes(type), '\"type\" must be one of \"' + allowed.join('\", \"') + '\"');\n\n        if (this._flags.timestamp === type) {\n            return this;\n        }\n\n        const obj = this.clone();\n        obj._flags.timestamp = type;\n        obj._flags.multiplier = type === 'unix' ? 1000 : 1;\n        return obj;\n    }\n\n    _isIsoDate(value) {\n\n        return internals.isoDate.test(value);\n    }\n\n};\n\ninternals.compare = function (type, compare) {\n\n    return function (date) {\n\n        const isNow = date === 'now';\n        const isRef = Ref.isRef(date);\n\n        if (!isNow && !isRef) {\n            date = internals.Date.toDate(date);\n        }\n\n        Hoek.assert(date, 'Invalid date format');\n\n        return this._test(type, date, function (value, state, options) {\n\n            let compareTo;\n            if (isNow) {\n                compareTo = Date.now();\n            }\n            else if (isRef) {\n                compareTo = internals.Date.toDate(date(state.reference || state.parent, options));\n\n                if (!compareTo) {\n                    return this.createError('date.ref', { ref: date.key }, state, options);\n                }\n\n                compareTo = compareTo.getTime();\n            }\n            else {\n                compareTo = date.getTime();\n            }\n\n            if (compare(value.getTime(), compareTo)) {\n                return value;\n            }\n\n            return this.createError('date.' + type, { limit: new Date(compareTo) }, state, options);\n        });\n    };\n};\n\n\ninternals.Date.prototype.min = internals.compare('min', (value, date) => value >= date);\ninternals.Date.prototype.max = internals.compare('max', (value, date) => value <= date);\ninternals.Date.prototype.greater = internals.compare('greater', (value, date) => value > date);\ninternals.Date.prototype.less = internals.compare('less', (value, date) => value < date);\n\n\nmodule.exports = new internals.Date();\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\nconst ObjectType = require('../object');\nconst Ref = require('../../ref');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.Func = class extends ObjectType.constructor {\n\n    constructor() {\n\n        super();\n        this._flags.func = true;\n    }\n\n    arity(n) {\n\n        Hoek.assert(Number.isSafeInteger(n) && n >= 0, 'n must be a positive integer');\n\n        return this._test('arity', n, function (value, state, options) {\n\n            if (value.length === n) {\n                return value;\n            }\n\n            return this.createError('function.arity', { n }, state, options);\n        });\n    }\n\n    minArity(n) {\n\n        Hoek.assert(Number.isSafeInteger(n) && n > 0, 'n must be a strict positive integer');\n\n        return this._test('minArity', n, function (value, state, options) {\n\n            if (value.length >= n) {\n                return value;\n            }\n\n            return this.createError('function.minArity', { n }, state, options);\n        });\n    }\n\n    maxArity(n) {\n\n        Hoek.assert(Number.isSafeInteger(n) && n >= 0, 'n must be a positive integer');\n\n        return this._test('maxArity', n, function (value, state, options) {\n\n            if (value.length <= n) {\n                return value;\n            }\n\n            return this.createError('function.maxArity', { n }, state, options);\n        });\n    }\n\n    ref() {\n\n        return this._test('ref', null, function (value, state, options) {\n\n            if (Ref.isRef(value)) {\n                return value;\n            }\n\n            return this.createError('function.ref', null, state, options);\n        });\n    }\n\n    class() {\n\n        return this._test('class', null, function (value, state, options) {\n\n            if ((/^\\s*class\\s/).test(value.toString())) {\n                return value;\n            }\n\n            return this.createError('function.class', null, state, options);\n        });\n    }\n};\n\nmodule.exports = new internals.Func();\n","'use strict';\n\n// Load modules\n\nconst Any = require('../any');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.Lazy = class extends Any {\n\n    constructor() {\n\n        super();\n        this._type = 'lazy';\n    }\n\n    _base(value, state, options) {\n\n        const result = { value };\n        const lazy = this._flags.lazy;\n\n        if (!lazy) {\n            result.errors = this.createError('lazy.base', null, state, options);\n            return result;\n        }\n\n        const schema = lazy();\n\n        if (!(schema instanceof Any)) {\n            result.errors = this.createError('lazy.schema', null, state, options);\n            return result;\n        }\n\n        return schema._validate(value, state, options);\n    }\n\n    set(fn) {\n\n        Hoek.assert(typeof fn === 'function', 'You must provide a function as first argument');\n\n        const obj = this.clone();\n        obj._flags.lazy = fn;\n        return obj;\n    }\n\n};\n\nmodule.exports = new internals.Lazy();\n","'use strict';\n\n// Load modules\n\nconst Any = require('../any');\nconst Ref = require('../../ref');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {\n    precisionRx: /(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/\n};\n\n\ninternals.Number = class extends Any {\n\n    constructor() {\n\n        super();\n        this._type = 'number';\n        this._invalids.add(Infinity);\n        this._invalids.add(-Infinity);\n    }\n\n    _base(value, state, options) {\n\n        const result = {\n            errors: null,\n            value\n        };\n\n        if (typeof value === 'string' &&\n            options.convert) {\n\n            const number = parseFloat(value);\n            result.value = (isNaN(number) || !isFinite(value)) ? NaN : number;\n        }\n\n        const isNumber = typeof result.value === 'number' && !isNaN(result.value);\n\n        if (options.convert && 'precision' in this._flags && isNumber) {\n\n            // This is conceptually equivalent to using toFixed but it should be much faster\n            const precision = Math.pow(10, this._flags.precision);\n            result.value = Math.round(result.value * precision) / precision;\n        }\n\n        result.errors = isNumber ? null : this.createError('number.base', { value }, state, options);\n        return result;\n    }\n\n    multiple(base) {\n\n        const isRef = Ref.isRef(base);\n\n        if (!isRef) {\n            Hoek.assert(typeof base === 'number' && isFinite(base), 'multiple must be a number');\n            Hoek.assert(base > 0, 'multiple must be greater than 0');\n        }\n\n        return this._test('multiple', base, function (value, state, options) {\n\n            const divisor = isRef ? base(state.reference || state.parent, options) : base;\n\n            if (isRef && (typeof divisor !== 'number' || !isFinite(divisor))) {\n                return this.createError('number.ref', { ref: base.key }, state, options);\n            }\n\n            if (value % divisor === 0) {\n                return value;\n            }\n\n            return this.createError('number.multiple', { multiple: base, value }, state, options);\n        });\n    }\n\n    integer() {\n\n        return this._test('integer', undefined, function (value, state, options) {\n\n            return Number.isSafeInteger(value) ? value : this.createError('number.integer', { value }, state, options);\n        });\n    }\n\n    negative() {\n\n        return this._test('negative', undefined, function (value, state, options) {\n\n            if (value < 0) {\n                return value;\n            }\n\n            return this.createError('number.negative', { value }, state, options);\n        });\n    }\n\n    positive() {\n\n        return this._test('positive', undefined, function (value, state, options) {\n\n            if (value > 0) {\n                return value;\n            }\n\n            return this.createError('number.positive', { value }, state, options);\n        });\n    }\n\n    precision(limit) {\n\n        Hoek.assert(Number.isSafeInteger(limit), 'limit must be an integer');\n        Hoek.assert(!('precision' in this._flags), 'precision already set');\n\n        const obj = this._test('precision', limit, function (value, state, options) {\n\n            const places = value.toString().match(internals.precisionRx);\n            const decimals = Math.max((places[1] ? places[1].length : 0) - (places[2] ? parseInt(places[2], 10) : 0), 0);\n            if (decimals <= limit) {\n                return value;\n            }\n\n            return this.createError('number.precision', { limit, value }, state, options);\n        });\n\n        obj._flags.precision = limit;\n        return obj;\n    }\n\n    port() {\n\n        return this._test('port', undefined, function (value, state, options) {\n\n            if (!Number.isSafeInteger(value) || value < 0 || value > 65535) {\n                return this.createError('number.port', { value }, state, options);\n            }\n\n            return value;\n        });\n    }\n\n};\n\n\ninternals.compare = function (type, compare) {\n\n    return function (limit) {\n\n        const isRef = Ref.isRef(limit);\n        const isNumber = typeof limit === 'number' && !isNaN(limit);\n\n        Hoek.assert(isNumber || isRef, 'limit must be a number or reference');\n\n        return this._test(type, limit, function (value, state, options) {\n\n            let compareTo;\n            if (isRef) {\n                compareTo = limit(state.reference || state.parent, options);\n\n                if (!(typeof compareTo === 'number' && !isNaN(compareTo))) {\n                    return this.createError('number.ref', { ref: limit.key }, state, options);\n                }\n            }\n            else {\n                compareTo = limit;\n            }\n\n            if (compare(value, compareTo)) {\n                return value;\n            }\n\n            return this.createError('number.' + type, { limit: compareTo, value }, state, options);\n        });\n    };\n};\n\n\ninternals.Number.prototype.min = internals.compare('min', (value, limit) => value >= limit);\ninternals.Number.prototype.max = internals.compare('max', (value, limit) => value <= limit);\ninternals.Number.prototype.greater = internals.compare('greater', (value, limit) => value > limit);\ninternals.Number.prototype.less = internals.compare('less', (value, limit) => value < limit);\n\n\nmodule.exports = new internals.Number();\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\nconst Topo = require('topo');\nconst Any = require('../any');\nconst Errors = require('../../errors');\nconst Cast = require('../../cast');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.Object = class extends Any {\n\n    constructor() {\n\n        super();\n        this._type = 'object';\n        this._inner.children = null;\n        this._inner.renames = [];\n        this._inner.dependencies = [];\n        this._inner.patterns = [];\n    }\n\n    _init(...args) {\n\n        return args.length ? this.keys(...args) : this;\n    }\n\n    _base(value, state, options) {\n\n        let target = value;\n        const errors = [];\n        const finish = () => {\n\n            return {\n                value: target,\n                errors: errors.length ? errors : null\n            };\n        };\n\n        if (typeof value === 'string' &&\n            options.convert) {\n\n            value = internals.safeParse(value);\n        }\n\n        const type = this._flags.func ? 'function' : 'object';\n        if (!value ||\n            typeof value !== type ||\n            Array.isArray(value)) {\n\n            errors.push(this.createError(type + '.base', null, state, options));\n            return finish();\n        }\n\n        // Skip if there are no other rules to test\n\n        if (!this._inner.renames.length &&\n            !this._inner.dependencies.length &&\n            !this._inner.children &&                    // null allows any keys\n            !this._inner.patterns.length) {\n\n            target = value;\n            return finish();\n        }\n\n        // Ensure target is a local copy (parsed) or shallow copy\n\n        if (target === value) {\n            if (type === 'object') {\n                target = Object.create(Object.getPrototypeOf(value));\n            }\n            else {\n                target = function (...args) {\n\n                    return value.apply(this, args);\n                };\n\n                target.prototype = Hoek.clone(value.prototype);\n            }\n\n            const valueKeys = Object.keys(value);\n            for (let i = 0; i < valueKeys.length; ++i) {\n                target[valueKeys[i]] = value[valueKeys[i]];\n            }\n        }\n        else {\n            target = value;\n        }\n\n        // Rename keys\n\n        const renamed = {};\n        for (let i = 0; i < this._inner.renames.length; ++i) {\n            const rename = this._inner.renames[i];\n\n            if (rename.isRegExp) {\n                const targetKeys = Object.keys(target);\n                const matchedTargetKeys = [];\n\n                for (let j = 0; j < targetKeys.length; ++j) {\n                    if (rename.from.test(targetKeys[j])) {\n                        matchedTargetKeys.push(targetKeys[j]);\n                    }\n                }\n\n                const allUndefined = matchedTargetKeys.every((key) => target[key] === undefined);\n                if (rename.options.ignoreUndefined && allUndefined) {\n                    continue;\n                }\n\n                if (!rename.options.multiple &&\n                    renamed[rename.to]) {\n\n                    errors.push(this.createError('object.rename.regex.multiple', { from: matchedTargetKeys, to: rename.to }, state, options));\n                    if (options.abortEarly) {\n                        return finish();\n                    }\n                }\n\n                if (Object.prototype.hasOwnProperty.call(target, rename.to) &&\n                    !rename.options.override &&\n                    !renamed[rename.to]) {\n\n                    errors.push(this.createError('object.rename.regex.override', { from: matchedTargetKeys, to: rename.to }, state, options));\n                    if (options.abortEarly) {\n                        return finish();\n                    }\n                }\n\n                if (allUndefined) {\n                    delete target[rename.to];\n                }\n                else {\n                    target[rename.to] = target[matchedTargetKeys[matchedTargetKeys.length - 1]];\n                }\n\n                renamed[rename.to] = true;\n\n                if (!rename.options.alias) {\n                    for (let j = 0; j < matchedTargetKeys.length; ++j) {\n                        delete target[matchedTargetKeys[j]];\n                    }\n                }\n            }\n            else {\n                if (rename.options.ignoreUndefined && target[rename.from] === undefined) {\n                    continue;\n                }\n\n                if (!rename.options.multiple &&\n                    renamed[rename.to]) {\n\n                    errors.push(this.createError('object.rename.multiple', { from: rename.from, to: rename.to }, state, options));\n                    if (options.abortEarly) {\n                        return finish();\n                    }\n                }\n\n                if (Object.prototype.hasOwnProperty.call(target, rename.to) &&\n                    !rename.options.override &&\n                    !renamed[rename.to]) {\n\n                    errors.push(this.createError('object.rename.override', { from: rename.from, to: rename.to }, state, options));\n                    if (options.abortEarly) {\n                        return finish();\n                    }\n                }\n\n                if (target[rename.from] === undefined) {\n                    delete target[rename.to];\n                }\n                else {\n                    target[rename.to] = target[rename.from];\n                }\n\n                renamed[rename.to] = true;\n\n                if (!rename.options.alias) {\n                    delete target[rename.from];\n                }\n            }\n        }\n\n        // Validate schema\n\n        if (!this._inner.children &&            // null allows any keys\n            !this._inner.patterns.length &&\n            !this._inner.dependencies.length) {\n\n            return finish();\n        }\n\n        const unprocessed = new Set(Object.keys(target));\n\n        if (this._inner.children) {\n            const stripProps = [];\n\n            for (let i = 0; i < this._inner.children.length; ++i) {\n                const child = this._inner.children[i];\n                const key = child.key;\n                const item = target[key];\n\n                unprocessed.delete(key);\n\n                const localState = { key, path: state.path.concat(key), parent: target, reference: state.reference };\n                const result = child.schema._validate(item, localState, options);\n                if (result.errors) {\n                    errors.push(this.createError('object.child', { key, child: child.schema._getLabel(key), reason: result.errors }, localState, options));\n\n                    if (options.abortEarly) {\n                        return finish();\n                    }\n                }\n                else {\n                    if (child.schema._flags.strip || (result.value === undefined && result.value !== item)) {\n                        stripProps.push(key);\n                        target[key] = result.finalValue;\n                    }\n                    else if (result.value !== undefined) {\n                        target[key] = result.value;\n                    }\n                }\n            }\n\n            for (let i = 0; i < stripProps.length; ++i) {\n                delete target[stripProps[i]];\n            }\n        }\n\n        // Unknown keys\n\n        if (unprocessed.size && this._inner.patterns.length) {\n\n            for (const key of unprocessed) {\n                const localState = {\n                    key,\n                    path: state.path.concat(key),\n                    parent: target,\n                    reference: state.reference\n                };\n                const item = target[key];\n\n                for (let i = 0; i < this._inner.patterns.length; ++i) {\n                    const pattern = this._inner.patterns[i];\n\n                    if (pattern.regex ?\n                        pattern.regex.test(key) :\n                        !pattern.schema.validate(key).error) {\n\n                        unprocessed.delete(key);\n\n                        const result = pattern.rule._validate(item, localState, options);\n                        if (result.errors) {\n                            errors.push(this.createError('object.child', {\n                                key,\n                                child: pattern.rule._getLabel(key),\n                                reason: result.errors\n                            }, localState, options));\n\n                            if (options.abortEarly) {\n                                return finish();\n                            }\n                        }\n\n                        target[key] = result.value;\n                    }\n                }\n            }\n        }\n\n        if (unprocessed.size && (this._inner.children || this._inner.patterns.length)) {\n            if ((options.stripUnknown && this._flags.allowUnknown !== true) ||\n                options.skipFunctions) {\n\n                const stripUnknown = options.stripUnknown\n                    ? (options.stripUnknown === true ? true : !!options.stripUnknown.objects)\n                    : false;\n\n\n                for (const key of unprocessed) {\n                    if (stripUnknown) {\n                        delete target[key];\n                        unprocessed.delete(key);\n                    }\n                    else if (typeof target[key] === 'function') {\n                        unprocessed.delete(key);\n                    }\n                }\n            }\n\n            if ((this._flags.allowUnknown !== undefined ? !this._flags.allowUnknown : !options.allowUnknown)) {\n\n                for (const unprocessedKey of unprocessed) {\n                    errors.push(this.createError('object.allowUnknown', { child: unprocessedKey }, {\n                        key: unprocessedKey,\n                        path: state.path.concat(unprocessedKey)\n                    }, options, {}));\n                }\n            }\n        }\n\n        // Validate dependencies\n\n        for (let i = 0; i < this._inner.dependencies.length; ++i) {\n            const dep = this._inner.dependencies[i];\n            const err = internals[dep.type].call(this, dep.key !== null && target[dep.key], dep.peers, target, { key: dep.key, path: dep.key === null ? state.path : state.path.concat(dep.key) }, options);\n            if (err instanceof Errors.Err) {\n                errors.push(err);\n                if (options.abortEarly) {\n                    return finish();\n                }\n            }\n        }\n\n        return finish();\n    }\n\n    keys(schema) {\n\n        Hoek.assert(schema === null || schema === undefined || typeof schema === 'object', 'Object schema must be a valid object');\n        Hoek.assert(!schema || !(schema instanceof Any), 'Object schema cannot be a joi schema');\n\n        const obj = this.clone();\n\n        if (!schema) {\n            obj._inner.children = null;\n            return obj;\n        }\n\n        const children = Object.keys(schema);\n\n        if (!children.length) {\n            obj._inner.children = [];\n            return obj;\n        }\n\n        const topo = new Topo();\n        if (obj._inner.children) {\n            for (let i = 0; i < obj._inner.children.length; ++i) {\n                const child = obj._inner.children[i];\n\n                // Only add the key if we are not going to replace it later\n                if (!children.includes(child.key)) {\n                    topo.add(child, { after: child._refs, group: child.key });\n                }\n            }\n        }\n\n        for (let i = 0; i < children.length; ++i) {\n            const key = children[i];\n            const child = schema[key];\n            try {\n                const cast = Cast.schema(this._currentJoi, child);\n                topo.add({ key, schema: cast }, { after: cast._refs, group: key });\n            }\n            catch (castErr) {\n                if (castErr.hasOwnProperty('path')) {\n                    castErr.path = key + '.' + castErr.path;\n                }\n                else {\n                    castErr.path = key;\n                }\n                throw castErr;\n            }\n        }\n\n        obj._inner.children = topo.nodes;\n\n        return obj;\n    }\n\n    append(schema) {\n        // Skip any changes\n        if (schema === null || schema === undefined || Object.keys(schema).length === 0) {\n            return this;\n        }\n\n        return this.keys(schema);\n    }\n\n    unknown(allow) {\n\n        const value = allow !== false;\n\n        if (this._flags.allowUnknown === value) {\n            return this;\n        }\n\n        const obj = this.clone();\n        obj._flags.allowUnknown = value;\n        return obj;\n    }\n\n    length(limit) {\n\n        Hoek.assert(Number.isSafeInteger(limit) && limit >= 0, 'limit must be a positive integer');\n\n        return this._test('length', limit, function (value, state, options) {\n\n            if (Object.keys(value).length === limit) {\n                return value;\n            }\n\n            return this.createError('object.length', { limit }, state, options);\n        });\n    }\n\n    min(limit) {\n\n        Hoek.assert(Number.isSafeInteger(limit) && limit >= 0, 'limit must be a positive integer');\n\n        return this._test('min', limit, function (value, state, options) {\n\n            if (Object.keys(value).length >= limit) {\n                return value;\n            }\n\n            return this.createError('object.min', { limit }, state, options);\n        });\n    }\n\n    max(limit) {\n\n        Hoek.assert(Number.isSafeInteger(limit) && limit >= 0, 'limit must be a positive integer');\n\n        return this._test('max', limit, function (value, state, options) {\n\n            if (Object.keys(value).length <= limit) {\n                return value;\n            }\n\n            return this.createError('object.max', { limit }, state, options);\n        });\n    }\n\n    pattern(pattern, schema) {\n\n        const isRegExp = pattern instanceof RegExp;\n        Hoek.assert(isRegExp || pattern instanceof Any, 'pattern must be a regex or schema');\n        Hoek.assert(schema !== undefined, 'Invalid rule');\n\n        if (isRegExp) {\n            pattern = new RegExp(pattern.source, pattern.ignoreCase ? 'i' : undefined);         // Future version should break this and forbid unsupported regex flags\n        }\n\n        try {\n            schema = Cast.schema(this._currentJoi, schema);\n        }\n        catch (castErr) {\n            if (castErr.hasOwnProperty('path')) {\n                castErr.message = castErr.message + '(' + castErr.path + ')';\n            }\n\n            throw castErr;\n        }\n\n        const obj = this.clone();\n        if (isRegExp) {\n            obj._inner.patterns.push({ regex: pattern, rule: schema });\n        }\n        else {\n            obj._inner.patterns.push({ schema: pattern, rule: schema });\n        }\n        return obj;\n    }\n\n    schema() {\n\n        return this._test('schema', null, function (value, state, options) {\n\n            if (value instanceof Any) {\n                return value;\n            }\n\n            return this.createError('object.schema', null, state, options);\n        });\n    }\n\n    with(key, peers) {\n\n        Hoek.assert(arguments.length === 2, 'Invalid number of arguments, expected 2.');\n\n        return this._dependency('with', key, peers);\n    }\n\n    without(key, peers) {\n\n        Hoek.assert(arguments.length === 2, 'Invalid number of arguments, expected 2.');\n\n        return this._dependency('without', key, peers);\n    }\n\n    xor(...peers) {\n\n        peers = Hoek.flatten(peers);\n        return this._dependency('xor', null, peers);\n    }\n\n    or(...peers) {\n\n        peers = Hoek.flatten(peers);\n        return this._dependency('or', null, peers);\n    }\n\n    and(...peers) {\n\n        peers = Hoek.flatten(peers);\n        return this._dependency('and', null, peers);\n    }\n\n    nand(...peers) {\n\n        peers = Hoek.flatten(peers);\n        return this._dependency('nand', null, peers);\n    }\n\n    requiredKeys(...children) {\n\n        children = Hoek.flatten(children);\n        return this.applyFunctionToChildren(children, 'required');\n    }\n\n    optionalKeys(...children) {\n\n        children = Hoek.flatten(children);\n        return this.applyFunctionToChildren(children, 'optional');\n    }\n\n    forbiddenKeys(...children) {\n\n        children = Hoek.flatten(children);\n        return this.applyFunctionToChildren(children, 'forbidden');\n    }\n\n    rename(from, to, options) {\n\n        Hoek.assert(typeof from === 'string' || from instanceof RegExp, 'Rename missing the from argument');\n        Hoek.assert(typeof to === 'string', 'Rename missing the to argument');\n        Hoek.assert(to !== from, 'Cannot rename key to same name:', from);\n\n        for (let i = 0; i < this._inner.renames.length; ++i) {\n            Hoek.assert(this._inner.renames[i].from !== from, 'Cannot rename the same key multiple times');\n        }\n\n        const obj = this.clone();\n\n        obj._inner.renames.push({\n            from,\n            to,\n            options: Hoek.applyToDefaults(internals.renameDefaults, options || {}),\n            isRegExp: from instanceof RegExp\n        });\n\n        return obj;\n    }\n\n    applyFunctionToChildren(children, fn, args, root) {\n\n        children = [].concat(children);\n        Hoek.assert(children.length > 0, 'expected at least one children');\n\n        const groupedChildren = internals.groupChildren(children);\n        let obj;\n\n        if ('' in groupedChildren) {\n            obj = this[fn].apply(this, args);\n            delete groupedChildren[''];\n        }\n        else {\n            obj = this.clone();\n        }\n\n        if (obj._inner.children) {\n            root = root ? (root + '.') : '';\n\n            for (let i = 0; i < obj._inner.children.length; ++i) {\n                const child = obj._inner.children[i];\n                const group = groupedChildren[child.key];\n\n                if (group) {\n                    obj._inner.children[i] = {\n                        key: child.key,\n                        _refs: child._refs,\n                        schema: child.schema.applyFunctionToChildren(group, fn, args, root + child.key)\n                    };\n\n                    delete groupedChildren[child.key];\n                }\n            }\n        }\n\n        const remaining = Object.keys(groupedChildren);\n        Hoek.assert(remaining.length === 0, 'unknown key(s)', remaining.join(', '));\n\n        return obj;\n    }\n\n    _dependency(type, key, peers) {\n\n        peers = [].concat(peers);\n        for (let i = 0; i < peers.length; ++i) {\n            Hoek.assert(typeof peers[i] === 'string', type, 'peers must be a string or array of strings');\n        }\n\n        const obj = this.clone();\n        obj._inner.dependencies.push({ type, key, peers });\n        return obj;\n    }\n\n    describe(shallow) {\n\n        const description = super.describe();\n\n        if (description.rules) {\n            for (let i = 0; i < description.rules.length; ++i) {\n                const rule = description.rules[i];\n                // Coverage off for future-proof descriptions, only object().assert() is use right now\n                if (/* $lab:coverage:off$ */rule.arg &&\n                    typeof rule.arg === 'object' &&\n                    rule.arg.schema &&\n                    rule.arg.ref /* $lab:coverage:on$ */) {\n                    rule.arg = {\n                        schema: rule.arg.schema.describe(),\n                        ref: rule.arg.ref.toString()\n                    };\n                }\n            }\n        }\n\n        if (this._inner.children &&\n            !shallow) {\n\n            description.children = {};\n            for (let i = 0; i < this._inner.children.length; ++i) {\n                const child = this._inner.children[i];\n                description.children[child.key] = child.schema.describe();\n            }\n        }\n\n        if (this._inner.dependencies.length) {\n            description.dependencies = Hoek.clone(this._inner.dependencies);\n        }\n\n        if (this._inner.patterns.length) {\n            description.patterns = [];\n\n            for (let i = 0; i < this._inner.patterns.length; ++i) {\n                const pattern = this._inner.patterns[i];\n                if (pattern.regex) {\n                    description.patterns.push({ regex: pattern.regex.toString(), rule: pattern.rule.describe() });\n                }\n                else {\n                    description.patterns.push({ schema: pattern.schema.describe(), rule: pattern.rule.describe() });\n                }\n            }\n        }\n\n        if (this._inner.renames.length > 0) {\n            description.renames = Hoek.clone(this._inner.renames);\n        }\n\n        return description;\n    }\n\n    assert(ref, schema, message) {\n\n        ref = Cast.ref(ref);\n        Hoek.assert(ref.isContext || ref.depth > 1, 'Cannot use assertions for root level references - use direct key rules instead');\n        message = message || 'pass the assertion test';\n\n        try {\n            schema = Cast.schema(this._currentJoi, schema);\n        }\n        catch (castErr) {\n            if (castErr.hasOwnProperty('path')) {\n                castErr.message = castErr.message + '(' + castErr.path + ')';\n            }\n\n            throw castErr;\n        }\n\n        const key = ref.path[ref.path.length - 1];\n        const path = ref.path.join('.');\n\n        return this._test('assert', { schema, ref }, function (value, state, options) {\n\n            const result = schema._validate(ref(value), null, options, value);\n            if (!result.errors) {\n                return value;\n            }\n\n            const localState = Hoek.merge({}, state);\n            localState.key = key;\n            localState.path = ref.path;\n            return this.createError('object.assert', { ref: path, message }, localState, options);\n        });\n    }\n\n    type(constructor, name = constructor.name) {\n\n        Hoek.assert(typeof constructor === 'function', 'type must be a constructor function');\n        const typeData = {\n            name,\n            ctor: constructor\n        };\n\n        return this._test('type', typeData, function (value, state, options) {\n\n            if (value instanceof constructor) {\n                return value;\n            }\n\n            return this.createError('object.type', { type: typeData.name }, state, options);\n        });\n    }\n};\n\ninternals.safeParse = function (value) {\n\n    try {\n        return JSON.parse(value);\n    }\n    catch (parseErr) {}\n\n    return value;\n};\n\n\ninternals.renameDefaults = {\n    alias: false,                   // Keep old value in place\n    multiple: false,                // Allow renaming multiple keys into the same target\n    override: false                 // Overrides an existing key\n};\n\n\ninternals.groupChildren = function (children) {\n\n    children.sort();\n\n    const grouped = {};\n\n    for (let i = 0; i < children.length; ++i) {\n        const child = children[i];\n        Hoek.assert(typeof child === 'string', 'children must be strings');\n        const group = child.split('.')[0];\n        const childGroup = grouped[group] = (grouped[group] || []);\n        childGroup.push(child.substring(group.length + 1));\n    }\n\n    return grouped;\n};\n\n\ninternals.keysToLabels = function (schema, keys) {\n\n    const children = schema._inner.children;\n\n    if (!children) {\n        return keys;\n    }\n\n    const findLabel = function (key) {\n\n        const matchingChild = children.find((child) => child.key === key);\n        return matchingChild ? matchingChild.schema._getLabel(key) : key;\n    };\n\n    if (Array.isArray(keys)) {\n        return keys.map(findLabel);\n    }\n\n    return findLabel(keys);\n};\n\n\ninternals.with = function (value, peers, parent, state, options) {\n\n    if (value === undefined) {\n        return value;\n    }\n\n    for (let i = 0; i < peers.length; ++i) {\n        const peer = peers[i];\n        if (!Object.prototype.hasOwnProperty.call(parent, peer) ||\n            parent[peer] === undefined) {\n\n            return this.createError('object.with', {\n                main: state.key,\n                mainWithLabel: internals.keysToLabels(this, state.key),\n                peer,\n                peerWithLabel: internals.keysToLabels(this, peer)\n            }, state, options);\n        }\n    }\n\n    return value;\n};\n\n\ninternals.without = function (value, peers, parent, state, options) {\n\n    if (value === undefined) {\n        return value;\n    }\n\n    for (let i = 0; i < peers.length; ++i) {\n        const peer = peers[i];\n        if (Object.prototype.hasOwnProperty.call(parent, peer) &&\n            parent[peer] !== undefined) {\n\n            return this.createError('object.without', {\n                main: state.key,\n                mainWithLabel: internals.keysToLabels(this, state.key),\n                peer,\n                peerWithLabel: internals.keysToLabels(this, peer)\n            }, state, options);\n        }\n    }\n\n    return value;\n};\n\n\ninternals.xor = function (value, peers, parent, state, options) {\n\n    const present = [];\n    for (let i = 0; i < peers.length; ++i) {\n        const peer = peers[i];\n        if (Object.prototype.hasOwnProperty.call(parent, peer) &&\n            parent[peer] !== undefined) {\n\n            present.push(peer);\n        }\n    }\n\n    if (present.length === 1) {\n        return value;\n    }\n\n    const context = { peers, peersWithLabels: internals.keysToLabels(this, peers) };\n\n    if (present.length === 0) {\n        return this.createError('object.missing', context, state, options);\n    }\n\n    return this.createError('object.xor', context, state, options);\n};\n\n\ninternals.or = function (value, peers, parent, state, options) {\n\n    for (let i = 0; i < peers.length; ++i) {\n        const peer = peers[i];\n        if (Object.prototype.hasOwnProperty.call(parent, peer) &&\n            parent[peer] !== undefined) {\n            return value;\n        }\n    }\n\n    return this.createError('object.missing', {\n        peers,\n        peersWithLabels: internals.keysToLabels(this, peers)\n    }, state, options);\n};\n\n\ninternals.and = function (value, peers, parent, state, options) {\n\n    const missing = [];\n    const present = [];\n    const count = peers.length;\n    for (let i = 0; i < count; ++i) {\n        const peer = peers[i];\n        if (!Object.prototype.hasOwnProperty.call(parent, peer) ||\n            parent[peer] === undefined) {\n\n            missing.push(peer);\n        }\n        else {\n            present.push(peer);\n        }\n    }\n\n    const aon = (missing.length === count || present.length === count);\n\n    if (!aon) {\n\n        return this.createError('object.and', {\n            present,\n            presentWithLabels: internals.keysToLabels(this, present),\n            missing,\n            missingWithLabels: internals.keysToLabels(this, missing)\n        }, state, options);\n    }\n};\n\n\ninternals.nand = function (value, peers, parent, state, options) {\n\n    const present = [];\n    for (let i = 0; i < peers.length; ++i) {\n        const peer = peers[i];\n        if (Object.prototype.hasOwnProperty.call(parent, peer) &&\n            parent[peer] !== undefined) {\n\n            present.push(peer);\n        }\n    }\n\n    const values = Hoek.clone(peers);\n    const main = values.splice(0, 1)[0];\n    const allPresent = (present.length === peers.length);\n    return allPresent ? this.createError('object.nand', {\n        main,\n        mainWithLabel: internals.keysToLabels(this, main),\n        peers: values,\n        peersWithLabels: internals.keysToLabels(this, values)\n    }, state, options) : null;\n};\n\n\nmodule.exports = new internals.Object();\n","'use strict';\n\n// Load modules\n\nconst Net = require('net');\nconst Hoek = require('hoek');\nlet Isemail;                            // Loaded on demand\nconst Any = require('../any');\nconst Ref = require('../../ref');\nconst JoiDate = require('../date');\nconst Uri = require('./uri');\nconst Ip = require('./ip');\n\n// Declare internals\n\nconst internals = {\n    uriRegex: Uri.createUriRegex(),\n    ipRegex: Ip.createIpRegex(['ipv4', 'ipv6', 'ipvfuture'], 'optional'),\n    guidBrackets: {\n        '{': '}', '[': ']', '(': ')', '': ''\n    },\n    guidVersions: {\n        uuidv1: '1',\n        uuidv2: '2',\n        uuidv3: '3',\n        uuidv4: '4',\n        uuidv5: '5'\n    },\n    cidrPresences: ['required', 'optional', 'forbidden'],\n    normalizationForms: ['NFC', 'NFD', 'NFKC', 'NFKD']\n};\n\ninternals.String = class extends Any {\n\n    constructor() {\n\n        super();\n        this._type = 'string';\n        this._invalids.add('');\n    }\n\n    _base(value, state, options) {\n\n        if (typeof value === 'string' &&\n            options.convert) {\n\n            if (this._flags.normalize) {\n                value = value.normalize(this._flags.normalize);\n            }\n\n            if (this._flags.case) {\n                value = (this._flags.case === 'upper' ? value.toLocaleUpperCase() : value.toLocaleLowerCase());\n            }\n\n            if (this._flags.trim) {\n                value = value.trim();\n            }\n\n            if (this._inner.replacements) {\n\n                for (let i = 0; i < this._inner.replacements.length; ++i) {\n                    const replacement = this._inner.replacements[i];\n                    value = value.replace(replacement.pattern, replacement.replacement);\n                }\n            }\n\n            if (this._flags.truncate) {\n                for (let i = 0; i < this._tests.length; ++i) {\n                    const test = this._tests[i];\n                    if (test.name === 'max') {\n                        value = value.slice(0, test.arg);\n                        break;\n                    }\n                }\n            }\n\n            if (this._flags.byteAligned && value.length % 2 !== 0) {\n                value = `0${value}`;\n            }\n        }\n\n        return {\n            value,\n            errors: (typeof value === 'string') ? null : this.createError('string.base', { value }, state, options)\n        };\n    }\n\n    insensitive() {\n\n        if (this._flags.insensitive) {\n            return this;\n        }\n\n        const obj = this.clone();\n        obj._flags.insensitive = true;\n        return obj;\n    }\n\n    creditCard() {\n\n        return this._test('creditCard', undefined, function (value, state, options) {\n\n            let i = value.length;\n            let sum = 0;\n            let mul = 1;\n\n            while (i--) {\n                const char = value.charAt(i) * mul;\n                sum = sum + (char - (char > 9) * 9);\n                mul = mul ^ 3;\n            }\n\n            const check = (sum % 10 === 0) && (sum > 0);\n            return check ? value : this.createError('string.creditCard', { value }, state, options);\n        });\n    }\n\n    regex(pattern, patternOptions) {\n\n        Hoek.assert(pattern instanceof RegExp, 'pattern must be a RegExp');\n\n        const patternObject = {\n            pattern: new RegExp(pattern.source, pattern.ignoreCase ? 'i' : undefined)         // Future version should break this and forbid unsupported regex flags\n        };\n\n        if (typeof patternOptions === 'string') {\n            patternObject.name = patternOptions;\n        }\n        else if (typeof patternOptions === 'object') {\n            patternObject.invert = !!patternOptions.invert;\n\n            if (patternOptions.name) {\n                patternObject.name = patternOptions.name;\n            }\n        }\n\n        const errorCode = ['string.regex', patternObject.invert ? '.invert' : '', patternObject.name ? '.name' : '.base'].join('');\n\n        return this._test('regex', patternObject, function (value, state, options) {\n\n            const patternMatch = patternObject.pattern.test(value);\n\n            if (patternMatch ^ patternObject.invert) {\n                return value;\n            }\n\n            return this.createError(errorCode, { name: patternObject.name, pattern: patternObject.pattern, value }, state, options);\n        });\n    }\n\n    alphanum() {\n\n        return this._test('alphanum', undefined, function (value, state, options) {\n\n            if (/^[a-zA-Z0-9]+$/.test(value)) {\n                return value;\n            }\n\n            return this.createError('string.alphanum', { value }, state, options);\n        });\n    }\n\n    token() {\n\n        return this._test('token', undefined, function (value, state, options) {\n\n            if (/^\\w+$/.test(value)) {\n                return value;\n            }\n\n            return this.createError('string.token', { value }, state, options);\n        });\n    }\n\n    email(isEmailOptions) {\n\n        if (isEmailOptions) {\n            Hoek.assert(typeof isEmailOptions === 'object', 'email options must be an object');\n            Hoek.assert(typeof isEmailOptions.checkDNS === 'undefined', 'checkDNS option is not supported');\n            Hoek.assert(typeof isEmailOptions.tldWhitelist === 'undefined' ||\n                typeof isEmailOptions.tldWhitelist === 'object', 'tldWhitelist must be an array or object');\n            Hoek.assert(\n                typeof isEmailOptions.minDomainAtoms === 'undefined' ||\n                Number.isSafeInteger(isEmailOptions.minDomainAtoms) &&\n                isEmailOptions.minDomainAtoms > 0,\n                'minDomainAtoms must be a positive integer'\n            );\n            Hoek.assert(\n                typeof isEmailOptions.errorLevel === 'undefined' ||\n                typeof isEmailOptions.errorLevel === 'boolean' ||\n                (\n                    Number.isSafeInteger(isEmailOptions.errorLevel) &&\n                    isEmailOptions.errorLevel >= 0\n                ),\n                'errorLevel must be a non-negative integer or boolean'\n            );\n        }\n\n        return this._test('email', isEmailOptions, function (value, state, options) {\n\n            Isemail = Isemail || require('isemail');\n\n            try {\n                const result = Isemail.validate(value, isEmailOptions);\n                if (result === true || result === 0) {\n                    return value;\n                }\n            }\n            catch (e) { }\n\n            return this.createError('string.email', { value }, state, options);\n        });\n    }\n\n    ip(ipOptions = {}) {\n\n        let regex = internals.ipRegex;\n        Hoek.assert(typeof ipOptions === 'object', 'options must be an object');\n\n        if (ipOptions.cidr) {\n            Hoek.assert(typeof ipOptions.cidr === 'string', 'cidr must be a string');\n            ipOptions.cidr = ipOptions.cidr.toLowerCase();\n\n            Hoek.assert(Hoek.contain(internals.cidrPresences, ipOptions.cidr), 'cidr must be one of ' + internals.cidrPresences.join(', '));\n\n            // If we only received a `cidr` setting, create a regex for it. But we don't need to create one if `cidr` is \"optional\" since that is the default\n            if (!ipOptions.version && ipOptions.cidr !== 'optional') {\n                regex = Ip.createIpRegex(['ipv4', 'ipv6', 'ipvfuture'], ipOptions.cidr);\n            }\n        }\n        else {\n\n            // Set our default cidr strategy\n            ipOptions.cidr = 'optional';\n        }\n\n        let versions;\n        if (ipOptions.version) {\n            if (!Array.isArray(ipOptions.version)) {\n                ipOptions.version = [ipOptions.version];\n            }\n\n            Hoek.assert(ipOptions.version.length >= 1, 'version must have at least 1 version specified');\n\n            versions = [];\n            for (let i = 0; i < ipOptions.version.length; ++i) {\n                let version = ipOptions.version[i];\n                Hoek.assert(typeof version === 'string', 'version at position ' + i + ' must be a string');\n                version = version.toLowerCase();\n                Hoek.assert(Ip.versions[version], 'version at position ' + i + ' must be one of ' + Object.keys(Ip.versions).join(', '));\n                versions.push(version);\n            }\n\n            // Make sure we have a set of versions\n            versions = Hoek.unique(versions);\n\n            regex = Ip.createIpRegex(versions, ipOptions.cidr);\n        }\n\n        return this._test('ip', ipOptions, function (value, state, options) {\n\n            if (regex.test(value)) {\n                return value;\n            }\n\n            if (versions) {\n                return this.createError('string.ipVersion', { value, cidr: ipOptions.cidr, version: versions }, state, options);\n            }\n\n            return this.createError('string.ip', { value, cidr: ipOptions.cidr }, state, options);\n        });\n    }\n\n    uri(uriOptions) {\n\n        let customScheme = '';\n        let allowRelative = false;\n        let relativeOnly = false;\n        let allowQuerySquareBrackets = false;\n        let regex = internals.uriRegex;\n\n        if (uriOptions) {\n            Hoek.assert(typeof uriOptions === 'object', 'options must be an object');\n\n            const unknownOptions = Object.keys(uriOptions).filter((key) => !['scheme', 'allowRelative', 'relativeOnly', 'allowQuerySquareBrackets'].includes(key));\n            Hoek.assert(unknownOptions.length === 0, `options contain unknown keys: ${unknownOptions}`);\n\n            if (uriOptions.scheme) {\n                Hoek.assert(uriOptions.scheme instanceof RegExp || typeof uriOptions.scheme === 'string' || Array.isArray(uriOptions.scheme), 'scheme must be a RegExp, String, or Array');\n\n                if (!Array.isArray(uriOptions.scheme)) {\n                    uriOptions.scheme = [uriOptions.scheme];\n                }\n\n                Hoek.assert(uriOptions.scheme.length >= 1, 'scheme must have at least 1 scheme specified');\n\n                // Flatten the array into a string to be used to match the schemes.\n                for (let i = 0; i < uriOptions.scheme.length; ++i) {\n                    const scheme = uriOptions.scheme[i];\n                    Hoek.assert(scheme instanceof RegExp || typeof scheme === 'string', 'scheme at position ' + i + ' must be a RegExp or String');\n\n                    // Add OR separators if a value already exists\n                    customScheme = customScheme + (customScheme ? '|' : '');\n\n                    // If someone wants to match HTTP or HTTPS for example then we need to support both RegExp and String so we don't escape their pattern unknowingly.\n                    if (scheme instanceof RegExp) {\n                        customScheme = customScheme + scheme.source;\n                    }\n                    else {\n                        Hoek.assert(/[a-zA-Z][a-zA-Z0-9+-\\.]*/.test(scheme), 'scheme at position ' + i + ' must be a valid scheme');\n                        customScheme = customScheme + Hoek.escapeRegex(scheme);\n                    }\n                }\n            }\n\n            if (uriOptions.allowRelative) {\n                allowRelative = true;\n            }\n\n            if (uriOptions.relativeOnly) {\n                relativeOnly = true;\n            }\n\n            if (uriOptions.allowQuerySquareBrackets) {\n                allowQuerySquareBrackets = true;\n            }\n        }\n\n        if (customScheme || allowRelative || relativeOnly || allowQuerySquareBrackets) {\n            regex = Uri.createUriRegex(customScheme, allowRelative, relativeOnly, allowQuerySquareBrackets);\n        }\n\n        return this._test('uri', uriOptions, function (value, state, options) {\n\n            if (regex.test(value)) {\n                return value;\n            }\n\n            if (relativeOnly) {\n                return this.createError('string.uriRelativeOnly', { value }, state, options);\n            }\n\n            if (customScheme) {\n                return this.createError('string.uriCustomScheme', { scheme: customScheme, value }, state, options);\n            }\n\n            return this.createError('string.uri', { value }, state, options);\n        });\n    }\n\n    isoDate() {\n\n        return this._test('isoDate', undefined, function (value, state, options) {\n\n            if (JoiDate._isIsoDate(value)) {\n                if (!options.convert) {\n                    return value;\n                }\n\n                const d = new Date(value);\n                if (!isNaN(d.getTime())) {\n                    return d.toISOString();\n                }\n            }\n\n            return this.createError('string.isoDate', { value }, state, options);\n        });\n    }\n\n    guid(guidOptions) {\n\n        let versionNumbers = '';\n\n        if (guidOptions && guidOptions.version) {\n            if (!Array.isArray(guidOptions.version)) {\n                guidOptions.version = [guidOptions.version];\n            }\n\n            Hoek.assert(guidOptions.version.length >= 1, 'version must have at least 1 valid version specified');\n            const versions = new Set();\n\n            for (let i = 0; i < guidOptions.version.length; ++i) {\n                let version = guidOptions.version[i];\n                Hoek.assert(typeof version === 'string', 'version at position ' + i + ' must be a string');\n                version = version.toLowerCase();\n                const versionNumber = internals.guidVersions[version];\n                Hoek.assert(versionNumber, 'version at position ' + i + ' must be one of ' + Object.keys(internals.guidVersions).join(', '));\n                Hoek.assert(!(versions.has(versionNumber)), 'version at position ' + i + ' must not be a duplicate.');\n\n                versionNumbers += versionNumber;\n                versions.add(versionNumber);\n            }\n        }\n\n        const guidRegex = new RegExp(`^([\\\\[{\\\\(]?)[0-9A-F]{8}([:-]?)[0-9A-F]{4}\\\\2?[${versionNumbers || '0-9A-F'}][0-9A-F]{3}\\\\2?[${versionNumbers ? '89AB' : '0-9A-F'}][0-9A-F]{3}\\\\2?[0-9A-F]{12}([\\\\]}\\\\)]?)$`, 'i');\n\n        return this._test('guid', guidOptions, function (value, state, options) {\n\n            const results = guidRegex.exec(value);\n\n            if (!results) {\n                return this.createError('string.guid', { value }, state, options);\n            }\n\n            // Matching braces\n            if (internals.guidBrackets[results[1]] !== results[results.length - 1]) {\n                return this.createError('string.guid', { value }, state, options);\n            }\n\n            return value;\n        });\n    }\n\n    hex(hexOptions = {}) {\n\n        Hoek.assert(typeof hexOptions === 'object', 'hex options must be an object');\n        Hoek.assert(typeof hexOptions.byteAligned === 'undefined' || typeof hexOptions.byteAligned === 'boolean',\n            'byteAligned must be boolean');\n\n        const byteAligned = hexOptions.byteAligned === true;\n        const regex = /^[a-f0-9]+$/i;\n\n        const obj = this._test('hex', regex, function (value, state, options) {\n\n            if (regex.test(value)) {\n                if (byteAligned && value.length % 2 !== 0) {\n                    return this.createError('string.hexAlign', { value }, state, options);\n                }\n                return value;\n            }\n\n            return this.createError('string.hex', { value }, state, options);\n        });\n\n        if (byteAligned) {\n            obj._flags.byteAligned = true;\n        }\n\n        return obj;\n    }\n\n    base64(base64Options = {}) {\n\n        // Validation.\n        Hoek.assert(typeof base64Options === 'object', 'base64 options must be an object');\n        Hoek.assert(typeof base64Options.paddingRequired === 'undefined' || typeof base64Options.paddingRequired === 'boolean',\n            'paddingRequired must be boolean');\n\n        // Determine if padding is required.\n        const paddingRequired = base64Options.paddingRequired === false ?\n            base64Options.paddingRequired\n            : base64Options.paddingRequired || true;\n\n        // Set validation based on preference.\n        const regex = paddingRequired ?\n            // Padding is required.\n            /^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/\n            // Padding is optional.\n            : /^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}(==)?|[A-Za-z0-9+\\/]{3}=?)?$/;\n\n        return this._test('base64', regex, function (value, state, options) {\n\n            if (regex.test(value)) {\n                return value;\n            }\n\n            return this.createError('string.base64', { value }, state, options);\n        });\n    }\n\n    dataUri(dataUriOptions = {}) {\n\n        const regex = /^data:[\\w\\/\\+]+;((charset=[\\w-]+|base64),)?(.*)$/;\n\n        // Determine if padding is required.\n        const paddingRequired = dataUriOptions.paddingRequired === false ?\n            dataUriOptions.paddingRequired\n            : dataUriOptions.paddingRequired || true;\n\n        const base64regex =  paddingRequired ?\n            /^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/\n            : /^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}(==)?|[A-Za-z0-9+\\/]{3}=?)?$/;\n\n        return this._test('dataUri', regex, function (value, state, options) {\n\n            const matches = value.match(regex);\n\n            if (matches) {\n                if (!matches[2]) {\n                    return value;\n                }\n\n                if (matches[2] !== 'base64') {\n                    return value;\n                }\n\n                if (base64regex.test(matches[3])) {\n                    return value;\n                }\n            }\n\n            return this.createError('string.dataUri', { value }, state, options);\n        });\n    }\n\n    hostname() {\n\n        const regex = /^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$/;\n\n        return this._test('hostname', undefined, function (value, state, options) {\n\n            if ((value.length <= 255 && regex.test(value)) ||\n                Net.isIPv6(value)) {\n\n                return value;\n            }\n\n            return this.createError('string.hostname', { value }, state, options);\n        });\n    }\n\n    normalize(form = 'NFC') {\n\n        Hoek.assert(Hoek.contain(internals.normalizationForms, form), 'normalization form must be one of ' + internals.normalizationForms.join(', '));\n\n        const obj = this._test('normalize', form, function (value, state, options) {\n\n            if (options.convert ||\n                value === value.normalize(form)) {\n\n                return value;\n            }\n\n            return this.createError('string.normalize', { value, form }, state, options);\n        });\n\n        obj._flags.normalize = form;\n        return obj;\n    }\n\n    lowercase() {\n\n        const obj = this._test('lowercase', undefined, function (value, state, options) {\n\n            if (options.convert ||\n                value === value.toLocaleLowerCase()) {\n\n                return value;\n            }\n\n            return this.createError('string.lowercase', { value }, state, options);\n        });\n\n        obj._flags.case = 'lower';\n        return obj;\n    }\n\n    uppercase() {\n\n        const obj = this._test('uppercase', undefined, function (value, state, options) {\n\n            if (options.convert ||\n                value === value.toLocaleUpperCase()) {\n\n                return value;\n            }\n\n            return this.createError('string.uppercase', { value }, state, options);\n        });\n\n        obj._flags.case = 'upper';\n        return obj;\n    }\n\n    trim(enabled = true) {\n\n        Hoek.assert(typeof enabled === 'boolean', 'option must be a boolean');\n\n        if ((this._flags.trim && enabled) || (!this._flags.trim && !enabled)) {\n            return this;\n        }\n\n        let obj;\n        if (enabled) {\n            obj = this._test('trim', undefined, function (value, state, options) {\n\n                if (options.convert ||\n                    value === value.trim()) {\n\n                    return value;\n                }\n\n                return this.createError('string.trim', { value }, state, options);\n            });\n        }\n        else {\n            obj = this.clone();\n            obj._tests = obj._tests.filter((test) => test.name !== 'trim');\n        }\n\n        obj._flags.trim = enabled;\n        return obj;\n    }\n\n    replace(pattern, replacement) {\n\n        if (typeof pattern === 'string') {\n            pattern = new RegExp(Hoek.escapeRegex(pattern), 'g');\n        }\n\n        Hoek.assert(pattern instanceof RegExp, 'pattern must be a RegExp');\n        Hoek.assert(typeof replacement === 'string', 'replacement must be a String');\n\n        // This can not be considere a test like trim, we can't \"reject\"\n        // anything from this rule, so just clone the current object\n        const obj = this.clone();\n\n        if (!obj._inner.replacements) {\n            obj._inner.replacements = [];\n        }\n\n        obj._inner.replacements.push({\n            pattern,\n            replacement\n        });\n\n        return obj;\n    }\n\n    truncate(enabled) {\n\n        const value = enabled === undefined ? true : !!enabled;\n\n        if (this._flags.truncate === value) {\n            return this;\n        }\n\n        const obj = this.clone();\n        obj._flags.truncate = value;\n        return obj;\n    }\n\n};\n\ninternals.compare = function (type, compare) {\n\n    return function (limit, encoding) {\n\n        const isRef = Ref.isRef(limit);\n\n        Hoek.assert((Number.isSafeInteger(limit) && limit >= 0) || isRef, 'limit must be a positive integer or reference');\n        Hoek.assert(!encoding || Buffer.isEncoding(encoding), 'Invalid encoding:', encoding);\n\n        return this._test(type, limit, function (value, state, options) {\n\n            let compareTo;\n            if (isRef) {\n                compareTo = limit(state.reference || state.parent, options);\n\n                if (!Number.isSafeInteger(compareTo)) {\n                    return this.createError('string.ref', { ref: limit.key }, state, options);\n                }\n            }\n            else {\n                compareTo = limit;\n            }\n\n            if (compare(value, compareTo, encoding)) {\n                return value;\n            }\n\n            return this.createError('string.' + type, { limit: compareTo, value, encoding }, state, options);\n        });\n    };\n};\n\n\ninternals.String.prototype.min = internals.compare('min', (value, limit, encoding) => {\n\n    const length = encoding ? Buffer.byteLength(value, encoding) : value.length;\n    return length >= limit;\n});\n\n\ninternals.String.prototype.max = internals.compare('max', (value, limit, encoding) => {\n\n    const length = encoding ? Buffer.byteLength(value, encoding) : value.length;\n    return length <= limit;\n});\n\n\ninternals.String.prototype.length = internals.compare('length', (value, limit, encoding) => {\n\n    const length = encoding ? Buffer.byteLength(value, encoding) : value.length;\n    return length === limit;\n});\n\n// Aliases\n\ninternals.String.prototype.uuid = internals.String.prototype.guid;\n\nmodule.exports = new internals.String();\n","'use strict';\n\n// Load modules\n\nconst RFC3986 = require('./rfc3986');\n\n\n// Declare internals\n\nconst internals = {\n    Ip: {\n        cidrs: {\n            ipv4: {\n                required: '\\\\/(?:' + RFC3986.ipv4Cidr + ')',\n                optional: '(?:\\\\/(?:' + RFC3986.ipv4Cidr + '))?',\n                forbidden: ''\n            },\n            ipv6: {\n                required: '\\\\/' + RFC3986.ipv6Cidr,\n                optional: '(?:\\\\/' + RFC3986.ipv6Cidr + ')?',\n                forbidden: ''\n            },\n            ipvfuture: {\n                required: '\\\\/' + RFC3986.ipv6Cidr,\n                optional: '(?:\\\\/' + RFC3986.ipv6Cidr + ')?',\n                forbidden: ''\n            }\n        },\n        versions: {\n            ipv4: RFC3986.IPv4address,\n            ipv6: RFC3986.IPv6address,\n            ipvfuture: RFC3986.IPvFuture\n        }\n    }\n};\n\n\ninternals.Ip.createIpRegex = function (versions, cidr) {\n\n    let regex;\n    for (let i = 0; i < versions.length; ++i) {\n        const version = versions[i];\n        if (!regex) {\n            regex = '^(?:' + internals.Ip.versions[version] + internals.Ip.cidrs[version][cidr];\n        }\n        else {\n            regex += '|' + internals.Ip.versions[version] + internals.Ip.cidrs[version][cidr];\n        }\n    }\n\n    return new RegExp(regex + ')$');\n};\n\nmodule.exports = internals.Ip;\n","'use strict';\n\n// Load modules\n\n\n// Delcare internals\n\nconst internals = {\n    rfc3986: {}\n};\n\n\ninternals.generate = function () {\n\n    /**\n     * elements separated by forward slash (\"/\") are alternatives.\n     */\n    const or = '|';\n\n    /**\n     * Rule to support zero-padded addresses.\n     */\n    const zeroPad = '0?';\n\n    /**\n     * DIGIT = %x30-39 ; 0-9\n     */\n    const digit = '0-9';\n    const digitOnly = '[' + digit + ']';\n\n    /**\n     * ALPHA = %x41-5A / %x61-7A   ; A-Z / a-z\n     */\n    const alpha = 'a-zA-Z';\n    const alphaOnly = '[' + alpha + ']';\n\n    /**\n     * IPv4\n     * cidr       = DIGIT                ; 0-9\n     *            / %x31-32 DIGIT         ; 10-29\n     *            / \"3\" %x30-32           ; 30-32\n     */\n    internals.rfc3986.ipv4Cidr = digitOnly + or + '[1-2]' + digitOnly + or + '3' + '[0-2]';\n\n    /**\n     * IPv6\n     * cidr       = DIGIT                 ; 0-9\n     *            / %x31-39 DIGIT         ; 10-99\n     *            / \"1\" %x0-1 DIGIT       ; 100-119\n     *            / \"12\" %x0-8            ; 120-128\n     */\n    internals.rfc3986.ipv6Cidr = '(?:' + zeroPad + zeroPad + digitOnly + or + zeroPad + '[1-9]' + digitOnly + or + '1' + '[01]' + digitOnly + or + '12[0-8])';\n\n    /**\n     * HEXDIG = DIGIT / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\"\n     */\n    const hexDigit = digit + 'A-Fa-f';\n    const hexDigitOnly = '[' + hexDigit + ']';\n\n    /**\n     * unreserved = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n     */\n    const unreserved = alpha + digit + '-\\\\._~';\n\n    /**\n     * sub-delims = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n     */\n    const subDelims = '!\\\\$&\\'\\\\(\\\\)\\\\*\\\\+,;=';\n\n    /**\n     * pct-encoded = \"%\" HEXDIG HEXDIG\n     */\n    const pctEncoded = '%' + hexDigit;\n\n    /**\n     * pchar = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n     */\n    const pchar = unreserved + pctEncoded + subDelims + ':@';\n    const pcharOnly = '[' + pchar + ']';\n\n    /**\n     * squareBrackets example: []\n     */\n    const squareBrackets = '\\\\[\\\\]';\n\n    /**\n     * dec-octet   = DIGIT                 ; 0-9\n     *            / %x31-39 DIGIT         ; 10-99\n     *            / \"1\" 2DIGIT            ; 100-199\n     *            / \"2\" %x30-34 DIGIT     ; 200-249\n     *            / \"25\" %x30-35          ; 250-255\n     */\n    const decOctect = '(?:' + zeroPad + zeroPad + digitOnly + or + zeroPad + '[1-9]' + digitOnly + or + '1' + digitOnly + digitOnly + or + '2' + '[0-4]' + digitOnly + or + '25' + '[0-5])';\n\n    /**\n     * IPv4address = dec-octet \".\" dec-octet \".\" dec-octet \".\" dec-octet\n     */\n    internals.rfc3986.IPv4address = '(?:' + decOctect + '\\\\.){3}' + decOctect;\n\n    /**\n     * h16 = 1*4HEXDIG ; 16 bits of address represented in hexadecimal\n     * ls32 = ( h16 \":\" h16 ) / IPv4address ; least-significant 32 bits of address\n     * IPv6address =                            6( h16 \":\" ) ls32\n     *             /                       \"::\" 5( h16 \":\" ) ls32\n     *             / [               h16 ] \"::\" 4( h16 \":\" ) ls32\n     *             / [ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n     *             / [ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n     *             / [ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n     *             / [ *4( h16 \":\" ) h16 ] \"::\"              ls32\n     *             / [ *5( h16 \":\" ) h16 ] \"::\"              h16\n     *             / [ *6( h16 \":\" ) h16 ] \"::\"\n     */\n    const h16 = hexDigitOnly + '{1,4}';\n    const ls32 = '(?:' + h16 + ':' + h16 + '|' + internals.rfc3986.IPv4address + ')';\n    const IPv6SixHex = '(?:' + h16 + ':){6}' + ls32;\n    const IPv6FiveHex = '::(?:' + h16 + ':){5}' + ls32;\n    const IPv6FourHex = '(?:' + h16 + ')?::(?:' + h16 + ':){4}' + ls32;\n    const IPv6ThreeHex = '(?:(?:' + h16 + ':){0,1}' + h16 + ')?::(?:' + h16 + ':){3}' + ls32;\n    const IPv6TwoHex = '(?:(?:' + h16 + ':){0,2}' + h16 + ')?::(?:' + h16 + ':){2}' + ls32;\n    const IPv6OneHex = '(?:(?:' + h16 + ':){0,3}' + h16 + ')?::' + h16 + ':' + ls32;\n    const IPv6NoneHex = '(?:(?:' + h16 + ':){0,4}' + h16 + ')?::' + ls32;\n    const IPv6NoneHex2 = '(?:(?:' + h16 + ':){0,5}' + h16 + ')?::' + h16;\n    const IPv6NoneHex3 = '(?:(?:' + h16 + ':){0,6}' + h16 + ')?::';\n    internals.rfc3986.IPv6address = '(?:' + IPv6SixHex + or + IPv6FiveHex + or + IPv6FourHex + or + IPv6ThreeHex + or + IPv6TwoHex + or + IPv6OneHex + or + IPv6NoneHex + or + IPv6NoneHex2 + or + IPv6NoneHex3 + ')';\n\n    /**\n     * IPvFuture = \"v\" 1*HEXDIG \".\" 1*( unreserved / sub-delims / \":\" )\n     */\n    internals.rfc3986.IPvFuture = 'v' + hexDigitOnly + '+\\\\.[' + unreserved + subDelims + ':]+';\n\n    /**\n     * scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n     */\n    internals.rfc3986.scheme = alphaOnly + '[' + alpha + digit + '+-\\\\.]*';\n\n    /**\n     * userinfo = *( unreserved / pct-encoded / sub-delims / \":\" )\n     */\n    const userinfo = '[' + unreserved + pctEncoded + subDelims + ':]*';\n\n    /**\n     * IP-literal = \"[\" ( IPv6address / IPvFuture  ) \"]\"\n     */\n    const IPLiteral = '\\\\[(?:' + internals.rfc3986.IPv6address + or + internals.rfc3986.IPvFuture + ')\\\\]';\n\n    /**\n     * reg-name = *( unreserved / pct-encoded / sub-delims )\n     */\n    const regName = '[' + unreserved + pctEncoded + subDelims + ']{0,255}';\n\n    /**\n     * host = IP-literal / IPv4address / reg-name\n     */\n    const host = '(?:' + IPLiteral + or + internals.rfc3986.IPv4address + or + regName + ')';\n\n    /**\n     * port = *DIGIT\n     */\n    const port = digitOnly + '*';\n\n    /**\n     * authority   = [ userinfo \"@\" ] host [ \":\" port ]\n     */\n    const authority = '(?:' + userinfo + '@)?' + host + '(?::' + port + ')?';\n\n    /**\n     * segment       = *pchar\n     * segment-nz    = 1*pchar\n     * path          = path-abempty    ; begins with \"/\" or is empty\n     *               / path-absolute   ; begins with \"/\" but not \"//\"\n     *               / path-noscheme   ; begins with a non-colon segment\n     *               / path-rootless   ; begins with a segment\n     *               / path-empty      ; zero characters\n     * path-abempty  = *( \"/\" segment )\n     * path-absolute = \"/\" [ segment-nz *( \"/\" segment ) ]\n     * path-rootless = segment-nz *( \"/\" segment )\n     */\n    const segment = pcharOnly + '*';\n    const segmentNz = pcharOnly + '+';\n    const segmentNzNc = '[' + unreserved + pctEncoded + subDelims + '@' + ']+';\n    const pathEmpty = '';\n    const pathAbEmpty = '(?:\\\\/' + segment + ')*';\n    const pathAbsolute = '\\\\/(?:' + segmentNz + pathAbEmpty + ')?';\n    const pathRootless = segmentNz + pathAbEmpty;\n    const pathNoScheme = segmentNzNc + pathAbEmpty;\n\n    /**\n     * hier-part = \"//\" authority path\n     */\n    internals.rfc3986.hierPart = '(?:' + '(?:\\\\/\\\\/' + authority + pathAbEmpty + ')' + or + pathAbsolute + or + pathRootless + ')';\n\n    /**\n     * relative-part = \"//\" authority path-abempty\n     *                 / path-absolute\n     *                 / path-noscheme\n     *                 / path-empty\n     */\n    internals.rfc3986.relativeRef = '(?:' + '(?:\\\\/\\\\/' + authority + pathAbEmpty  + ')' + or + pathAbsolute + or + pathNoScheme + or + pathEmpty + ')';\n\n    /**\n     * query = *( pchar / \"/\" / \"?\" )\n     */\n    internals.rfc3986.query = '[' + pchar + '\\\\/\\\\?]*(?=#|$)'; //Finish matching either at the fragment part or end of the line.\n\n    /**\n     * query = *( pchar / \"[\" / \"]\" / \"/\" / \"?\" )\n     */\n    internals.rfc3986.queryWithSquareBrackets = '[' + pchar + squareBrackets + '\\\\/\\\\?]*(?=#|$)'; //Finish matching either at the fragment part or end of the line.\n\n    /**\n     * fragment = *( pchar / \"/\" / \"?\" )\n     */\n    internals.rfc3986.fragment = '[' + pchar + '\\\\/\\\\?]*';\n};\n\n\ninternals.generate();\n\nmodule.exports = internals.rfc3986;\n","'use strict';\n\n// Load Modules\n\nconst RFC3986 = require('./rfc3986');\n\n\n// Declare internals\n\nconst internals = {\n    Uri: {\n        createUriRegex: function (optionalScheme, allowRelative, relativeOnly, allowQuerySquareBrackets) {\n\n            let scheme = RFC3986.scheme;\n            let prefix;\n\n            if (relativeOnly) {\n                prefix = '(?:' + RFC3986.relativeRef + ')';\n            }\n            else {\n                // If we were passed a scheme, use it instead of the generic one\n                if (optionalScheme) {\n\n                    // Have to put this in a non-capturing group to handle the OR statements\n                    scheme = '(?:' + optionalScheme + ')';\n                }\n\n                const withScheme = '(?:' + scheme + ':' + RFC3986.hierPart + ')';\n\n                prefix = allowRelative ? '(?:' + withScheme + '|' + RFC3986.relativeRef + ')' : withScheme;\n            }\n\n            /**\n             * URI = scheme \":\" hier-part [ \"?\" query ] [ \"#\" fragment ]\n             *\n             * OR\n             *\n             * relative-ref = relative-part [ \"?\" query ] [ \"#\" fragment ]\n             */\n            return new RegExp('^' + prefix + '(?:\\\\?' + (allowQuerySquareBrackets ? RFC3986.queryWithSquareBrackets : RFC3986.query) + ')?' + '(?:#' + RFC3986.fragment + ')?$');\n        }\n    }\n};\n\n\nmodule.exports = internals.Uri;\n","'use strict';\n\n// Load modules\n\nconst Util = require('util');\n\nconst Any = require('../any');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.Map = class extends Map {\n\n    slice() {\n\n        return new internals.Map(this);\n    }\n\n    toString() {\n\n        return Util.inspect(this);\n    }\n};\n\n\ninternals.Symbol = class extends Any {\n\n    constructor() {\n\n        super();\n        this._type = 'symbol';\n        this._inner.map = new internals.Map();\n    }\n\n    _base(value, state, options) {\n\n        if (options.convert) {\n            const lookup = this._inner.map.get(value);\n            if (lookup) {\n                value = lookup;\n            }\n\n            if (this._flags.allowOnly) {\n                return {\n                    value,\n                    errors: (typeof value === 'symbol') ? null : this.createError('symbol.map', { map: this._inner.map }, state, options)\n                };\n            }\n        }\n\n        return {\n            value,\n            errors: (typeof value === 'symbol') ? null : this.createError('symbol.base', null, state, options)\n        };\n    }\n\n    map(iterable) {\n\n        if (iterable && !iterable[Symbol.iterator] && typeof iterable === 'object') {\n            iterable = Object.entries(iterable);\n        }\n\n        Hoek.assert(iterable && iterable[Symbol.iterator], 'Iterable must be an iterable or object');\n        const obj = this.clone();\n\n        const symbols = [];\n        for (const entry of iterable) {\n            Hoek.assert(entry && entry[Symbol.iterator], 'Entry must be an iterable');\n            const [key, value] = entry;\n\n            Hoek.assert(typeof key !== 'object' && typeof key !== 'function' && typeof key !== 'symbol', 'Key must not be an object, function, or Symbol');\n            Hoek.assert(typeof value === 'symbol', 'Value must be a Symbol');\n            obj._inner.map.set(key, value);\n            symbols.push(value);\n        }\n\n        return obj.valid(...symbols);\n    }\n\n    describe() {\n\n        const description = super.describe();\n        description.map = new Map(this._inner.map);\n        return description;\n    }\n};\n\n\nmodule.exports = new internals.Symbol();\n","'use strict'\n\nmodule.exports = LRUCache\n\n// This will be a proper iterable 'Map' in engines that support it,\n// or a fakey-fake PseudoMap in older versions.\nvar Map = require('pseudomap')\nvar util = require('util')\n\n// A linked list to keep track of recently-used-ness\nvar Yallist = require('yallist')\n\n// use symbols if possible, otherwise just _props\nvar hasSymbol = typeof Symbol === 'function'\nvar makeSymbol\nif (hasSymbol) {\n  makeSymbol = function (key) {\n    return Symbol(key)\n  }\n} else {\n  makeSymbol = function (key) {\n    return '_' + key\n  }\n}\n\nvar MAX = makeSymbol('max')\nvar LENGTH = makeSymbol('length')\nvar LENGTH_CALCULATOR = makeSymbol('lengthCalculator')\nvar ALLOW_STALE = makeSymbol('allowStale')\nvar MAX_AGE = makeSymbol('maxAge')\nvar DISPOSE = makeSymbol('dispose')\nvar NO_DISPOSE_ON_SET = makeSymbol('noDisposeOnSet')\nvar LRU_LIST = makeSymbol('lruList')\nvar CACHE = makeSymbol('cache')\n\nfunction naiveLength () { return 1 }\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nfunction LRUCache (options) {\n  if (!(this instanceof LRUCache)) {\n    return new LRUCache(options)\n  }\n\n  if (typeof options === 'number') {\n    options = { max: options }\n  }\n\n  if (!options) {\n    options = {}\n  }\n\n  var max = this[MAX] = options.max\n  // Kind of weird to have a default max of Infinity, but oh well.\n  if (!max ||\n      !(typeof max === 'number') ||\n      max <= 0) {\n    this[MAX] = Infinity\n  }\n\n  var lc = options.length || naiveLength\n  if (typeof lc !== 'function') {\n    lc = naiveLength\n  }\n  this[LENGTH_CALCULATOR] = lc\n\n  this[ALLOW_STALE] = options.stale || false\n  this[MAX_AGE] = options.maxAge || 0\n  this[DISPOSE] = options.dispose\n  this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n  this.reset()\n}\n\n// resize the cache when the max changes.\nObject.defineProperty(LRUCache.prototype, 'max', {\n  set: function (mL) {\n    if (!mL || !(typeof mL === 'number') || mL <= 0) {\n      mL = Infinity\n    }\n    this[MAX] = mL\n    trim(this)\n  },\n  get: function () {\n    return this[MAX]\n  },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'allowStale', {\n  set: function (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  },\n  get: function () {\n    return this[ALLOW_STALE]\n  },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'maxAge', {\n  set: function (mA) {\n    if (!mA || !(typeof mA === 'number') || mA < 0) {\n      mA = 0\n    }\n    this[MAX_AGE] = mA\n    trim(this)\n  },\n  get: function () {\n    return this[MAX_AGE]\n  },\n  enumerable: true\n})\n\n// resize the cache when the lengthCalculator changes.\nObject.defineProperty(LRUCache.prototype, 'lengthCalculator', {\n  set: function (lC) {\n    if (typeof lC !== 'function') {\n      lC = naiveLength\n    }\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(function (hit) {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      }, this)\n    }\n    trim(this)\n  },\n  get: function () { return this[LENGTH_CALCULATOR] },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'length', {\n  get: function () { return this[LENGTH] },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'itemCount', {\n  get: function () { return this[LRU_LIST].length },\n  enumerable: true\n})\n\nLRUCache.prototype.rforEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this[LRU_LIST].tail; walker !== null;) {\n    var prev = walker.prev\n    forEachStep(this, fn, walker, thisp)\n    walker = prev\n  }\n}\n\nfunction forEachStep (self, fn, node, thisp) {\n  var hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE]) {\n      hit = undefined\n    }\n  }\n  if (hit) {\n    fn.call(thisp, hit.value, hit.key, self)\n  }\n}\n\nLRUCache.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this[LRU_LIST].head; walker !== null;) {\n    var next = walker.next\n    forEachStep(this, fn, walker, thisp)\n    walker = next\n  }\n}\n\nLRUCache.prototype.keys = function () {\n  return this[LRU_LIST].toArray().map(function (k) {\n    return k.key\n  }, this)\n}\n\nLRUCache.prototype.values = function () {\n  return this[LRU_LIST].toArray().map(function (k) {\n    return k.value\n  }, this)\n}\n\nLRUCache.prototype.reset = function () {\n  if (this[DISPOSE] &&\n      this[LRU_LIST] &&\n      this[LRU_LIST].length) {\n    this[LRU_LIST].forEach(function (hit) {\n      this[DISPOSE](hit.key, hit.value)\n    }, this)\n  }\n\n  this[CACHE] = new Map() // hash of items by key\n  this[LRU_LIST] = new Yallist() // list of items in order of use recency\n  this[LENGTH] = 0 // length of items in the list\n}\n\nLRUCache.prototype.dump = function () {\n  return this[LRU_LIST].map(function (hit) {\n    if (!isStale(this, hit)) {\n      return {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }\n    }\n  }, this).toArray().filter(function (h) {\n    return h\n  })\n}\n\nLRUCache.prototype.dumpLru = function () {\n  return this[LRU_LIST]\n}\n\nLRUCache.prototype.inspect = function (n, opts) {\n  var str = 'LRUCache {'\n  var extras = false\n\n  var as = this[ALLOW_STALE]\n  if (as) {\n    str += '\\n  allowStale: true'\n    extras = true\n  }\n\n  var max = this[MAX]\n  if (max && max !== Infinity) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  max: ' + util.inspect(max, opts)\n    extras = true\n  }\n\n  var maxAge = this[MAX_AGE]\n  if (maxAge) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  maxAge: ' + util.inspect(maxAge, opts)\n    extras = true\n  }\n\n  var lc = this[LENGTH_CALCULATOR]\n  if (lc && lc !== naiveLength) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  length: ' + util.inspect(this[LENGTH], opts)\n    extras = true\n  }\n\n  var didFirst = false\n  this[LRU_LIST].forEach(function (item) {\n    if (didFirst) {\n      str += ',\\n  '\n    } else {\n      if (extras) {\n        str += ',\\n'\n      }\n      didFirst = true\n      str += '\\n  '\n    }\n    var key = util.inspect(item.key).split('\\n').join('\\n  ')\n    var val = { value: item.value }\n    if (item.maxAge !== maxAge) {\n      val.maxAge = item.maxAge\n    }\n    if (lc !== naiveLength) {\n      val.length = item.length\n    }\n    if (isStale(this, item)) {\n      val.stale = true\n    }\n\n    val = util.inspect(val, opts).split('\\n').join('\\n  ')\n    str += key + ' => ' + val\n  })\n\n  if (didFirst || extras) {\n    str += '\\n'\n  }\n  str += '}'\n\n  return str\n}\n\nLRUCache.prototype.set = function (key, value, maxAge) {\n  maxAge = maxAge || this[MAX_AGE]\n\n  var now = maxAge ? Date.now() : 0\n  var len = this[LENGTH_CALCULATOR](value, key)\n\n  if (this[CACHE].has(key)) {\n    if (len > this[MAX]) {\n      del(this, this[CACHE].get(key))\n      return false\n    }\n\n    var node = this[CACHE].get(key)\n    var item = node.value\n\n    // dispose of the old one before overwriting\n    // split out into 2 ifs for better coverage tracking\n    if (this[DISPOSE]) {\n      if (!this[NO_DISPOSE_ON_SET]) {\n        this[DISPOSE](key, item.value)\n      }\n    }\n\n    item.now = now\n    item.maxAge = maxAge\n    item.value = value\n    this[LENGTH] += len - item.length\n    item.length = len\n    this.get(key)\n    trim(this)\n    return true\n  }\n\n  var hit = new Entry(key, value, len, now, maxAge)\n\n  // oversized objects fall out of cache automatically.\n  if (hit.length > this[MAX]) {\n    if (this[DISPOSE]) {\n      this[DISPOSE](key, value)\n    }\n    return false\n  }\n\n  this[LENGTH] += hit.length\n  this[LRU_LIST].unshift(hit)\n  this[CACHE].set(key, this[LRU_LIST].head)\n  trim(this)\n  return true\n}\n\nLRUCache.prototype.has = function (key) {\n  if (!this[CACHE].has(key)) return false\n  var hit = this[CACHE].get(key).value\n  if (isStale(this, hit)) {\n    return false\n  }\n  return true\n}\n\nLRUCache.prototype.get = function (key) {\n  return get(this, key, true)\n}\n\nLRUCache.prototype.peek = function (key) {\n  return get(this, key, false)\n}\n\nLRUCache.prototype.pop = function () {\n  var node = this[LRU_LIST].tail\n  if (!node) return null\n  del(this, node)\n  return node.value\n}\n\nLRUCache.prototype.del = function (key) {\n  del(this, this[CACHE].get(key))\n}\n\nLRUCache.prototype.load = function (arr) {\n  // reset the cache\n  this.reset()\n\n  var now = Date.now()\n  // A previous serialized cache has the most recent items first\n  for (var l = arr.length - 1; l >= 0; l--) {\n    var hit = arr[l]\n    var expiresAt = hit.e || 0\n    if (expiresAt === 0) {\n      // the item was created without expiration in a non aged cache\n      this.set(hit.k, hit.v)\n    } else {\n      var maxAge = expiresAt - now\n      // dont add already expired items\n      if (maxAge > 0) {\n        this.set(hit.k, hit.v, maxAge)\n      }\n    }\n  }\n}\n\nLRUCache.prototype.prune = function () {\n  var self = this\n  this[CACHE].forEach(function (value, key) {\n    get(self, key, false)\n  })\n}\n\nfunction get (self, key, doUse) {\n  var node = self[CACHE].get(key)\n  if (node) {\n    var hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE]) hit = undefined\n    } else {\n      if (doUse) {\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    if (hit) hit = hit.value\n  }\n  return hit\n}\n\nfunction isStale (self, hit) {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE])) {\n    return false\n  }\n  var stale = false\n  var diff = Date.now() - hit.now\n  if (hit.maxAge) {\n    stale = diff > hit.maxAge\n  } else {\n    stale = self[MAX_AGE] && (diff > self[MAX_AGE])\n  }\n  return stale\n}\n\nfunction trim (self) {\n  if (self[LENGTH] > self[MAX]) {\n    for (var walker = self[LRU_LIST].tail;\n         self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      var prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nfunction del (self, node) {\n  if (node) {\n    var hit = node.value\n    if (self[DISPOSE]) {\n      self[DISPOSE](hit.key, hit.value)\n    }\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\n// classy, since V8 prefers predictable objects.\nfunction Entry (key, value, length, now, maxAge) {\n  this.key = key\n  this.value = value\n  this.length = length\n  this.now = now\n  this.maxAge = maxAge || 0\n}\n","/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n","'use strict';\n\n// Load modules\n\nconst Path = require('path');\nconst Hoek = require('hoek');\nconst MimeDb = require('mime-db');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.compressibleRx = /^text\\/|\\+json$|\\+text$|\\+xml$/;\n\n\ninternals.compile = function (override) {\n\n    const db = Hoek.clone(MimeDb);\n    Hoek.merge(db, override, true, false);\n\n    const result = {\n        byType: db,\n        byExtension: {}\n    };\n\n    const keys = Object.keys(result.byType);\n    for (let i = 0; i < keys.length; ++i) {\n        const type = keys[i];\n        const mime = result.byType[type];\n        mime.type = mime.type || type;\n        mime.source = mime.source || 'mime-db';\n        mime.extensions = mime.extensions || [];\n        mime.compressible = (mime.compressible !== undefined ? mime.compressible : internals.compressibleRx.test(type));\n\n        Hoek.assert(!mime.predicate || typeof mime.predicate === 'function', 'predicate option must be a function');\n\n        for (let j = 0; j < mime.extensions.length; ++j) {\n            const ext = mime.extensions[j];\n            result.byExtension[ext] = mime;\n        }\n    }\n\n    return result;\n};\n\n\nmodule.exports = class Mimos {\n    constructor(options) {\n\n        options = options || {};\n        const result = options.override ? internals.compile(options.override) : internals.base;\n        this._byType = result.byType;\n        this._byExtension = result.byExtension;\n    }\n\n    path(path) {\n\n        const extension = Path.extname(path).slice(1).toLowerCase();\n        const mime = this._byExtension[extension] || {};\n\n        if (mime.predicate) {\n            return mime.predicate(Hoek.clone(mime));\n        }\n\n        return mime;\n    }\n\n    type(type) {\n\n        type = type.split(';', 1)[0].trim().toLowerCase();\n        let mime = this._byType[type];\n        if (!mime) {\n            mime = {\n                type,\n                source: 'mimos',\n                extensions: [],\n                compressible: internals.compressibleRx.test(type)\n            };\n\n            this._byType[type] = mime;\n            return mime;\n        }\n\n        if (mime.predicate) {\n            return mime.predicate(Hoek.clone(mime));\n        }\n\n        return mime;\n    }\n};\n\n\ninternals.base = internals.compile();       // Prevents an expensive copy on each constructor when no customization is needed\n","'use strict';\r\n\r\n// Load modules\r\n\r\nconst Stream = require('stream');\r\n\r\nconst Hoek = require('hoek');\r\nconst Vise = require('vise');\r\n\r\n\r\n// Declare internals\r\n\r\nconst internals = {};\r\n\r\n\r\nexports.compile = function (needle) {\r\n\r\n    Hoek.assert(needle && needle.length, 'Missing needle');\r\n    Hoek.assert(Buffer.isBuffer(needle), 'Needle must be a buffer');\r\n\r\n    const profile = {\r\n        value: needle,\r\n        lastPos: needle.length - 1,\r\n        last: needle[needle.length - 1],\r\n        length: needle.length,\r\n        badCharShift: Buffer.alloc(256)                  // Lookup table of how many characters can be skipped for each match\r\n    };\r\n\r\n    for (let i = 0; i < 256; ++i) {\r\n        profile.badCharShift[i] = profile.length;       // Defaults to the full length of the needle\r\n    }\r\n\r\n    const last = profile.length - 1;\r\n    for (let i = 0; i < last; ++i) {                    // For each character in the needle (skip last since its position is already the default)\r\n        profile.badCharShift[profile.value[i]] = last - i;\r\n    }\r\n\r\n    return profile;\r\n};\r\n\r\n\r\nexports.horspool = function (haystack, needle, start) {\r\n\r\n    Hoek.assert(haystack, 'Missing haystack');\r\n\r\n    needle = (needle.badCharShift ? needle : exports.compile(needle));\r\n    start = start || 0;\r\n\r\n    for (let i = start; i <= haystack.length - needle.length;) {       // Has enough room to fit the entire needle\r\n        const lastChar = haystack.readUInt8(i + needle.lastPos);\r\n        if (lastChar === needle.last &&\r\n            internals.startsWith(haystack, needle, i)) {\r\n\r\n            return i;\r\n        }\r\n\r\n        i += needle.badCharShift[lastChar];           // Jump to the next possible position based on last character location in needle\r\n    }\r\n\r\n    return -1;\r\n};\r\n\r\n\r\ninternals.startsWith = function (haystack, needle, pos) {\r\n\r\n    if (haystack.startsWith) {\r\n        return haystack.startsWith(needle.value, pos, needle.lastPos);\r\n    }\r\n\r\n    for (let i = 0; i < needle.lastPos; ++i) {\r\n        if (needle.value[i] !== haystack.readUInt8(pos + i)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n\r\nexports.all = function (haystack, needle, start) {\r\n\r\n    needle = exports.compile(needle);\r\n    start = start || 0;\r\n\r\n    const matches = [];\r\n    for (let i = start; i !== -1 && i < haystack.length;) {\r\n\r\n        i = exports.horspool(haystack, needle, i);\r\n        if (i !== -1) {\r\n            matches.push(i);\r\n            i += needle.length;\r\n        }\r\n    }\r\n\r\n    return matches;\r\n};\r\n\r\n\r\ninternals._indexOf = function (haystack, needle) {\r\n\r\n    Hoek.assert(haystack, 'Missing haystack');\r\n\r\n    for (let i = 0; i <= haystack.length - needle.length; ++i) {       // Has enough room to fit the entire needle\r\n        if (haystack.startsWith(needle.value, i)) {\r\n            return i;\r\n        }\r\n    }\r\n\r\n    return -1;\r\n};\r\n\r\n\r\nexports.Stream = internals.Stream = function (needle) {\r\n\r\n    const self = this;\r\n\r\n    Stream.Writable.call(this);\r\n\r\n    this.needle(needle);\r\n    this._haystack = new Vise();\r\n    this._indexOf = this._needle.length > 2 ? exports.horspool : internals._indexOf;\r\n\r\n    this.on('finish', () => {\r\n\r\n        // Flush out the remainder\r\n\r\n        const chunks = self._haystack.chunks();\r\n        for (let i = 0; i < chunks.length; ++i) {\r\n            self.emit('haystack', chunks[i]);\r\n        }\r\n\r\n        setImmediate(() => {                  // Give pending events a chance to fire\r\n\r\n            self.emit('close');\r\n        });\r\n    });\r\n};\r\n\r\nHoek.inherits(internals.Stream, Stream.Writable);\r\n\r\n\r\ninternals.Stream.prototype.needle = function (needle) {\r\n\r\n    this._needle = exports.compile(needle);\r\n};\r\n\r\n\r\ninternals.Stream.prototype._write = function (chunk, encoding, next) {\r\n\r\n    this._haystack.push(chunk);\r\n\r\n    let match = this._indexOf(this._haystack, this._needle);\r\n    if (match === -1 &&\r\n        chunk.length >= this._needle.length) {\r\n\r\n        this._flush(this._haystack.length - chunk.length);\r\n    }\r\n\r\n    while (match !== -1) {\r\n        this._flush(match);\r\n        this._haystack.shift(this._needle.length);\r\n        this.emit('needle');\r\n\r\n        match = this._indexOf(this._haystack, this._needle);\r\n    }\r\n\r\n    if (this._haystack.length) {\r\n        const notChecked = this._haystack.length - this._needle.length + 1;       // Not enough space for Horspool\r\n        let i = notChecked;\r\n        for (; i < this._haystack.length; ++i) {\r\n            if (this._haystack.startsWith(this._needle.value, i, this._haystack.length - i)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this._flush(i);\r\n    }\r\n\r\n    return next();\r\n};\r\n\r\n\r\ninternals.Stream.prototype._flush = function (pos) {\r\n\r\n    const chunks = this._haystack.shift(pos);\r\n    for (let i = 0; i < chunks.length; ++i) {\r\n        this.emit('haystack', chunks[i]);\r\n    }\r\n};\r\n\r\n\r\ninternals.Stream.prototype.flush = function () {\r\n\r\n    const chunks = this._haystack.shift(this._haystack.length);\r\n    for (let i = 0; i < chunks.length; ++i) {\r\n        this.emit('haystack', chunks[i]);\r\n    }\r\n};\r\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","'use strict';\n\n// Load modules\n\nconst Stream = require('stream');\n\nconst B64 = require('b64');\nconst Boom = require('boom');\nconst Content = require('content');\nconst Hoek = require('hoek');\nconst Nigel = require('nigel');\n\n\n// Declare internals\n\nconst internals = {};\n\n\n/*\n    RFC 2046 (http://tools.ietf.org/html/rfc2046)\n\n    multipart-body = [preamble CRLF]\n                    dash-boundary *( SPACE / HTAB ) CRLF body-part\n                    *( CRLF dash-boundary *( SPACE / HTAB ) CRLF body-part )\n                    CRLF dash-boundary \"--\" *( SPACE / HTAB )\n                    [CRLF epilogue]\n\n    boundary       = 0*69<bchars> bcharsnospace\n    bchars         = bcharsnospace / \" \"\n    bcharsnospace  = DIGIT / ALPHA / \"'\" / \"(\" / \")\" / \"+\" / \"_\" / \",\" / \"-\" / \".\" / \"/\" / \":\" / \"=\" / \"?\"\n    dash-boundary  = \"--\" boundary\n\n    preamble       = discard-text\n    epilogue       = discard-text\n    discard-text   = *(*text CRLF) *text\n\n    body-part      = MIME-part-headers [CRLF *OCTET]\n    OCTET          = <any 0-255 octet value>\n\n    SPACE          = 32\n    HTAB           = 9\n    CRLF           = 13 10\n*/\n\n\ninternals.state = {\n    preamble: 0,                // Until the first boundary is received\n    boundary: 1,                // After a boundary, waiting for first line with optional linear-whitespace\n    header: 2,                  // Receiving part headers\n    payload: 3,                 // Receiving part payload\n    epilogue: 4\n};\n\n\ninternals.defaults = {\n    maxBytes: Infinity\n};\n\n\nexports.Dispenser = internals.Dispenser = function (options) {\n\n    Stream.Writable.call(this);\n\n    Hoek.assert(options !== null && typeof options === 'object',\n        'options must be an object');\n    const settings = Hoek.applyToDefaults(internals.defaults, options);\n\n    this._boundary = settings.boundary;\n    this._state = internals.state.preamble;\n    this._held = '';\n\n    this._stream = null;\n    this._headers = {};\n    this._name = '';\n    this._pendingHeader = '';\n    this._error = null;\n    this._bytes = 0;\n    this._maxBytes = settings.maxBytes;\n\n    this._parts = new Nigel.Stream(Buffer.from('--' + settings.boundary));\n    this._lines = new Nigel.Stream(Buffer.from('\\r\\n'));\n\n    this._parts.on('needle', () => {\n\n        this._onPartEnd();\n    });\n\n    this._parts.on('haystack', (chunk) => {\n\n        this._onPart(chunk);\n    });\n\n    this._lines.on('needle', () => {\n\n        this._onLineEnd();\n    });\n\n    this._lines.on('haystack', (chunk) => {\n\n        this._onLine(chunk);\n    });\n\n    this.once('finish', () => {\n\n        this._parts.end();\n    });\n\n    this._parts.once('close', () => {\n\n        this._lines.end();\n    });\n\n    let piper = null;\n    let finish = (err) => {\n\n        if (piper) {\n            piper.removeListener('data', onReqData);\n            piper.removeListener('error', finish);\n            piper.removeListener('aborted', onReqAborted);\n        }\n\n        if (err) {\n            return this._abort(err);\n        }\n\n        this._emit('close');\n    };\n\n    finish = Hoek.once(finish);\n\n    this._lines.once('close', () => {\n\n        if (this._state === internals.state.epilogue) {\n            if (this._held) {\n                this._emit('epilogue', this._held);\n                this._held = '';\n            }\n        }\n        else if (this._state === internals.state.boundary) {\n            if (!this._held) {\n                this._abort(Boom.badRequest('Missing end boundary'));\n            }\n            else if (this._held !== '--') {\n                this._abort(Boom.badRequest('Only white space allowed after boundary at end'));\n            }\n        }\n        else {\n            this._abort(Boom.badRequest('Incomplete multipart payload'));\n        }\n\n        setImmediate(finish);                  // Give pending events a chance to fire\n    });\n\n    const onReqAborted = () => {\n\n        finish(Boom.badRequest('Client request aborted'));\n    };\n\n    const onReqData = (data) => {\n\n        this._bytes += Buffer.byteLength(data);\n\n        if (this._bytes > this._maxBytes) {\n            finish(Boom.entityTooLarge('Maximum size exceeded'));\n        }\n    };\n\n    this.once('pipe', (req) => {\n\n        piper = req;\n        req.on('data', onReqData);\n        req.once('error', finish);\n        req.once('aborted', onReqAborted);\n    });\n};\n\nHoek.inherits(internals.Dispenser, Stream.Writable);\n\n\ninternals.Dispenser.prototype._write = function (buffer, encoding, next) {\n\n    if (this._error) {\n        return next();\n    }\n\n    this._parts.write(buffer);\n    return next();\n};\n\n\ninternals.Dispenser.prototype._emit = function () {\n\n    if (this._error) {\n        return;\n    }\n\n    this.emit.apply(this, arguments);\n};\n\n\ninternals.Dispenser.prototype._abort = function (err) {\n\n    this._emit('error', err);\n    this._error = err;\n};\n\n\ninternals.Dispenser.prototype._onPartEnd = function () {\n\n    this._lines.flush();\n\n    if (this._state === internals.state.preamble) {\n        if (this._held) {\n            const last = this._held.length - 1;\n\n            if (this._held[last] !== '\\n' ||\n                this._held[last - 1] !== '\\r') {\n\n                return this._abort(Boom.badRequest('Preamble missing CRLF terminator'));\n            }\n\n            this._emit('preamble', this._held.slice(0, -2));\n            this._held = '';\n        }\n\n        this._parts.needle(Buffer.from('\\r\\n--' + this._boundary));                      // CRLF no longer optional\n    }\n\n    this._state = internals.state.boundary;\n\n    if (this._stream) {\n        this._stream.end();\n        this._stream = null;\n    }\n    else if (this._name) {\n        this._emit('field', this._name, this._held);\n        this._name = '';\n        this._held = '';\n    }\n};\n\n\ninternals.Dispenser.prototype._onPart = function (chunk) {\n\n    if (this._state === internals.state.preamble) {\n        this._held = this._held + chunk.toString();\n    }\n    else if (this._state === internals.state.payload) {\n        if (this._stream) {\n            this._stream.write(chunk);                                                 // Stream payload\n        }\n        else {\n            this._held = this._held + chunk.toString();\n        }\n    }\n    else {\n        this._lines.write(chunk);                                                       // Look for boundary\n    }\n};\n\n\ninternals.Dispenser.prototype._onLineEnd = function () {\n\n    // Boundary whitespace\n\n    if (this._state === internals.state.boundary) {\n        if (this._held) {\n            this._held = this._held.replace(/[\\t ]/g, '');                                // trim() removes new lines\n            if (this._held) {\n                if (this._held === '--') {\n                    this._state = internals.state.epilogue;\n                    this._held = '';\n\n                    return;\n                }\n\n                return this._abort(Boom.badRequest('Only white space allowed after boundary'));\n            }\n        }\n\n        this._state = internals.state.header;\n\n        return;\n    }\n\n    // Part headers\n\n    if (this._state === internals.state.header) {\n\n        // Header\n\n        if (this._held) {\n\n            // Header continuation\n\n            if (this._held[0] === ' ' ||\n                this._held[0] === '\\t') {\n\n                if (!this._pendingHeader) {\n                    return this._abort(Boom.badRequest('Invalid header continuation without valid declaration on previous line'));\n                }\n\n                this._pendingHeader = this._pendingHeader + ' ' + this._held.slice(1);                       // Drop tab\n                this._held = '';\n                return;\n            }\n\n            // Start of new header\n\n            this._flushHeader();\n            this._pendingHeader = this._held;\n            this._held = '';\n\n            return;\n        }\n\n        // End of headers\n\n        this._flushHeader();\n\n        this._state = internals.state.payload;\n\n        let disposition;\n\n        try {\n            disposition = Content.disposition(this._headers['content-disposition']);\n        }\n        catch (err) {\n            return this._abort(err);\n        }\n\n        if (disposition.filename !== undefined) {\n            const stream = new Stream.PassThrough();\n            const transferEncoding = this._headers['content-transfer-encoding'];\n\n            if (transferEncoding &&\n                transferEncoding.toLowerCase() === 'base64') {\n\n                this._stream = new B64.Decoder();\n                this._stream.pipe(stream);\n            }\n            else {\n                this._stream = stream;\n            }\n\n            stream.name = disposition.name;\n            stream.filename = disposition.filename;\n            stream.headers = this._headers;\n            this._headers = {};\n            this._emit('part', stream);\n        }\n        else {\n            this._name = disposition.name;\n        }\n\n        this._lines.flush();\n        return;\n    }\n\n    // Epilogue\n\n    this._held = this._held + '\\r\\n';                               // Put the new line back\n};\n\n\ninternals.Dispenser.prototype._onLine = function (chunk) {\n\n    if (this._stream) {\n        this._stream.write(chunk);                      // Stream payload\n    }\n    else {\n        this._held = this._held + chunk.toString();                 // Reading header or field\n    }\n};\n\n\ninternals.Dispenser.prototype._flushHeader = function () {\n\n    if (!this._pendingHeader) {\n        return;\n    }\n\n    const sep = this._pendingHeader.indexOf(':');\n\n    if (sep === -1) {\n        return this._abort(Boom.badRequest('Invalid header missing colon separator'));\n    }\n\n    if (!sep) {\n        return this._abort(Boom.badRequest('Invalid header missing field name'));\n    }\n\n    this._headers[this._pendingHeader.slice(0, sep).toLowerCase()] = this._pendingHeader.slice(sep + 1).trim();\n    this._pendingHeader = '';\n};\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\nconst Joi = require('joi');\n\n\n// Declare internals\n\nconst internals = {\n    schema: {\n        base: Joi.object({\n            name: Joi.string().required(),\n            clone: Joi.boolean(),\n            tags: Joi.boolean(),\n            spread: Joi.boolean(),\n            channels: Joi.array().items(Joi.string()).single().unique().min(1)\n        })\n    }\n};\n\n\ninternals.schema.event = internals.schema.base.keys({\n    shared: Joi.boolean()\n});\n\n\ninternals.schema.listener = internals.schema.event.keys({\n    listener: Joi.func().required(),\n    count: Joi.number().integer().min(1),\n    filter: {\n        tags: Joi.array().items(Joi.string()).single().unique().min(1).required(),\n        all: Joi.boolean()\n    }\n});\n\n\nexports = module.exports = internals.Podium = function (events, options) {\n\n    // Use descriptive names to avoid conflict when inherited\n\n    this._eventListeners = Object.create(null);\n    this._notificationsQueue = [];\n    this._eventsProcessing = false;\n    this._sourcePodiums = [];\n\n    if (events) {\n        this.registerEvent(events, options);\n    }\n};\n\n\ninternals.Podium.decorate = function (target, source) {\n\n    internals.Podium.call(target, null);\n\n    Object.keys(source._eventListeners).forEach((name) => {\n\n        target._eventListeners[name] = {\n            handlers: null,\n            flags: source._eventListeners[name].flags\n        };\n    });\n};\n\n\ninternals.Podium.validate = function (events) {\n\n    const normalized = [];\n    [].concat(events).forEach((event) => {\n\n        if (typeof event === 'string') {\n            event = { name: event };\n        }\n\n        normalized.push(Joi.attempt(event, internals.schema.event, 'Invalid event options'));\n    });\n\n    return normalized;\n};\n\n\ninternals.Podium.prototype.registerEvent = function (events, options = {}) {\n\n    events = Hoek.flatten([].concat(events));\n    events.forEach((event) => {\n\n        if (!event) {\n            return;\n        }\n\n        if (event instanceof internals.Podium) {\n            return this.registerPodium(event);\n        }\n\n        if (typeof event === 'string') {\n            event = { name: event };\n        }\n\n        if (options.validate !== false) {                                                       // Defaults to true\n            event = Joi.attempt(event, internals.schema.event, 'Invalid event options');\n        }\n\n        const name = event.name;\n        if (this._eventListeners[name]) {\n            Hoek.assert(event.shared, `Event ${name} exists`);\n            return;\n        }\n\n        this._eventListeners[name] = { handlers: null, flags: event };\n        this._sourcePodiums.forEach((podium) => {\n\n            if (!podium._eventListeners[name]) {\n                podium._eventListeners[name] = { handlers: null, flags: event };\n            }\n        });\n    });\n};\n\n\ninternals.Podium.prototype.registerPodium = function (podiums) {\n\n    [].concat(podiums).forEach((podium) => {\n\n        if (podium._sourcePodiums.indexOf(this) !== -1) {\n            return;\n        }\n\n        podium._sourcePodiums.push(this);\n        Object.keys(podium._eventListeners).forEach((name) => {\n\n            if (!this._eventListeners[name]) {\n                this._eventListeners[name] = { handlers: null, flags: podium._eventListeners[name].flags };\n            }\n        });\n    });\n};\n\n\ninternals.Podium.prototype.emit = async function (criteria, data, _generated) {\n\n    criteria = internals.criteria(criteria);\n\n    const name = criteria.name;\n    Hoek.assert(name, 'Criteria missing event name');\n\n    const event = this._eventListeners[name];\n    Hoek.assert(event, `Unknown event ${name}`);\n    Hoek.assert(!criteria.channel || typeof criteria.channel === 'string', 'Invalid channel name');\n    Hoek.assert(!criteria.channel || !event.flags.channels || event.flags.channels.indexOf(criteria.channel) !== -1, `Unknown ${criteria.channel} channel`);\n    Hoek.assert(!event.flags.spread || Array.isArray(data) || typeof data === 'function', 'Data must be an array for spread event');\n\n    if (!event.handlers &&\n        !this._sourcePodiums.length) {\n\n        return;\n    }\n\n    if (typeof criteria.tags === 'string') {\n        criteria.tags = [criteria.tags];\n    }\n\n    if (criteria.tags &&\n        Array.isArray(criteria.tags)) {\n\n        criteria.tags = Hoek.mapToObject(criteria.tags);\n    }\n\n    if (event.handlers) {\n        const processing = [];\n\n        const handlers = event.handlers.slice();                // Clone in case handlers are changed by listeners\n        for (let i = 0; i < handlers.length; ++i) {\n            const handler = handlers[i];\n\n            if (handler.channels &&\n                (!criteria.channel || handler.channels.indexOf(criteria.channel) === -1)) {\n\n                continue;\n            }\n\n            if (handler.filter) {\n                if (!criteria.tags) {\n                    continue;\n                }\n\n                const match = Hoek.intersect(criteria.tags, handler.filter.tags, !handler.filter.all);\n                if (!match ||\n                    (handler.filter.all && match.length !== handler.filter.tags.length)) {\n\n                    continue;\n                }\n            }\n\n            if (handler.count) {\n                --handler.count;\n                if (handler.count < 1) {\n                    internals.removeHandler(this, criteria.name, handler);\n                }\n            }\n\n            if (!_generated &&\n                typeof data === 'function') {\n\n                data = data();\n                _generated = true;\n            }\n\n            const update = (internals.flag('clone', handler, event) ? Hoek.clone(data) : data);\n            const args = (internals.flag('spread', handler, event) && Array.isArray(update) ? update : [update]);\n\n            if (internals.flag('tags', handler, event) &&\n                criteria.tags) {\n\n                args.push(criteria.tags);\n            }\n\n            try {\n                const result = handler.listener.apply(null, args);\n                if (result &&\n                    typeof result.then === 'function') {\n\n                    processing.push(result);\n                }\n            }\n            catch (err) {\n                processing.push(Promise.reject(err));\n            }\n        }\n\n        if (processing.length) {\n            await Promise.all(processing);\n        }\n    }\n\n    if (this._sourcePodiums.length) {\n        const podiums = this._sourcePodiums.slice();         // Clone in case modified while processing\n        await Promise.all(podiums.map((podium) => podium.emit(criteria, data, _generated)));\n    }\n};\n\n\ninternals.Podium.prototype.on = internals.Podium.prototype.addListener = function (criteria, listener) {\n\n    criteria = internals.criteria(criteria);\n    criteria.listener = listener;\n\n    if (criteria.filter &&\n        (typeof criteria.filter === 'string' || Array.isArray(criteria.filter))) {\n\n        criteria.filter = { tags: criteria.filter };\n    }\n\n    criteria = Joi.attempt(criteria, internals.schema.listener, 'Invalid event listener options');\n\n    const name = criteria.name;\n    const event = this._eventListeners[name];\n    Hoek.assert(event, `Unknown event ${name}`);\n    Hoek.assert(!criteria.channels || !event.flags.channels || Hoek.intersect(event.flags.channels, criteria.channels).length === criteria.channels.length, `Unknown event channels ${criteria.channels && criteria.channels.join(', ')}`);\n\n    this._eventListeners[name].handlers = this._eventListeners[name].handlers || [];\n    this._eventListeners[name].handlers.push(criteria);\n\n    return this;\n};\n\n\ninternals.Podium.prototype.once = function (criteria, listener) {\n\n    criteria = Object.assign(internals.criteria(criteria), { count: 1 });\n\n    if (listener) {\n        return this.on(criteria, listener);\n    }\n\n    return new Promise((resolve) => this.on(criteria, (...args) => resolve(args)));\n};\n\n\ninternals.Podium.prototype.removeListener = function (name, listener) {\n\n    Hoek.assert(this._eventListeners[name], `Unknown event ${name}`);\n    Hoek.assert(typeof listener === 'function', 'Listener must be a function');\n\n    const handlers = this._eventListeners[name].handlers;\n    if (!handlers) {\n        return this;\n    }\n\n    const filtered = handlers.filter((handler) => handler.listener !== listener);\n    this._eventListeners[name].handlers = (filtered.length ? filtered : null);\n    return this;\n};\n\n\ninternals.Podium.prototype.removeAllListeners = function (name) {\n\n    Hoek.assert(this._eventListeners[name], `Unknown event ${name}`);\n    this._eventListeners[name].handlers = null;\n    return this;\n};\n\n\ninternals.Podium.prototype.hasListeners = function (name) {\n\n    Hoek.assert(this._eventListeners[name], `Unknown event ${name}`);\n    return !!this._eventListeners[name].handlers;\n};\n\n\ninternals.removeHandler = function (emitter, name, handler) {\n\n    const handlers = emitter._eventListeners[name].handlers;\n    const filtered = handlers.filter((item) => item !== handler);\n    emitter._eventListeners[name].handlers = (filtered.length ? filtered : null);\n};\n\n\ninternals.criteria = function (criteria) {\n\n    return (typeof criteria === 'string' ? { name: criteria } : Hoek.clone(criteria));\n};\n\n\ninternals.flag = function (name, handler, event) {\n\n    return (handler[name] !== undefined ? handler[name] : event.flags[name]) || false;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          )\n\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","if (process.env.npm_package_name === 'pseudomap' &&\n    process.env.npm_lifecycle_script === 'test')\n  process.env.TEST_PSEUDOMAP = 'true'\n\nif (typeof Map === 'function' && !process.env.TEST_PSEUDOMAP) {\n  module.exports = Map\n} else {\n  module.exports = require('./pseudomap')\n}\n","var hasOwnProperty = Object.prototype.hasOwnProperty\n\nmodule.exports = PseudoMap\n\nfunction PseudoMap (set) {\n  if (!(this instanceof PseudoMap)) // whyyyyyyy\n    throw new TypeError(\"Constructor PseudoMap requires 'new'\")\n\n  this.clear()\n\n  if (set) {\n    if ((set instanceof PseudoMap) ||\n        (typeof Map === 'function' && set instanceof Map))\n      set.forEach(function (value, key) {\n        this.set(key, value)\n      }, this)\n    else if (Array.isArray(set))\n      set.forEach(function (kv) {\n        this.set(kv[0], kv[1])\n      }, this)\n    else\n      throw new TypeError('invalid argument')\n  }\n}\n\nPseudoMap.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  Object.keys(this._data).forEach(function (k) {\n    if (k !== 'size')\n      fn.call(thisp, this._data[k].value, this._data[k].key)\n  }, this)\n}\n\nPseudoMap.prototype.has = function (k) {\n  return !!find(this._data, k)\n}\n\nPseudoMap.prototype.get = function (k) {\n  var res = find(this._data, k)\n  return res && res.value\n}\n\nPseudoMap.prototype.set = function (k, v) {\n  set(this._data, k, v)\n}\n\nPseudoMap.prototype.delete = function (k) {\n  var res = find(this._data, k)\n  if (res) {\n    delete this._data[res._index]\n    this._data.size--\n  }\n}\n\nPseudoMap.prototype.clear = function () {\n  var data = Object.create(null)\n  data.size = 0\n\n  Object.defineProperty(this, '_data', {\n    value: data,\n    enumerable: false,\n    configurable: true,\n    writable: false\n  })\n}\n\nObject.defineProperty(PseudoMap.prototype, 'size', {\n  get: function () {\n    return this._data.size\n  },\n  set: function (n) {},\n  enumerable: true,\n  configurable: true\n})\n\nPseudoMap.prototype.values =\nPseudoMap.prototype.keys =\nPseudoMap.prototype.entries = function () {\n  throw new Error('iterators are not implemented in this version')\n}\n\n// Either identical, or both NaN\nfunction same (a, b) {\n  return a === b || a !== a && b !== b\n}\n\nfunction Entry (k, v, i) {\n  this.key = k\n  this.value = v\n  this._index = i\n}\n\nfunction find (data, k) {\n  for (var i = 0, s = '_' + k, key = s;\n       hasOwnProperty.call(data, key);\n       key = s + i++) {\n    if (same(data[key].key, k))\n      return data[key]\n  }\n}\n\nfunction set (data, k, v) {\n  for (var i = 0, s = '_' + k, key = s;\n       hasOwnProperty.call(data, key);\n       key = s + i++) {\n    if (same(data[key].key, k)) {\n      data[key].value = v\n      return\n    }\n  }\n  data.size++\n  data[key] = new Entry(k, v, key)\n}\n","/** @license React v16.5.2\n * react-dom-server.node.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar _assign = require('object-assign');\nvar React = require('react');\nvar checkPropTypes = require('prop-types/checkPropTypes');\nvar stream = require('stream');\n\n// TODO: this is special because it gets imported during build.\n\nvar ReactVersion = '16.5.2';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function () {};\n\n{\n  validateFormat = function (format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error = void 0;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\n// Relying on the `invariant()` implementation lets us\n// preserve the format and params in the www builds.\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warningWithoutStack = function () {};\n\n{\n  warningWithoutStack = function (condition, format) {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    if (format === undefined) {\n      throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (args.length > 8) {\n      // Check before the condition to catch violations early.\n      throw new Error('warningWithoutStack() currently supports at most 8 arguments.');\n    }\n    if (condition) {\n      return;\n    }\n    if (typeof console !== 'undefined') {\n      var _args$map = args.map(function (item) {\n        return '' + item;\n      }),\n          a = _args$map[0],\n          b = _args$map[1],\n          c = _args$map[2],\n          d = _args$map[3],\n          e = _args$map[4],\n          f = _args$map[5],\n          g = _args$map[6],\n          h = _args$map[7];\n\n      var message = 'Warning: ' + format;\n\n      // We intentionally don't use spread (or .apply) because it breaks IE9:\n      // https://github.com/facebook/react/issues/13610\n      switch (args.length) {\n        case 0:\n          console.error(message);\n          break;\n        case 1:\n          console.error(message, a);\n          break;\n        case 2:\n          console.error(message, a, b);\n          break;\n        case 3:\n          console.error(message, a, b, c);\n          break;\n        case 4:\n          console.error(message, a, b, c, d);\n          break;\n        case 5:\n          console.error(message, a, b, c, d, e);\n          break;\n        case 6:\n          console.error(message, a, b, c, d, e, f);\n          break;\n        case 7:\n          console.error(message, a, b, c, d, e, f, g);\n          break;\n        case 8:\n          console.error(message, a, b, c, d, e, f, g, h);\n          break;\n        default:\n          throw new Error('warningWithoutStack() currently supports at most 8 arguments.');\n      }\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      var argIndex = 0;\n      var _message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      throw new Error(_message);\n    } catch (x) {}\n  };\n}\n\nvar warningWithoutStack$1 = warningWithoutStack;\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\n\n\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_PLACEHOLDER_TYPE = hasSymbol ? Symbol.for('react.placeholder') : 0xead1;\n\nvar Resolved = 1;\n\n\n\n\nfunction refineResolvedThenable(thenable) {\n  return thenable._reactStatus === Resolved ? thenable._reactResult : null;\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n  {\n    if (typeof type.tag === 'number') {\n      warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_ASYNC_MODE_TYPE:\n      return 'AsyncMode';\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n    case REACT_PLACEHOLDER_TYPE:\n      return 'Placeholder';\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return 'Context.Consumer';\n      case REACT_PROVIDER_TYPE:\n        return 'Context.Provider';\n      case REACT_FORWARD_REF_TYPE:\n        var renderFn = type.render;\n        var functionName = renderFn.displayName || renderFn.name || '';\n        return type.displayName || (functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef');\n    }\n    if (typeof type.then === 'function') {\n      var thenable = type;\n      var resolvedThenable = refineResolvedThenable(thenable);\n      if (resolvedThenable) {\n        return getComponentName(resolvedThenable);\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * Forked from fbjs/warning:\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n *\n * Only change is we use console.warn instead of console.error,\n * and do nothing when 'console' is not supported.\n * This really simplifies the code.\n * ---\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar lowPriorityWarning = function () {};\n\n{\n  var printWarning = function (format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.warn(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  lowPriorityWarning = function (condition, format) {\n    if (format === undefined) {\n      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nvar lowPriorityWarning$1 = lowPriorityWarning;\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = warningWithoutStack$1;\n\n{\n  warning = function (condition, format) {\n    if (condition) {\n      return;\n    }\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n    // eslint-disable-next-line react-internal/warning-and-invariant-args\n\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));\n  };\n}\n\nvar warning$1 = warning;\n\nvar BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\nvar describeComponentFrame = function (name, source, ownerName) {\n  var sourceInfo = '';\n  if (source) {\n    var path = source.fileName;\n    var fileName = path.replace(BEFORE_SLASH_RE, '');\n    {\n      // In DEV, include code for a common special case:\n      // prefer \"folder/index.js\" instead of just \"index.js\".\n      if (/^index\\./.test(fileName)) {\n        var match = path.match(BEFORE_SLASH_RE);\n        if (match) {\n          var pathBeforeSlash = match[1];\n          if (pathBeforeSlash) {\n            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n            fileName = folderName + '/' + fileName;\n          }\n        }\n      }\n    }\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n};\n\n// Exports ReactDOM.createRoot\n\n\n// Experimental error-boundary API that can recover from errors within a single\n// render phase\n\n// Suspense\n\n// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:\n\n\n// In some cases, StrictMode should also double-render lifecycles.\n// This can be confusing for tests though,\n// And it can be bad for performance in production.\n// This feature flag can be used to control the behavior:\n\n\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n// replay the begin phase of a failed component inside invokeGuardedCallback.\n\n\n// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\nvar warnAboutDeprecatedLifecycles = false;\n\n// Warn about legacy context API\n\n\n// Gather advanced timing metrics for Profiler subtrees.\n\n\n// Trace which interactions trigger each commit.\n\n\n// Only used in www builds.\nvar enableSuspenseServerRenderer = false;\n\n// Only used in www builds.\n\n\n// React Fire: prevent the value and checked attributes from syncing\n// with their related DOM properties\n\n// A reserved attribute.\n// It is handled by React separately and shouldn't be written to the DOM.\nvar RESERVED = 0;\n\n// A simple string attribute.\n// Attributes that aren't in the whitelist are presumed to have this type.\nvar STRING = 1;\n\n// A string attribute that accepts booleans in React. In HTML, these are called\n// \"enumerated\" attributes with \"true\" and \"false\" as possible values.\n// When true, it should be set to a \"true\" string.\n// When false, it should be set to a \"false\" string.\nvar BOOLEANISH_STRING = 2;\n\n// A real boolean attribute.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\nvar BOOLEAN = 3;\n\n// An attribute that can be used as a flag as well as with a value.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\n// For any other value, should be present with that value.\nvar OVERLOADED_BOOLEAN = 4;\n\n// An attribute that must be numeric or parse as a numeric.\n// When falsy, it should be removed.\nvar NUMERIC = 5;\n\n// An attribute that must be positive numeric or parse as a positive numeric.\n// When falsy, it should be removed.\nvar POSITIVE_NUMERIC = 6;\n\n/* eslint-disable max-len */\nvar ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n/* eslint-enable max-len */\nvar ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\n\n\nvar ROOT_ATTRIBUTE_NAME = 'data-reactroot';\nvar VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\nvar hasOwnProperty$1 = Object.prototype.hasOwnProperty;\nvar illegalAttributeNameCache = {};\nvar validatedAttributeNameCache = {};\n\nfunction isAttributeNameSafe(attributeName) {\n  if (hasOwnProperty$1.call(validatedAttributeNameCache, attributeName)) {\n    return true;\n  }\n  if (hasOwnProperty$1.call(illegalAttributeNameCache, attributeName)) {\n    return false;\n  }\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n  illegalAttributeNameCache[attributeName] = true;\n  {\n    warning$1(false, 'Invalid attribute name: `%s`', attributeName);\n  }\n  return false;\n}\n\nfunction shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {\n  if (propertyInfo !== null) {\n    return propertyInfo.type === RESERVED;\n  }\n  if (isCustomComponentTag) {\n    return false;\n  }\n  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {\n    return true;\n  }\n  return false;\n}\n\nfunction shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {\n  if (propertyInfo !== null && propertyInfo.type === RESERVED) {\n    return false;\n  }\n  switch (typeof value) {\n    case 'function':\n    // $FlowIssue symbol is perfectly valid here\n    case 'symbol':\n      // eslint-disable-line\n      return true;\n    case 'boolean':\n      {\n        if (isCustomComponentTag) {\n          return false;\n        }\n        if (propertyInfo !== null) {\n          return !propertyInfo.acceptsBooleans;\n        } else {\n          var prefix = name.toLowerCase().slice(0, 5);\n          return prefix !== 'data-' && prefix !== 'aria-';\n        }\n      }\n    default:\n      return false;\n  }\n}\n\nfunction shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {\n  if (value === null || typeof value === 'undefined') {\n    return true;\n  }\n  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {\n    return true;\n  }\n  if (isCustomComponentTag) {\n    return false;\n  }\n  if (propertyInfo !== null) {\n    switch (propertyInfo.type) {\n      case BOOLEAN:\n        return !value;\n      case OVERLOADED_BOOLEAN:\n        return value === false;\n      case NUMERIC:\n        return isNaN(value);\n      case POSITIVE_NUMERIC:\n        return isNaN(value) || value < 1;\n    }\n  }\n  return false;\n}\n\nfunction getPropertyInfo(name) {\n  return properties.hasOwnProperty(name) ? properties[name] : null;\n}\n\nfunction PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace) {\n  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;\n  this.attributeName = attributeName;\n  this.attributeNamespace = attributeNamespace;\n  this.mustUseProperty = mustUseProperty;\n  this.propertyName = name;\n  this.type = type;\n}\n\n// When adding attributes to this list, be sure to also add them to\n// the `possibleStandardNames` module to ensure casing and incorrect\n// name warnings.\nvar properties = {};\n\n// These props are reserved by React. They shouldn't be written to the DOM.\n['children', 'dangerouslySetInnerHTML',\n// TODO: This prevents the assignment of defaultValue to regular\n// elements (not just inputs). Now that ReactDOMInput assigns to the\n// defaultValue property -- do we need this?\n'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty\n  name, // attributeName\n  null);\n} // attributeNamespace\n);\n\n// A few React string attributes have a different name.\n// This is a mapping from React prop names to the attribute names.\n[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {\n  var name = _ref[0],\n      attributeName = _ref[1];\n\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, // attributeName\n  null);\n} // attributeNamespace\n);\n\n// These are \"enumerated\" HTML attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null);\n} // attributeNamespace\n);\n\n// These are \"enumerated\" SVG attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n// Since these are SVG attributes, their attribute names are case-sensitive.\n['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty\n  name, // attributeName\n  null);\n} // attributeNamespace\n);\n\n// These are HTML boolean attributes.\n['allowFullScreen', 'async',\n// Note: there is a special case that prevents it from being written to the DOM\n// on the client side because the browsers are inconsistent. Instead we call focus().\n'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless',\n// Microdata\n'itemScope'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null);\n} // attributeNamespace\n);\n\n// These are the few React props that we set as DOM properties\n// rather than attributes. These are all booleans.\n['checked',\n// Note: `option.selected` is not updated if `select.multiple` is\n// disabled with `removeAttribute`. We have special logic for handling this.\n'multiple', 'muted', 'selected'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty\n  name, // attributeName\n  null);\n} // attributeNamespace\n);\n\n// These are HTML attributes that are \"overloaded booleans\": they behave like\n// booleans, but can also accept a string value.\n['capture', 'download'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty\n  name, // attributeName\n  null);\n} // attributeNamespace\n);\n\n// These are HTML attributes that must be positive numbers.\n['cols', 'rows', 'size', 'span'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty\n  name, // attributeName\n  null);\n} // attributeNamespace\n);\n\n// These are HTML attributes that must be numbers.\n['rowSpan', 'start'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null);\n} // attributeNamespace\n);\n\nvar CAMELIZE = /[\\-\\:]([a-z])/g;\nvar capitalize = function (token) {\n  return token[1].toUpperCase();\n};\n\n// This is a list of all SVG attributes that need special casing, namespacing,\n// or boolean value assignment. Regular attributes that just accept strings\n// and have the same names are omitted, just like in the HTML whitelist.\n// Some of these attributes can be hard to find. This list was created by\n// scrapping the MDN documentation.\n['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height'].forEach(function (attributeName) {\n  var name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, null);\n} // attributeNamespace\n);\n\n// String SVG attributes with the xlink namespace.\n['xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type'].forEach(function (attributeName) {\n  var name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, 'http://www.w3.org/1999/xlink');\n});\n\n// String SVG attributes with the xml namespace.\n['xml:base', 'xml:lang', 'xml:space'].forEach(function (attributeName) {\n  var name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, 'http://www.w3.org/XML/1998/namespace');\n});\n\n// Special case: this attribute exists both in HTML and SVG.\n// Its \"tabindex\" attribute name is case-sensitive in SVG so we can't just use\n// its React `tabIndex` name, like we do for attributes that exist only in HTML.\nproperties.tabIndex = new PropertyInfoRecord('tabIndex', STRING, false, // mustUseProperty\n'tabindex', // attributeName\nnull);\n\n// code copied and modified from escape-html\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Escapes special characters and HTML entities in a given html string.\n *\n * @param  {string} string HTML string to escape for later insertion\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape = void 0;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        // \"\n        escape = '&quot;';\n        break;\n      case 38:\n        // &\n        escape = '&amp;';\n        break;\n      case 39:\n        // '\n        escape = '&#x27;'; // modified from escape-html; used to be '&#39'\n        break;\n      case 60:\n        // <\n        escape = '&lt;';\n        break;\n      case 62:\n        // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n}\n// end code copied and modified from escape-html\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escapeTextForBrowser(text) {\n  if (typeof text === 'boolean' || typeof text === 'number') {\n    // this shortcircuit helps perf for types that we know will never have\n    // special characters, especially given that this function is used often\n    // for numeric dom ids.\n    return '' + text;\n  }\n  return escapeHtml(text);\n}\n\n/**\n * Escapes attribute value to prevent scripting attacks.\n *\n * @param {*} value Value to escape.\n * @return {string} An escaped string.\n */\nfunction quoteAttributeValueForBrowser(value) {\n  return '\"' + escapeTextForBrowser(value) + '\"';\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\n\n/**\n * Creates markup for the ID property.\n *\n * @param {string} id Unescaped ID.\n * @return {string} Markup string.\n */\n\n\nfunction createMarkupForRoot() {\n  return ROOT_ATTRIBUTE_NAME + '=\"\"';\n}\n\n/**\n * Creates markup for a property.\n *\n * @param {string} name\n * @param {*} value\n * @return {?string} Markup string, or null if the property was invalid.\n */\nfunction createMarkupForProperty(name, value) {\n  var propertyInfo = getPropertyInfo(name);\n  if (name !== 'style' && shouldIgnoreAttribute(name, propertyInfo, false)) {\n    return '';\n  }\n  if (shouldRemoveAttribute(name, value, propertyInfo, false)) {\n    return '';\n  }\n  if (propertyInfo !== null) {\n    var attributeName = propertyInfo.attributeName;\n    var type = propertyInfo.type;\n\n    if (type === BOOLEAN || type === OVERLOADED_BOOLEAN && value === true) {\n      return attributeName + '=\"\"';\n    } else {\n      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n    }\n  } else if (isAttributeNameSafe(name)) {\n    return name + '=' + quoteAttributeValueForBrowser(value);\n  }\n  return '';\n}\n\n/**\n * Creates markup for a custom property.\n *\n * @param {string} name\n * @param {*} value\n * @return {string} Markup string, or empty string if the property was invalid.\n */\nfunction createMarkupForCustomAttribute(name, value) {\n  if (!isAttributeNameSafe(name) || value == null) {\n    return '';\n  }\n  return name + '=' + quoteAttributeValueForBrowser(value);\n}\n\nvar HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nvar MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\nvar SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\nvar Namespaces = {\n  html: HTML_NAMESPACE,\n  mathml: MATH_NAMESPACE,\n  svg: SVG_NAMESPACE\n};\n\n// Assumes there is no parent namespace.\nfunction getIntrinsicNamespace(type) {\n  switch (type) {\n    case 'svg':\n      return SVG_NAMESPACE;\n    case 'math':\n      return MATH_NAMESPACE;\n    default:\n      return HTML_NAMESPACE;\n  }\n}\n\nfunction getChildNamespace(parentNamespace, type) {\n  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {\n    // No (or default) parent namespace: potential entry point.\n    return getIntrinsicNamespace(type);\n  }\n  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {\n    // We're leaving SVG.\n    return HTML_NAMESPACE;\n  }\n  // By default, pass namespace below.\n  return parentNamespace;\n}\n\nvar ReactDebugCurrentFrame$1 = null;\n\nvar ReactControlledValuePropTypes = {\n  checkPropTypes: null\n};\n\n{\n  ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\n  var hasReadOnlyValue = {\n    button: true,\n    checkbox: true,\n    image: true,\n    hidden: true,\n    radio: true,\n    reset: true,\n    submit: true\n  };\n\n  var propTypes = {\n    value: function (props, propName, componentName) {\n      if (hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled || props[propName] == null) {\n        return null;\n      }\n      return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n    },\n    checked: function (props, propName, componentName) {\n      if (props.onChange || props.readOnly || props.disabled || props[propName] == null) {\n        return null;\n      }\n      return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n    }\n  };\n\n  /**\n   * Provide a linked `value` attribute for controlled forms. You should not use\n   * this outside of the ReactDOM controlled form components.\n   */\n  ReactControlledValuePropTypes.checkPropTypes = function (tagName, props) {\n    checkPropTypes(propTypes, props, 'prop', tagName, ReactDebugCurrentFrame$1.getStackAddendum);\n  };\n}\n\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\n// those special-case tags.\n\nvar omittedCloseTags = {\n  area: true,\n  base: true,\n  br: true,\n  col: true,\n  embed: true,\n  hr: true,\n  img: true,\n  input: true,\n  keygen: true,\n  link: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true\n  // NOTE: menuitem's close tag should be omitted, but that causes problems.\n};\n\n// For HTML, certain tags cannot have children. This has the same purpose as\n// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\nvar voidElementTags = _assign({\n  menuitem: true\n}, omittedCloseTags);\n\n// TODO: We can remove this if we add invariantWithStack()\n// or add stack by default to invariants where possible.\nvar HTML = '__html';\n\nvar ReactDebugCurrentFrame$2 = null;\n{\n  ReactDebugCurrentFrame$2 = ReactSharedInternals.ReactDebugCurrentFrame;\n}\n\nfunction assertValidProps(tag, props) {\n  if (!props) {\n    return;\n  }\n  // Note the use of `==` which checks for null or undefined.\n  if (voidElementTags[tag]) {\n    !(props.children == null && props.dangerouslySetInnerHTML == null) ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', tag, ReactDebugCurrentFrame$2.getStackAddendum()) : void 0;\n  }\n  if (props.dangerouslySetInnerHTML != null) {\n    !(props.children == null) ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : void 0;\n    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : void 0;\n  }\n  {\n    !(props.suppressContentEditableWarning || !props.contentEditable || props.children == null) ? warning$1(false, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;\n  }\n  !(props.style == null || typeof props.style === 'object') ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \\'em\\'}} when using JSX.%s', ReactDebugCurrentFrame$2.getStackAddendum()) : void 0;\n}\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\nvar isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridArea: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value, isCustomProperty) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {\n    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n  }\n\n  return ('' + value).trim();\n}\n\nvar uppercasePattern = /([A-Z])/g;\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n */\nfunction hyphenateStyleName(name) {\n  return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');\n}\n\nfunction isCustomComponent(tagName, props) {\n  if (tagName.indexOf('-') === -1) {\n    return typeof props.is === 'string';\n  }\n  switch (tagName) {\n    // These are reserved SVG and MathML elements.\n    // We don't mind this whitelist too much because we expect it to never grow.\n    // The alternative is to track the namespace in a few places which is convoluted.\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n    case 'annotation-xml':\n    case 'color-profile':\n    case 'font-face':\n    case 'font-face-src':\n    case 'font-face-uri':\n    case 'font-face-format':\n    case 'font-face-name':\n    case 'missing-glyph':\n      return false;\n    default:\n      return true;\n  }\n}\n\nvar warnValidStyle = function () {};\n\n{\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n  var msPattern$1 = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n\n  // style values shouldn't contain a semicolon\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n  var warnedForNaNValue = false;\n  var warnedForInfinityValue = false;\n\n  var camelize = function (string) {\n    return string.replace(hyphenPattern, function (_, character) {\n      return character.toUpperCase();\n    });\n  };\n\n  var warnHyphenatedStyleName = function (name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    warning$1(false, 'Unsupported style property %s. Did you mean %s?', name,\n    // As Andi Smith suggests\n    // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n    // is converted to lowercase `ms`.\n    camelize(name.replace(msPattern$1, 'ms-')));\n  };\n\n  var warnBadVendoredStyleName = function (name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    warning$1(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));\n  };\n\n  var warnStyleValueWithSemicolon = function (name, value) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    warning$1(false, \"Style property values shouldn't contain a semicolon. \" + 'Try \"%s: %s\" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));\n  };\n\n  var warnStyleValueIsNaN = function (name, value) {\n    if (warnedForNaNValue) {\n      return;\n    }\n\n    warnedForNaNValue = true;\n    warning$1(false, '`NaN` is an invalid value for the `%s` css style property.', name);\n  };\n\n  var warnStyleValueIsInfinity = function (name, value) {\n    if (warnedForInfinityValue) {\n      return;\n    }\n\n    warnedForInfinityValue = true;\n    warning$1(false, '`Infinity` is an invalid value for the `%s` css style property.', name);\n  };\n\n  warnValidStyle = function (name, value) {\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value);\n    }\n\n    if (typeof value === 'number') {\n      if (isNaN(value)) {\n        warnStyleValueIsNaN(name, value);\n      } else if (!isFinite(value)) {\n        warnStyleValueIsInfinity(name, value);\n      }\n    }\n  };\n}\n\nvar warnValidStyle$1 = warnValidStyle;\n\nvar ariaProperties = {\n  'aria-current': 0, // state\n  'aria-details': 0,\n  'aria-disabled': 0, // state\n  'aria-hidden': 0, // state\n  'aria-invalid': 0, // state\n  'aria-keyshortcuts': 0,\n  'aria-label': 0,\n  'aria-roledescription': 0,\n  // Widget Attributes\n  'aria-autocomplete': 0,\n  'aria-checked': 0,\n  'aria-expanded': 0,\n  'aria-haspopup': 0,\n  'aria-level': 0,\n  'aria-modal': 0,\n  'aria-multiline': 0,\n  'aria-multiselectable': 0,\n  'aria-orientation': 0,\n  'aria-placeholder': 0,\n  'aria-pressed': 0,\n  'aria-readonly': 0,\n  'aria-required': 0,\n  'aria-selected': 0,\n  'aria-sort': 0,\n  'aria-valuemax': 0,\n  'aria-valuemin': 0,\n  'aria-valuenow': 0,\n  'aria-valuetext': 0,\n  // Live Region Attributes\n  'aria-atomic': 0,\n  'aria-busy': 0,\n  'aria-live': 0,\n  'aria-relevant': 0,\n  // Drag-and-Drop Attributes\n  'aria-dropeffect': 0,\n  'aria-grabbed': 0,\n  // Relationship Attributes\n  'aria-activedescendant': 0,\n  'aria-colcount': 0,\n  'aria-colindex': 0,\n  'aria-colspan': 0,\n  'aria-controls': 0,\n  'aria-describedby': 0,\n  'aria-errormessage': 0,\n  'aria-flowto': 0,\n  'aria-labelledby': 0,\n  'aria-owns': 0,\n  'aria-posinset': 0,\n  'aria-rowcount': 0,\n  'aria-rowindex': 0,\n  'aria-rowspan': 0,\n  'aria-setsize': 0\n};\n\nvar warnedProperties = {};\nvar rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');\nvar rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\nvar hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\nfunction validateProperty(tagName, name) {\n  if (hasOwnProperty$2.call(warnedProperties, name) && warnedProperties[name]) {\n    return true;\n  }\n\n  if (rARIACamel.test(name)) {\n    var ariaName = 'aria-' + name.slice(4).toLowerCase();\n    var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;\n\n    // If this is an aria-* attribute, but is not listed in the known DOM\n    // DOM properties, then it is an invalid aria-* attribute.\n    if (correctName == null) {\n      warning$1(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);\n      warnedProperties[name] = true;\n      return true;\n    }\n    // aria-* attributes should be lowercase; suggest the lowercase version.\n    if (name !== correctName) {\n      warning$1(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);\n      warnedProperties[name] = true;\n      return true;\n    }\n  }\n\n  if (rARIA.test(name)) {\n    var lowerCasedName = name.toLowerCase();\n    var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;\n\n    // If this is an aria-* attribute, but is not listed in the known DOM\n    // DOM properties, then it is an invalid aria-* attribute.\n    if (standardName == null) {\n      warnedProperties[name] = true;\n      return false;\n    }\n    // aria-* attributes should be lowercase; suggest the lowercase version.\n    if (name !== standardName) {\n      warning$1(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);\n      warnedProperties[name] = true;\n      return true;\n    }\n  }\n\n  return true;\n}\n\nfunction warnInvalidARIAProps(type, props) {\n  var invalidProps = [];\n\n  for (var key in props) {\n    var isValid = validateProperty(type, key);\n    if (!isValid) {\n      invalidProps.push(key);\n    }\n  }\n\n  var unknownPropString = invalidProps.map(function (prop) {\n    return '`' + prop + '`';\n  }).join(', ');\n\n  if (invalidProps.length === 1) {\n    warning$1(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);\n  } else if (invalidProps.length > 1) {\n    warning$1(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);\n  }\n}\n\nfunction validateProperties(type, props) {\n  if (isCustomComponent(type, props)) {\n    return;\n  }\n  warnInvalidARIAProps(type, props);\n}\n\nvar didWarnValueNull = false;\n\nfunction validateProperties$1(type, props) {\n  if (type !== 'input' && type !== 'textarea' && type !== 'select') {\n    return;\n  }\n\n  if (props != null && props.value === null && !didWarnValueNull) {\n    didWarnValueNull = true;\n    if (type === 'select' && props.multiple) {\n      warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);\n    } else {\n      warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);\n    }\n  }\n}\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n *\n * @see {EventPluginHub}\n */\n\n/**\n * Ordered list of injected plugins.\n */\n\n\n/**\n * Mapping from event name to dispatch config\n */\n\n\n/**\n * Mapping from registration name to plugin module\n */\nvar registrationNameModules = {};\n\n/**\n * Mapping from registration name to event name\n */\n\n\n/**\n * Mapping from lowercase registration names to the properly cased version,\n * used to warn in the case of missing event handlers. Available\n * only in true.\n * @type {Object}\n */\nvar possibleRegistrationNames = {};\n// Trust the developer to only use possibleRegistrationNames in true\n\n/**\n * Injects an ordering of plugins (by plugin name). This allows the ordering\n * to be decoupled from injection of the actual plugins so that ordering is\n * always deterministic regardless of packaging, on-the-fly injection, etc.\n *\n * @param {array} InjectedEventPluginOrder\n * @internal\n * @see {EventPluginHub.injection.injectEventPluginOrder}\n */\n\n\n/**\n * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n * in the ordering injected by `injectEventPluginOrder`.\n *\n * Plugins can be injected as part of page initialization or on-the-fly.\n *\n * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n * @internal\n * @see {EventPluginHub.injection.injectEventPluginsByName}\n */\n\n// When adding attributes to the HTML or SVG whitelist, be sure to\n// also add them to this module to ensure casing and incorrect name\n// warnings.\nvar possibleStandardNames = {\n  // HTML\n  accept: 'accept',\n  acceptcharset: 'acceptCharset',\n  'accept-charset': 'acceptCharset',\n  accesskey: 'accessKey',\n  action: 'action',\n  allowfullscreen: 'allowFullScreen',\n  alt: 'alt',\n  as: 'as',\n  async: 'async',\n  autocapitalize: 'autoCapitalize',\n  autocomplete: 'autoComplete',\n  autocorrect: 'autoCorrect',\n  autofocus: 'autoFocus',\n  autoplay: 'autoPlay',\n  autosave: 'autoSave',\n  capture: 'capture',\n  cellpadding: 'cellPadding',\n  cellspacing: 'cellSpacing',\n  challenge: 'challenge',\n  charset: 'charSet',\n  checked: 'checked',\n  children: 'children',\n  cite: 'cite',\n  class: 'className',\n  classid: 'classID',\n  classname: 'className',\n  cols: 'cols',\n  colspan: 'colSpan',\n  content: 'content',\n  contenteditable: 'contentEditable',\n  contextmenu: 'contextMenu',\n  controls: 'controls',\n  controlslist: 'controlsList',\n  coords: 'coords',\n  crossorigin: 'crossOrigin',\n  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',\n  data: 'data',\n  datetime: 'dateTime',\n  default: 'default',\n  defaultchecked: 'defaultChecked',\n  defaultvalue: 'defaultValue',\n  defer: 'defer',\n  dir: 'dir',\n  disabled: 'disabled',\n  download: 'download',\n  draggable: 'draggable',\n  enctype: 'encType',\n  for: 'htmlFor',\n  form: 'form',\n  formmethod: 'formMethod',\n  formaction: 'formAction',\n  formenctype: 'formEncType',\n  formnovalidate: 'formNoValidate',\n  formtarget: 'formTarget',\n  frameborder: 'frameBorder',\n  headers: 'headers',\n  height: 'height',\n  hidden: 'hidden',\n  high: 'high',\n  href: 'href',\n  hreflang: 'hrefLang',\n  htmlfor: 'htmlFor',\n  httpequiv: 'httpEquiv',\n  'http-equiv': 'httpEquiv',\n  icon: 'icon',\n  id: 'id',\n  innerhtml: 'innerHTML',\n  inputmode: 'inputMode',\n  integrity: 'integrity',\n  is: 'is',\n  itemid: 'itemID',\n  itemprop: 'itemProp',\n  itemref: 'itemRef',\n  itemscope: 'itemScope',\n  itemtype: 'itemType',\n  keyparams: 'keyParams',\n  keytype: 'keyType',\n  kind: 'kind',\n  label: 'label',\n  lang: 'lang',\n  list: 'list',\n  loop: 'loop',\n  low: 'low',\n  manifest: 'manifest',\n  marginwidth: 'marginWidth',\n  marginheight: 'marginHeight',\n  max: 'max',\n  maxlength: 'maxLength',\n  media: 'media',\n  mediagroup: 'mediaGroup',\n  method: 'method',\n  min: 'min',\n  minlength: 'minLength',\n  multiple: 'multiple',\n  muted: 'muted',\n  name: 'name',\n  nomodule: 'noModule',\n  nonce: 'nonce',\n  novalidate: 'noValidate',\n  open: 'open',\n  optimum: 'optimum',\n  pattern: 'pattern',\n  placeholder: 'placeholder',\n  playsinline: 'playsInline',\n  poster: 'poster',\n  preload: 'preload',\n  profile: 'profile',\n  radiogroup: 'radioGroup',\n  readonly: 'readOnly',\n  referrerpolicy: 'referrerPolicy',\n  rel: 'rel',\n  required: 'required',\n  reversed: 'reversed',\n  role: 'role',\n  rows: 'rows',\n  rowspan: 'rowSpan',\n  sandbox: 'sandbox',\n  scope: 'scope',\n  scoped: 'scoped',\n  scrolling: 'scrolling',\n  seamless: 'seamless',\n  selected: 'selected',\n  shape: 'shape',\n  size: 'size',\n  sizes: 'sizes',\n  span: 'span',\n  spellcheck: 'spellCheck',\n  src: 'src',\n  srcdoc: 'srcDoc',\n  srclang: 'srcLang',\n  srcset: 'srcSet',\n  start: 'start',\n  step: 'step',\n  style: 'style',\n  summary: 'summary',\n  tabindex: 'tabIndex',\n  target: 'target',\n  title: 'title',\n  type: 'type',\n  usemap: 'useMap',\n  value: 'value',\n  width: 'width',\n  wmode: 'wmode',\n  wrap: 'wrap',\n\n  // SVG\n  about: 'about',\n  accentheight: 'accentHeight',\n  'accent-height': 'accentHeight',\n  accumulate: 'accumulate',\n  additive: 'additive',\n  alignmentbaseline: 'alignmentBaseline',\n  'alignment-baseline': 'alignmentBaseline',\n  allowreorder: 'allowReorder',\n  alphabetic: 'alphabetic',\n  amplitude: 'amplitude',\n  arabicform: 'arabicForm',\n  'arabic-form': 'arabicForm',\n  ascent: 'ascent',\n  attributename: 'attributeName',\n  attributetype: 'attributeType',\n  autoreverse: 'autoReverse',\n  azimuth: 'azimuth',\n  basefrequency: 'baseFrequency',\n  baselineshift: 'baselineShift',\n  'baseline-shift': 'baselineShift',\n  baseprofile: 'baseProfile',\n  bbox: 'bbox',\n  begin: 'begin',\n  bias: 'bias',\n  by: 'by',\n  calcmode: 'calcMode',\n  capheight: 'capHeight',\n  'cap-height': 'capHeight',\n  clip: 'clip',\n  clippath: 'clipPath',\n  'clip-path': 'clipPath',\n  clippathunits: 'clipPathUnits',\n  cliprule: 'clipRule',\n  'clip-rule': 'clipRule',\n  color: 'color',\n  colorinterpolation: 'colorInterpolation',\n  'color-interpolation': 'colorInterpolation',\n  colorinterpolationfilters: 'colorInterpolationFilters',\n  'color-interpolation-filters': 'colorInterpolationFilters',\n  colorprofile: 'colorProfile',\n  'color-profile': 'colorProfile',\n  colorrendering: 'colorRendering',\n  'color-rendering': 'colorRendering',\n  contentscripttype: 'contentScriptType',\n  contentstyletype: 'contentStyleType',\n  cursor: 'cursor',\n  cx: 'cx',\n  cy: 'cy',\n  d: 'd',\n  datatype: 'datatype',\n  decelerate: 'decelerate',\n  descent: 'descent',\n  diffuseconstant: 'diffuseConstant',\n  direction: 'direction',\n  display: 'display',\n  divisor: 'divisor',\n  dominantbaseline: 'dominantBaseline',\n  'dominant-baseline': 'dominantBaseline',\n  dur: 'dur',\n  dx: 'dx',\n  dy: 'dy',\n  edgemode: 'edgeMode',\n  elevation: 'elevation',\n  enablebackground: 'enableBackground',\n  'enable-background': 'enableBackground',\n  end: 'end',\n  exponent: 'exponent',\n  externalresourcesrequired: 'externalResourcesRequired',\n  fill: 'fill',\n  fillopacity: 'fillOpacity',\n  'fill-opacity': 'fillOpacity',\n  fillrule: 'fillRule',\n  'fill-rule': 'fillRule',\n  filter: 'filter',\n  filterres: 'filterRes',\n  filterunits: 'filterUnits',\n  floodopacity: 'floodOpacity',\n  'flood-opacity': 'floodOpacity',\n  floodcolor: 'floodColor',\n  'flood-color': 'floodColor',\n  focusable: 'focusable',\n  fontfamily: 'fontFamily',\n  'font-family': 'fontFamily',\n  fontsize: 'fontSize',\n  'font-size': 'fontSize',\n  fontsizeadjust: 'fontSizeAdjust',\n  'font-size-adjust': 'fontSizeAdjust',\n  fontstretch: 'fontStretch',\n  'font-stretch': 'fontStretch',\n  fontstyle: 'fontStyle',\n  'font-style': 'fontStyle',\n  fontvariant: 'fontVariant',\n  'font-variant': 'fontVariant',\n  fontweight: 'fontWeight',\n  'font-weight': 'fontWeight',\n  format: 'format',\n  from: 'from',\n  fx: 'fx',\n  fy: 'fy',\n  g1: 'g1',\n  g2: 'g2',\n  glyphname: 'glyphName',\n  'glyph-name': 'glyphName',\n  glyphorientationhorizontal: 'glyphOrientationHorizontal',\n  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',\n  glyphorientationvertical: 'glyphOrientationVertical',\n  'glyph-orientation-vertical': 'glyphOrientationVertical',\n  glyphref: 'glyphRef',\n  gradienttransform: 'gradientTransform',\n  gradientunits: 'gradientUnits',\n  hanging: 'hanging',\n  horizadvx: 'horizAdvX',\n  'horiz-adv-x': 'horizAdvX',\n  horizoriginx: 'horizOriginX',\n  'horiz-origin-x': 'horizOriginX',\n  ideographic: 'ideographic',\n  imagerendering: 'imageRendering',\n  'image-rendering': 'imageRendering',\n  in2: 'in2',\n  in: 'in',\n  inlist: 'inlist',\n  intercept: 'intercept',\n  k1: 'k1',\n  k2: 'k2',\n  k3: 'k3',\n  k4: 'k4',\n  k: 'k',\n  kernelmatrix: 'kernelMatrix',\n  kernelunitlength: 'kernelUnitLength',\n  kerning: 'kerning',\n  keypoints: 'keyPoints',\n  keysplines: 'keySplines',\n  keytimes: 'keyTimes',\n  lengthadjust: 'lengthAdjust',\n  letterspacing: 'letterSpacing',\n  'letter-spacing': 'letterSpacing',\n  lightingcolor: 'lightingColor',\n  'lighting-color': 'lightingColor',\n  limitingconeangle: 'limitingConeAngle',\n  local: 'local',\n  markerend: 'markerEnd',\n  'marker-end': 'markerEnd',\n  markerheight: 'markerHeight',\n  markermid: 'markerMid',\n  'marker-mid': 'markerMid',\n  markerstart: 'markerStart',\n  'marker-start': 'markerStart',\n  markerunits: 'markerUnits',\n  markerwidth: 'markerWidth',\n  mask: 'mask',\n  maskcontentunits: 'maskContentUnits',\n  maskunits: 'maskUnits',\n  mathematical: 'mathematical',\n  mode: 'mode',\n  numoctaves: 'numOctaves',\n  offset: 'offset',\n  opacity: 'opacity',\n  operator: 'operator',\n  order: 'order',\n  orient: 'orient',\n  orientation: 'orientation',\n  origin: 'origin',\n  overflow: 'overflow',\n  overlineposition: 'overlinePosition',\n  'overline-position': 'overlinePosition',\n  overlinethickness: 'overlineThickness',\n  'overline-thickness': 'overlineThickness',\n  paintorder: 'paintOrder',\n  'paint-order': 'paintOrder',\n  panose1: 'panose1',\n  'panose-1': 'panose1',\n  pathlength: 'pathLength',\n  patterncontentunits: 'patternContentUnits',\n  patterntransform: 'patternTransform',\n  patternunits: 'patternUnits',\n  pointerevents: 'pointerEvents',\n  'pointer-events': 'pointerEvents',\n  points: 'points',\n  pointsatx: 'pointsAtX',\n  pointsaty: 'pointsAtY',\n  pointsatz: 'pointsAtZ',\n  prefix: 'prefix',\n  preservealpha: 'preserveAlpha',\n  preserveaspectratio: 'preserveAspectRatio',\n  primitiveunits: 'primitiveUnits',\n  property: 'property',\n  r: 'r',\n  radius: 'radius',\n  refx: 'refX',\n  refy: 'refY',\n  renderingintent: 'renderingIntent',\n  'rendering-intent': 'renderingIntent',\n  repeatcount: 'repeatCount',\n  repeatdur: 'repeatDur',\n  requiredextensions: 'requiredExtensions',\n  requiredfeatures: 'requiredFeatures',\n  resource: 'resource',\n  restart: 'restart',\n  result: 'result',\n  results: 'results',\n  rotate: 'rotate',\n  rx: 'rx',\n  ry: 'ry',\n  scale: 'scale',\n  security: 'security',\n  seed: 'seed',\n  shaperendering: 'shapeRendering',\n  'shape-rendering': 'shapeRendering',\n  slope: 'slope',\n  spacing: 'spacing',\n  specularconstant: 'specularConstant',\n  specularexponent: 'specularExponent',\n  speed: 'speed',\n  spreadmethod: 'spreadMethod',\n  startoffset: 'startOffset',\n  stddeviation: 'stdDeviation',\n  stemh: 'stemh',\n  stemv: 'stemv',\n  stitchtiles: 'stitchTiles',\n  stopcolor: 'stopColor',\n  'stop-color': 'stopColor',\n  stopopacity: 'stopOpacity',\n  'stop-opacity': 'stopOpacity',\n  strikethroughposition: 'strikethroughPosition',\n  'strikethrough-position': 'strikethroughPosition',\n  strikethroughthickness: 'strikethroughThickness',\n  'strikethrough-thickness': 'strikethroughThickness',\n  string: 'string',\n  stroke: 'stroke',\n  strokedasharray: 'strokeDasharray',\n  'stroke-dasharray': 'strokeDasharray',\n  strokedashoffset: 'strokeDashoffset',\n  'stroke-dashoffset': 'strokeDashoffset',\n  strokelinecap: 'strokeLinecap',\n  'stroke-linecap': 'strokeLinecap',\n  strokelinejoin: 'strokeLinejoin',\n  'stroke-linejoin': 'strokeLinejoin',\n  strokemiterlimit: 'strokeMiterlimit',\n  'stroke-miterlimit': 'strokeMiterlimit',\n  strokewidth: 'strokeWidth',\n  'stroke-width': 'strokeWidth',\n  strokeopacity: 'strokeOpacity',\n  'stroke-opacity': 'strokeOpacity',\n  suppresscontenteditablewarning: 'suppressContentEditableWarning',\n  suppresshydrationwarning: 'suppressHydrationWarning',\n  surfacescale: 'surfaceScale',\n  systemlanguage: 'systemLanguage',\n  tablevalues: 'tableValues',\n  targetx: 'targetX',\n  targety: 'targetY',\n  textanchor: 'textAnchor',\n  'text-anchor': 'textAnchor',\n  textdecoration: 'textDecoration',\n  'text-decoration': 'textDecoration',\n  textlength: 'textLength',\n  textrendering: 'textRendering',\n  'text-rendering': 'textRendering',\n  to: 'to',\n  transform: 'transform',\n  typeof: 'typeof',\n  u1: 'u1',\n  u2: 'u2',\n  underlineposition: 'underlinePosition',\n  'underline-position': 'underlinePosition',\n  underlinethickness: 'underlineThickness',\n  'underline-thickness': 'underlineThickness',\n  unicode: 'unicode',\n  unicodebidi: 'unicodeBidi',\n  'unicode-bidi': 'unicodeBidi',\n  unicoderange: 'unicodeRange',\n  'unicode-range': 'unicodeRange',\n  unitsperem: 'unitsPerEm',\n  'units-per-em': 'unitsPerEm',\n  unselectable: 'unselectable',\n  valphabetic: 'vAlphabetic',\n  'v-alphabetic': 'vAlphabetic',\n  values: 'values',\n  vectoreffect: 'vectorEffect',\n  'vector-effect': 'vectorEffect',\n  version: 'version',\n  vertadvy: 'vertAdvY',\n  'vert-adv-y': 'vertAdvY',\n  vertoriginx: 'vertOriginX',\n  'vert-origin-x': 'vertOriginX',\n  vertoriginy: 'vertOriginY',\n  'vert-origin-y': 'vertOriginY',\n  vhanging: 'vHanging',\n  'v-hanging': 'vHanging',\n  videographic: 'vIdeographic',\n  'v-ideographic': 'vIdeographic',\n  viewbox: 'viewBox',\n  viewtarget: 'viewTarget',\n  visibility: 'visibility',\n  vmathematical: 'vMathematical',\n  'v-mathematical': 'vMathematical',\n  vocab: 'vocab',\n  widths: 'widths',\n  wordspacing: 'wordSpacing',\n  'word-spacing': 'wordSpacing',\n  writingmode: 'writingMode',\n  'writing-mode': 'writingMode',\n  x1: 'x1',\n  x2: 'x2',\n  x: 'x',\n  xchannelselector: 'xChannelSelector',\n  xheight: 'xHeight',\n  'x-height': 'xHeight',\n  xlinkactuate: 'xlinkActuate',\n  'xlink:actuate': 'xlinkActuate',\n  xlinkarcrole: 'xlinkArcrole',\n  'xlink:arcrole': 'xlinkArcrole',\n  xlinkhref: 'xlinkHref',\n  'xlink:href': 'xlinkHref',\n  xlinkrole: 'xlinkRole',\n  'xlink:role': 'xlinkRole',\n  xlinkshow: 'xlinkShow',\n  'xlink:show': 'xlinkShow',\n  xlinktitle: 'xlinkTitle',\n  'xlink:title': 'xlinkTitle',\n  xlinktype: 'xlinkType',\n  'xlink:type': 'xlinkType',\n  xmlbase: 'xmlBase',\n  'xml:base': 'xmlBase',\n  xmllang: 'xmlLang',\n  'xml:lang': 'xmlLang',\n  xmlns: 'xmlns',\n  'xml:space': 'xmlSpace',\n  xmlnsxlink: 'xmlnsXlink',\n  'xmlns:xlink': 'xmlnsXlink',\n  xmlspace: 'xmlSpace',\n  y1: 'y1',\n  y2: 'y2',\n  y: 'y',\n  ychannelselector: 'yChannelSelector',\n  z: 'z',\n  zoomandpan: 'zoomAndPan'\n};\n\nvar validateProperty$1 = function () {};\n\n{\n  var warnedProperties$1 = {};\n  var _hasOwnProperty = Object.prototype.hasOwnProperty;\n  var EVENT_NAME_REGEX = /^on./;\n  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;\n  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');\n  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\n  validateProperty$1 = function (tagName, name, value, canUseEventSystem) {\n    if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {\n      return true;\n    }\n\n    var lowerCasedName = name.toLowerCase();\n    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {\n      warning$1(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    // We can't rely on the event system being injected on the server.\n    if (canUseEventSystem) {\n      if (registrationNameModules.hasOwnProperty(name)) {\n        return true;\n      }\n      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;\n      if (registrationName != null) {\n        warning$1(false, 'Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);\n        warnedProperties$1[name] = true;\n        return true;\n      }\n      if (EVENT_NAME_REGEX.test(name)) {\n        warning$1(false, 'Unknown event handler property `%s`. It will be ignored.', name);\n        warnedProperties$1[name] = true;\n        return true;\n      }\n    } else if (EVENT_NAME_REGEX.test(name)) {\n      // If no event plugins have been injected, we are in a server environment.\n      // So we can't tell if the event name is correct for sure, but we can filter\n      // out known bad ones like `onclick`. We can't suggest a specific replacement though.\n      if (INVALID_EVENT_NAME_REGEX.test(name)) {\n        warning$1(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);\n      }\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    // Let the ARIA attribute hook validate ARIA attributes\n    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {\n      return true;\n    }\n\n    if (lowerCasedName === 'innerhtml') {\n      warning$1(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    if (lowerCasedName === 'aria') {\n      warning$1(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {\n      warning$1(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    if (typeof value === 'number' && isNaN(value)) {\n      warning$1(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    var propertyInfo = getPropertyInfo(name);\n    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;\n\n    // Known attributes should match the casing specified in the property config.\n    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {\n      var standardName = possibleStandardNames[lowerCasedName];\n      if (standardName !== name) {\n        warning$1(false, 'Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);\n        warnedProperties$1[name] = true;\n        return true;\n      }\n    } else if (!isReserved && name !== lowerCasedName) {\n      // Unknown attributes should have lowercase casing since that's how they\n      // will be cased anyway with server rendering.\n      warning$1(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {\n      if (value) {\n        warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\\n\\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s=\"%s\" or %s={value.toString()}.', value, name, name, value, name);\n      } else {\n        warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\\n\\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s=\"%s\" or %s={value.toString()}.\\n\\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);\n      }\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    // Now that we've validated casing, do not validate\n    // data types for reserved props\n    if (isReserved) {\n      return true;\n    }\n\n    // Warn when a known attribute is a bad type\n    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {\n      warnedProperties$1[name] = true;\n      return false;\n    }\n\n    // Warn when passing the strings 'false' or 'true' into a boolean prop\n    if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {\n      warning$1(false, 'Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string \"false\".', name, value);\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    return true;\n  };\n}\n\nvar warnUnknownProperties = function (type, props, canUseEventSystem) {\n  var unknownProps = [];\n  for (var key in props) {\n    var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);\n    if (!isValid) {\n      unknownProps.push(key);\n    }\n  }\n\n  var unknownPropString = unknownProps.map(function (prop) {\n    return '`' + prop + '`';\n  }).join(', ');\n  if (unknownProps.length === 1) {\n    warning$1(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);\n  } else if (unknownProps.length > 1) {\n    warning$1(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);\n  }\n};\n\nfunction validateProperties$2(type, props, canUseEventSystem) {\n  if (isCustomComponent(type, props)) {\n    return;\n  }\n  warnUnknownProperties(type, props, canUseEventSystem);\n}\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Based on reading the React.Children implementation. TODO: type this somewhere?\n\nvar toArray = React.Children.toArray;\n\n// This is only used in DEV.\n// Each entry is `this.stack` from a currently executing renderer instance.\n// (There may be more than one because ReactDOMServer is reentrant).\n// Each stack is an array of frames which may contain nested stacks of elements.\nvar currentDebugStacks = [];\n\nvar ReactDebugCurrentFrame = void 0;\nvar prevGetCurrentStackImpl = null;\nvar getCurrentServerStackImpl = function () {\n  return '';\n};\nvar describeStackFrame = function (element) {\n  return '';\n};\n\nvar validatePropertiesInDevelopment = function (type, props) {};\nvar pushCurrentDebugStack = function (stack) {};\nvar pushElementToDebugStack = function (element) {};\nvar popCurrentDebugStack = function () {};\n\n{\n  ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\n  validatePropertiesInDevelopment = function (type, props) {\n    validateProperties(type, props);\n    validateProperties$1(type, props);\n    validateProperties$2(type, props, /* canUseEventSystem */false);\n  };\n\n  describeStackFrame = function (element) {\n    var source = element._source;\n    var type = element.type;\n    var name = getComponentName(type);\n    var ownerName = null;\n    return describeComponentFrame(name, source, ownerName);\n  };\n\n  pushCurrentDebugStack = function (stack) {\n    currentDebugStacks.push(stack);\n\n    if (currentDebugStacks.length === 1) {\n      // We are entering a server renderer.\n      // Remember the previous (e.g. client) global stack implementation.\n      prevGetCurrentStackImpl = ReactDebugCurrentFrame.getCurrentStack;\n      ReactDebugCurrentFrame.getCurrentStack = getCurrentServerStackImpl;\n    }\n  };\n\n  pushElementToDebugStack = function (element) {\n    // For the innermost executing ReactDOMServer call,\n    var stack = currentDebugStacks[currentDebugStacks.length - 1];\n    // Take the innermost executing frame (e.g. <Foo>),\n    var frame = stack[stack.length - 1];\n    // and record that it has one more element associated with it.\n    frame.debugElementStack.push(element);\n    // We only need this because we tail-optimize single-element\n    // children and directly handle them in an inner loop instead of\n    // creating separate frames for them.\n  };\n\n  popCurrentDebugStack = function () {\n    currentDebugStacks.pop();\n\n    if (currentDebugStacks.length === 0) {\n      // We are exiting the server renderer.\n      // Restore the previous (e.g. client) global stack implementation.\n      ReactDebugCurrentFrame.getCurrentStack = prevGetCurrentStackImpl;\n      prevGetCurrentStackImpl = null;\n    }\n  };\n\n  getCurrentServerStackImpl = function () {\n    if (currentDebugStacks.length === 0) {\n      // Nothing is currently rendering.\n      return '';\n    }\n    // ReactDOMServer is reentrant so there may be multiple calls at the same time.\n    // Take the frames from the innermost call which is the last in the array.\n    var frames = currentDebugStacks[currentDebugStacks.length - 1];\n    var stack = '';\n    // Go through every frame in the stack from the innermost one.\n    for (var i = frames.length - 1; i >= 0; i--) {\n      var frame = frames[i];\n      // Every frame might have more than one debug element stack entry associated with it.\n      // This is because single-child nesting doesn't create materialized frames.\n      // Instead it would push them through `pushElementToDebugStack()`.\n      var _debugElementStack = frame.debugElementStack;\n      for (var ii = _debugElementStack.length - 1; ii >= 0; ii--) {\n        stack += describeStackFrame(_debugElementStack[ii]);\n      }\n    }\n    return stack;\n  };\n}\n\nvar didWarnDefaultInputValue = false;\nvar didWarnDefaultChecked = false;\nvar didWarnDefaultSelectValue = false;\nvar didWarnDefaultTextareaValue = false;\nvar didWarnInvalidOptionChildren = false;\nvar didWarnAboutNoopUpdateForComponent = {};\nvar didWarnAboutBadClass = {};\nvar didWarnAboutDeprecatedWillMount = {};\nvar didWarnAboutUndefinedDerivedState = {};\nvar didWarnAboutUninitializedState = {};\nvar valuePropNames = ['value', 'defaultValue'];\nvar newlineEatingTags = {\n  listing: true,\n  pre: true,\n  textarea: true\n};\n\n// We accept any tag to be rendered but since this gets injected into arbitrary\n// HTML, we want to make sure that it's a safe tag.\n// http://www.w3.org/TR/REC-xml/#NT-Name\nvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\nvar validatedTagCache = {};\nfunction validateDangerousTag(tag) {\n  if (!validatedTagCache.hasOwnProperty(tag)) {\n    !VALID_TAG_REGEX.test(tag) ? invariant(false, 'Invalid tag: %s', tag) : void 0;\n    validatedTagCache[tag] = true;\n  }\n}\n\nvar styleNameCache = {};\nvar processStyleName = function (styleName) {\n  if (styleNameCache.hasOwnProperty(styleName)) {\n    return styleNameCache[styleName];\n  }\n  var result = hyphenateStyleName(styleName);\n  styleNameCache[styleName] = result;\n  return result;\n};\n\nfunction createMarkupForStyles(styles) {\n  var serialized = '';\n  var delimiter = '';\n  for (var styleName in styles) {\n    if (!styles.hasOwnProperty(styleName)) {\n      continue;\n    }\n    var isCustomProperty = styleName.indexOf('--') === 0;\n    var styleValue = styles[styleName];\n    {\n      if (!isCustomProperty) {\n        warnValidStyle$1(styleName, styleValue);\n      }\n    }\n    if (styleValue != null) {\n      serialized += delimiter + processStyleName(styleName) + ':';\n      serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);\n\n      delimiter = ';';\n    }\n  }\n  return serialized || null;\n}\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && getComponentName(_constructor) || 'ReactClass';\n    var warningKey = componentName + '.' + callerName;\n    if (didWarnAboutNoopUpdateForComponent[warningKey]) {\n      return;\n    }\n\n    warningWithoutStack$1(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op.\\n\\nPlease check the code for the %s component.', callerName, callerName, componentName);\n    didWarnAboutNoopUpdateForComponent[warningKey] = true;\n  }\n}\n\nfunction shouldConstruct(Component) {\n  return Component.prototype && Component.prototype.isReactComponent;\n}\n\nfunction getNonChildrenInnerMarkup(props) {\n  var innerHTML = props.dangerouslySetInnerHTML;\n  if (innerHTML != null) {\n    if (innerHTML.__html != null) {\n      return innerHTML.__html;\n    }\n  } else {\n    var content = props.children;\n    if (typeof content === 'string' || typeof content === 'number') {\n      return escapeTextForBrowser(content);\n    }\n  }\n  return null;\n}\n\nfunction flattenTopLevelChildren(children) {\n  if (!React.isValidElement(children)) {\n    return toArray(children);\n  }\n  var element = children;\n  if (element.type !== REACT_FRAGMENT_TYPE) {\n    return [element];\n  }\n  var fragmentChildren = element.props.children;\n  if (!React.isValidElement(fragmentChildren)) {\n    return toArray(fragmentChildren);\n  }\n  var fragmentChildElement = fragmentChildren;\n  return [fragmentChildElement];\n}\n\nfunction flattenOptionChildren(children) {\n  if (children === undefined || children === null) {\n    return children;\n  }\n  var content = '';\n  // Flatten children and warn if they aren't strings or numbers;\n  // invalid types are ignored.\n  React.Children.forEach(children, function (child) {\n    if (child == null) {\n      return;\n    }\n    content += child;\n    {\n      if (!didWarnInvalidOptionChildren && typeof child !== 'string' && typeof child !== 'number') {\n        didWarnInvalidOptionChildren = true;\n        warning$1(false, 'Only strings and numbers are supported as <option> children.');\n      }\n    }\n  });\n  return content;\n}\n\nvar emptyObject = {};\n{\n  Object.freeze(emptyObject);\n}\n\nfunction maskContext(type, context) {\n  var contextTypes = type.contextTypes;\n  if (!contextTypes) {\n    return emptyObject;\n  }\n  var maskedContext = {};\n  for (var contextName in contextTypes) {\n    maskedContext[contextName] = context[contextName];\n  }\n  return maskedContext;\n}\n\nfunction checkContextTypes(typeSpecs, values, location) {\n  {\n    checkPropTypes(typeSpecs, values, location, 'Component', getCurrentServerStackImpl);\n  }\n}\n\nfunction processContext(type, context) {\n  var maskedContext = maskContext(type, context);\n  {\n    if (type.contextTypes) {\n      checkContextTypes(type.contextTypes, maskedContext, 'context');\n    }\n  }\n  return maskedContext;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar STYLE = 'style';\nvar RESERVED_PROPS = {\n  children: null,\n  dangerouslySetInnerHTML: null,\n  suppressContentEditableWarning: null,\n  suppressHydrationWarning: null\n};\n\nfunction createOpenTagMarkup(tagVerbatim, tagLowercase, props, namespace, makeStaticMarkup, isRootElement) {\n  var ret = '<' + tagVerbatim;\n\n  for (var propKey in props) {\n    if (!hasOwnProperty.call(props, propKey)) {\n      continue;\n    }\n    var propValue = props[propKey];\n    if (propValue == null) {\n      continue;\n    }\n    if (propKey === STYLE) {\n      propValue = createMarkupForStyles(propValue);\n    }\n    var markup = null;\n    if (isCustomComponent(tagLowercase, props)) {\n      if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n        markup = createMarkupForCustomAttribute(propKey, propValue);\n      }\n    } else {\n      markup = createMarkupForProperty(propKey, propValue);\n    }\n    if (markup) {\n      ret += ' ' + markup;\n    }\n  }\n\n  // For static pages, no need to put React ID and checksum. Saves lots of\n  // bytes.\n  if (makeStaticMarkup) {\n    return ret;\n  }\n\n  if (isRootElement) {\n    ret += ' ' + createMarkupForRoot();\n  }\n  return ret;\n}\n\nfunction validateRenderResult(child, type) {\n  if (child === undefined) {\n    invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', getComponentName(type) || 'Component');\n  }\n}\n\nfunction resolve(child, context) {\n  while (React.isValidElement(child)) {\n    // Safe because we just checked it's an element.\n    var element = child;\n    var Component = element.type;\n    {\n      pushElementToDebugStack(element);\n    }\n    if (typeof Component !== 'function') {\n      break;\n    }\n    processChild(element, Component);\n  }\n\n  // Extra closure so queue and replace can be captured properly\n  function processChild(element, Component) {\n    var publicContext = processContext(Component, context);\n\n    var queue = [];\n    var replace = false;\n    var updater = {\n      isMounted: function (publicInstance) {\n        return false;\n      },\n      enqueueForceUpdate: function (publicInstance) {\n        if (queue === null) {\n          warnNoop(publicInstance, 'forceUpdate');\n          return null;\n        }\n      },\n      enqueueReplaceState: function (publicInstance, completeState) {\n        replace = true;\n        queue = [completeState];\n      },\n      enqueueSetState: function (publicInstance, currentPartialState) {\n        if (queue === null) {\n          warnNoop(publicInstance, 'setState');\n          return null;\n        }\n        queue.push(currentPartialState);\n      }\n    };\n\n    var inst = void 0;\n    if (shouldConstruct(Component)) {\n      inst = new Component(element.props, publicContext, updater);\n\n      if (typeof Component.getDerivedStateFromProps === 'function') {\n        {\n          if (inst.state === null || inst.state === undefined) {\n            var componentName = getComponentName(Component) || 'Unknown';\n            if (!didWarnAboutUninitializedState[componentName]) {\n              warningWithoutStack$1(false, '`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, inst.state === null ? 'null' : 'undefined', componentName);\n              didWarnAboutUninitializedState[componentName] = true;\n            }\n          }\n        }\n\n        var partialState = Component.getDerivedStateFromProps.call(null, element.props, inst.state);\n\n        {\n          if (partialState === undefined) {\n            var _componentName = getComponentName(Component) || 'Unknown';\n            if (!didWarnAboutUndefinedDerivedState[_componentName]) {\n              warningWithoutStack$1(false, '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', _componentName);\n              didWarnAboutUndefinedDerivedState[_componentName] = true;\n            }\n          }\n        }\n\n        if (partialState != null) {\n          inst.state = _assign({}, inst.state, partialState);\n        }\n      }\n    } else {\n      {\n        if (Component.prototype && typeof Component.prototype.render === 'function') {\n          var _componentName2 = getComponentName(Component) || 'Unknown';\n\n          if (!didWarnAboutBadClass[_componentName2]) {\n            warningWithoutStack$1(false, \"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" + 'This is likely to cause errors. Change %s to extend React.Component instead.', _componentName2, _componentName2);\n            didWarnAboutBadClass[_componentName2] = true;\n          }\n        }\n      }\n      inst = Component(element.props, publicContext, updater);\n      if (inst == null || inst.render == null) {\n        child = inst;\n        validateRenderResult(child, Component);\n        return;\n      }\n    }\n\n    inst.props = element.props;\n    inst.context = publicContext;\n    inst.updater = updater;\n\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = initialState = null;\n    }\n    if (typeof inst.UNSAFE_componentWillMount === 'function' || typeof inst.componentWillMount === 'function') {\n      if (typeof inst.componentWillMount === 'function') {\n        {\n          if (warnAboutDeprecatedLifecycles && inst.componentWillMount.__suppressDeprecationWarning !== true) {\n            var _componentName3 = getComponentName(Component) || 'Unknown';\n\n            if (!didWarnAboutDeprecatedWillMount[_componentName3]) {\n              lowPriorityWarning$1(false, '%s: componentWillMount() is deprecated and will be ' + 'removed in the next major version. Read about the motivations ' + 'behind this change: ' + 'https://fb.me/react-async-component-lifecycle-hooks' + '\\n\\n' + 'As a temporary workaround, you can rename to ' + 'UNSAFE_componentWillMount instead.', _componentName3);\n              didWarnAboutDeprecatedWillMount[_componentName3] = true;\n            }\n          }\n        }\n\n        // In order to support react-lifecycles-compat polyfilled components,\n        // Unsafe lifecycles should not be invoked for any component with the new gDSFP.\n        if (typeof Component.getDerivedStateFromProps !== 'function') {\n          inst.componentWillMount();\n        }\n      }\n      if (typeof inst.UNSAFE_componentWillMount === 'function' && typeof Component.getDerivedStateFromProps !== 'function') {\n        // In order to support react-lifecycles-compat polyfilled components,\n        // Unsafe lifecycles should not be invoked for any component with the new gDSFP.\n        inst.UNSAFE_componentWillMount();\n      }\n      if (queue.length) {\n        var oldQueue = queue;\n        var oldReplace = replace;\n        queue = null;\n        replace = false;\n\n        if (oldReplace && oldQueue.length === 1) {\n          inst.state = oldQueue[0];\n        } else {\n          var nextState = oldReplace ? oldQueue[0] : inst.state;\n          var dontMutate = true;\n          for (var i = oldReplace ? 1 : 0; i < oldQueue.length; i++) {\n            var partial = oldQueue[i];\n            var _partialState = typeof partial === 'function' ? partial.call(inst, nextState, element.props, publicContext) : partial;\n            if (_partialState != null) {\n              if (dontMutate) {\n                dontMutate = false;\n                nextState = _assign({}, nextState, _partialState);\n              } else {\n                _assign(nextState, _partialState);\n              }\n            }\n          }\n          inst.state = nextState;\n        }\n      } else {\n        queue = null;\n      }\n    }\n    child = inst.render();\n\n    {\n      if (child === undefined && inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        child = null;\n      }\n    }\n    validateRenderResult(child, Component);\n\n    var childContext = void 0;\n    if (typeof inst.getChildContext === 'function') {\n      var childContextTypes = Component.childContextTypes;\n      if (typeof childContextTypes === 'object') {\n        childContext = inst.getChildContext();\n        for (var contextKey in childContext) {\n          !(contextKey in childContextTypes) ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', getComponentName(Component) || 'Unknown', contextKey) : void 0;\n        }\n      } else {\n        warningWithoutStack$1(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', getComponentName(Component) || 'Unknown');\n      }\n    }\n    if (childContext) {\n      context = _assign({}, context, childContext);\n    }\n  }\n  return { child: child, context: context };\n}\n\nvar ReactDOMServerRenderer = function () {\n  // DEV-only\n\n  function ReactDOMServerRenderer(children, makeStaticMarkup) {\n    _classCallCheck(this, ReactDOMServerRenderer);\n\n    var flatChildren = flattenTopLevelChildren(children);\n\n    var topFrame = {\n      type: null,\n      // Assume all trees start in the HTML namespace (not totally true, but\n      // this is what we did historically)\n      domNamespace: Namespaces.html,\n      children: flatChildren,\n      childIndex: 0,\n      context: emptyObject,\n      footer: ''\n    };\n    {\n      topFrame.debugElementStack = [];\n    }\n    this.stack = [topFrame];\n    this.exhausted = false;\n    this.currentSelectValue = null;\n    this.previousWasTextNode = false;\n    this.makeStaticMarkup = makeStaticMarkup;\n\n    // Context (new API)\n    this.contextIndex = -1;\n    this.contextStack = [];\n    this.contextValueStack = [];\n    {\n      this.contextProviderStack = [];\n    }\n  }\n\n  /**\n   * Note: We use just two stacks regardless of how many context providers you have.\n   * Providers are always popped in the reverse order to how they were pushed\n   * so we always know on the way down which provider you'll encounter next on the way up.\n   * On the way down, we push the current provider, and its context value *before*\n   * we mutated it, onto the stacks. Therefore, on the way up, we always know which\n   * provider needs to be \"restored\" to which value.\n   * https://github.com/facebook/react/pull/12985#issuecomment-396301248\n   */\n\n  // TODO: type this more strictly:\n\n\n  ReactDOMServerRenderer.prototype.pushProvider = function pushProvider(provider) {\n    var index = ++this.contextIndex;\n    var context = provider.type._context;\n    var previousValue = context._currentValue;\n\n    // Remember which value to restore this context to on our way up.\n    this.contextStack[index] = context;\n    this.contextValueStack[index] = previousValue;\n    {\n      // Only used for push/pop mismatch warnings.\n      this.contextProviderStack[index] = provider;\n    }\n\n    // Mutate the current value.\n    context._currentValue = provider.props.value;\n  };\n\n  ReactDOMServerRenderer.prototype.popProvider = function popProvider(provider) {\n    var index = this.contextIndex;\n    {\n      !(index > -1 && provider === this.contextProviderStack[index]) ? warningWithoutStack$1(false, 'Unexpected pop.') : void 0;\n    }\n\n    var context = this.contextStack[index];\n    var previousValue = this.contextValueStack[index];\n\n    // \"Hide\" these null assignments from Flow by using `any`\n    // because conceptually they are deletions--as long as we\n    // promise to never access values beyond `this.contextIndex`.\n    this.contextStack[index] = null;\n    this.contextValueStack[index] = null;\n    {\n      this.contextProviderStack[index] = null;\n    }\n    this.contextIndex--;\n\n    // Restore to the previous value we stored as we were walking down.\n    context._currentValue = previousValue;\n  };\n\n  ReactDOMServerRenderer.prototype.read = function read(bytes) {\n    if (this.exhausted) {\n      return null;\n    }\n\n    var out = '';\n    while (out.length < bytes) {\n      if (this.stack.length === 0) {\n        this.exhausted = true;\n        break;\n      }\n      var frame = this.stack[this.stack.length - 1];\n      if (frame.childIndex >= frame.children.length) {\n        var _footer = frame.footer;\n        out += _footer;\n        if (_footer !== '') {\n          this.previousWasTextNode = false;\n        }\n        this.stack.pop();\n        if (frame.type === 'select') {\n          this.currentSelectValue = null;\n        } else if (frame.type != null && frame.type.type != null && frame.type.type.$$typeof === REACT_PROVIDER_TYPE) {\n          var provider = frame.type;\n          this.popProvider(provider);\n        }\n        continue;\n      }\n      var child = frame.children[frame.childIndex++];\n      {\n        pushCurrentDebugStack(this.stack);\n        // We're starting work on this frame, so reset its inner stack.\n        frame.debugElementStack.length = 0;\n        try {\n          // Be careful! Make sure this matches the PROD path below.\n          out += this.render(child, frame.context, frame.domNamespace);\n        } finally {\n          popCurrentDebugStack();\n        }\n      }\n    }\n    return out;\n  };\n\n  ReactDOMServerRenderer.prototype.render = function render(child, context, parentNamespace) {\n    if (typeof child === 'string' || typeof child === 'number') {\n      var text = '' + child;\n      if (text === '') {\n        return '';\n      }\n      if (this.makeStaticMarkup) {\n        return escapeTextForBrowser(text);\n      }\n      if (this.previousWasTextNode) {\n        return '<!-- -->' + escapeTextForBrowser(text);\n      }\n      this.previousWasTextNode = true;\n      return escapeTextForBrowser(text);\n    } else {\n      var nextChild = void 0;\n\n      var _resolve = resolve(child, context);\n\n      nextChild = _resolve.child;\n      context = _resolve.context;\n\n      if (nextChild === null || nextChild === false) {\n        return '';\n      } else if (!React.isValidElement(nextChild)) {\n        if (nextChild != null && nextChild.$$typeof != null) {\n          // Catch unexpected special types early.\n          var $$typeof = nextChild.$$typeof;\n          !($$typeof !== REACT_PORTAL_TYPE) ? invariant(false, 'Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.') : void 0;\n          // Catch-all to prevent an infinite loop if React.Children.toArray() supports some new type.\n          invariant(false, 'Unknown element-like object type: %s. This is likely a bug in React. Please file an issue.', $$typeof.toString());\n        }\n        var nextChildren = toArray(nextChild);\n        var frame = {\n          type: null,\n          domNamespace: parentNamespace,\n          children: nextChildren,\n          childIndex: 0,\n          context: context,\n          footer: ''\n        };\n        {\n          frame.debugElementStack = [];\n        }\n        this.stack.push(frame);\n        return '';\n      }\n      // Safe because we just checked it's an element.\n      var nextElement = nextChild;\n      var elementType = nextElement.type;\n\n      if (typeof elementType === 'string') {\n        return this.renderDOM(nextElement, context, parentNamespace);\n      }\n\n      switch (elementType) {\n        case REACT_STRICT_MODE_TYPE:\n        case REACT_ASYNC_MODE_TYPE:\n        case REACT_PROFILER_TYPE:\n        case REACT_FRAGMENT_TYPE:\n          {\n            var _nextChildren = toArray(nextChild.props.children);\n            var _frame = {\n              type: null,\n              domNamespace: parentNamespace,\n              children: _nextChildren,\n              childIndex: 0,\n              context: context,\n              footer: ''\n            };\n            {\n              _frame.debugElementStack = [];\n            }\n            this.stack.push(_frame);\n            return '';\n          }\n        case REACT_PLACEHOLDER_TYPE:\n          {\n            if (enableSuspenseServerRenderer) {\n              var _nextChildren2 = toArray(\n              // Always use the fallback when synchronously rendering to string.\n              nextChild.props.fallback);\n              var _frame2 = {\n                type: null,\n                domNamespace: parentNamespace,\n                children: _nextChildren2,\n                childIndex: 0,\n                context: context,\n                footer: ''\n              };\n              {\n                _frame2.debugElementStack = [];\n              }\n              this.stack.push(_frame2);\n              return '';\n            }\n          }\n        // eslint-disable-next-line-no-fallthrough\n        default:\n          break;\n      }\n      if (typeof elementType === 'object' && elementType !== null) {\n        switch (elementType.$$typeof) {\n          case REACT_FORWARD_REF_TYPE:\n            {\n              var element = nextChild;\n              var _nextChildren3 = toArray(elementType.render(element.props, element.ref));\n              var _frame3 = {\n                type: null,\n                domNamespace: parentNamespace,\n                children: _nextChildren3,\n                childIndex: 0,\n                context: context,\n                footer: ''\n              };\n              {\n                _frame3.debugElementStack = [];\n              }\n              this.stack.push(_frame3);\n              return '';\n            }\n          case REACT_PROVIDER_TYPE:\n            {\n              var provider = nextChild;\n              var nextProps = provider.props;\n              var _nextChildren4 = toArray(nextProps.children);\n              var _frame4 = {\n                type: provider,\n                domNamespace: parentNamespace,\n                children: _nextChildren4,\n                childIndex: 0,\n                context: context,\n                footer: ''\n              };\n              {\n                _frame4.debugElementStack = [];\n              }\n\n              this.pushProvider(provider);\n\n              this.stack.push(_frame4);\n              return '';\n            }\n          case REACT_CONTEXT_TYPE:\n            {\n              var consumer = nextChild;\n              var _nextProps = consumer.props;\n              var nextValue = consumer.type._currentValue;\n\n              var _nextChildren5 = toArray(_nextProps.children(nextValue));\n              var _frame5 = {\n                type: nextChild,\n                domNamespace: parentNamespace,\n                children: _nextChildren5,\n                childIndex: 0,\n                context: context,\n                footer: ''\n              };\n              {\n                _frame5.debugElementStack = [];\n              }\n              this.stack.push(_frame5);\n              return '';\n            }\n          default:\n            break;\n        }\n      }\n\n      var info = '';\n      {\n        var owner = nextElement._owner;\n        if (elementType === undefined || typeof elementType === 'object' && elementType !== null && Object.keys(elementType).length === 0) {\n          info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and \" + 'named imports.';\n        }\n        var ownerName = owner ? getComponentName(owner) : null;\n        if (ownerName) {\n          info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n        }\n      }\n      invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', elementType == null ? elementType : typeof elementType, info);\n    }\n  };\n\n  ReactDOMServerRenderer.prototype.renderDOM = function renderDOM(element, context, parentNamespace) {\n    var tag = element.type.toLowerCase();\n\n    var namespace = parentNamespace;\n    if (parentNamespace === Namespaces.html) {\n      namespace = getIntrinsicNamespace(tag);\n    }\n\n    {\n      if (namespace === Namespaces.html) {\n        // Should this check be gated by parent namespace? Not sure we want to\n        // allow <SVG> or <mATH>.\n        !(tag === element.type) ? warning$1(false, '<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', element.type) : void 0;\n      }\n    }\n\n    validateDangerousTag(tag);\n\n    var props = element.props;\n    if (tag === 'input') {\n      {\n        ReactControlledValuePropTypes.checkPropTypes('input', props);\n\n        if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnDefaultChecked) {\n          warning$1(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', 'A component', props.type);\n          didWarnDefaultChecked = true;\n        }\n        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnDefaultInputValue) {\n          warning$1(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', 'A component', props.type);\n          didWarnDefaultInputValue = true;\n        }\n      }\n\n      props = _assign({\n        type: undefined\n      }, props, {\n        defaultChecked: undefined,\n        defaultValue: undefined,\n        value: props.value != null ? props.value : props.defaultValue,\n        checked: props.checked != null ? props.checked : props.defaultChecked\n      });\n    } else if (tag === 'textarea') {\n      {\n        ReactControlledValuePropTypes.checkPropTypes('textarea', props);\n        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnDefaultTextareaValue) {\n          warning$1(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');\n          didWarnDefaultTextareaValue = true;\n        }\n      }\n\n      var initialValue = props.value;\n      if (initialValue == null) {\n        var defaultValue = props.defaultValue;\n        // TODO (yungsters): Remove support for children content in <textarea>.\n        var textareaChildren = props.children;\n        if (textareaChildren != null) {\n          {\n            warning$1(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');\n          }\n          !(defaultValue == null) ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : void 0;\n          if (Array.isArray(textareaChildren)) {\n            !(textareaChildren.length <= 1) ? invariant(false, '<textarea> can only have at most one child.') : void 0;\n            textareaChildren = textareaChildren[0];\n          }\n\n          defaultValue = '' + textareaChildren;\n        }\n        if (defaultValue == null) {\n          defaultValue = '';\n        }\n        initialValue = defaultValue;\n      }\n\n      props = _assign({}, props, {\n        value: undefined,\n        children: '' + initialValue\n      });\n    } else if (tag === 'select') {\n      {\n        ReactControlledValuePropTypes.checkPropTypes('select', props);\n\n        for (var i = 0; i < valuePropNames.length; i++) {\n          var propName = valuePropNames[i];\n          if (props[propName] == null) {\n            continue;\n          }\n          var isArray = Array.isArray(props[propName]);\n          if (props.multiple && !isArray) {\n            warning$1(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.', propName);\n          } else if (!props.multiple && isArray) {\n            warning$1(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.', propName);\n          }\n        }\n\n        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnDefaultSelectValue) {\n          warning$1(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');\n          didWarnDefaultSelectValue = true;\n        }\n      }\n      this.currentSelectValue = props.value != null ? props.value : props.defaultValue;\n      props = _assign({}, props, {\n        value: undefined\n      });\n    } else if (tag === 'option') {\n      var selected = null;\n      var selectValue = this.currentSelectValue;\n      var optionChildren = flattenOptionChildren(props.children);\n      if (selectValue != null) {\n        var value = void 0;\n        if (props.value != null) {\n          value = props.value + '';\n        } else {\n          value = optionChildren;\n        }\n        selected = false;\n        if (Array.isArray(selectValue)) {\n          // multiple\n          for (var j = 0; j < selectValue.length; j++) {\n            if ('' + selectValue[j] === value) {\n              selected = true;\n              break;\n            }\n          }\n        } else {\n          selected = '' + selectValue === value;\n        }\n\n        props = _assign({\n          selected: undefined,\n          children: undefined\n        }, props, {\n          selected: selected,\n          children: optionChildren\n        });\n      }\n    }\n\n    {\n      validatePropertiesInDevelopment(tag, props);\n    }\n\n    assertValidProps(tag, props);\n\n    var out = createOpenTagMarkup(element.type, tag, props, namespace, this.makeStaticMarkup, this.stack.length === 1);\n    var footer = '';\n    if (omittedCloseTags.hasOwnProperty(tag)) {\n      out += '/>';\n    } else {\n      out += '>';\n      footer = '</' + element.type + '>';\n    }\n    var children = void 0;\n    var innerMarkup = getNonChildrenInnerMarkup(props);\n    if (innerMarkup != null) {\n      children = [];\n      if (newlineEatingTags[tag] && innerMarkup.charAt(0) === '\\n') {\n        // text/html ignores the first character in these tags if it's a newline\n        // Prefer to break application/xml over text/html (for now) by adding\n        // a newline specifically to get eaten by the parser. (Alternately for\n        // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n        // \\r is normalized out by HTMLTextAreaElement#value.)\n        // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n        // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n        // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n        // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n        //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n        out += '\\n';\n      }\n      out += innerMarkup;\n    } else {\n      children = toArray(props.children);\n    }\n    var frame = {\n      domNamespace: getChildNamespace(parentNamespace, element.type),\n      type: tag,\n      children: children,\n      childIndex: 0,\n      context: context,\n      footer: footer\n    };\n    {\n      frame.debugElementStack = [];\n    }\n    this.stack.push(frame);\n    this.previousWasTextNode = false;\n    return out;\n  };\n\n  return ReactDOMServerRenderer;\n}();\n\n/**\n * Render a ReactElement to its initial HTML. This should only be used on the\n * server.\n * See https://reactjs.org/docs/react-dom-server.html#rendertostring\n */\nfunction renderToString(element) {\n  var renderer = new ReactDOMServerRenderer(element, false);\n  var markup = renderer.read(Infinity);\n  return markup;\n}\n\n/**\n * Similar to renderToString, except this doesn't create extra DOM attributes\n * such as data-react-id that React uses internally.\n * See https://reactjs.org/docs/react-dom-server.html#rendertostaticmarkup\n */\nfunction renderToStaticMarkup(element) {\n  var renderer = new ReactDOMServerRenderer(element, true);\n  var markup = renderer.read(Infinity);\n  return markup;\n}\n\nfunction _classCallCheck$1(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// This is a Readable Node.js stream which wraps the ReactDOMPartialRenderer.\n\nvar ReactMarkupReadableStream = function (_Readable) {\n  _inherits(ReactMarkupReadableStream, _Readable);\n\n  function ReactMarkupReadableStream(element, makeStaticMarkup) {\n    _classCallCheck$1(this, ReactMarkupReadableStream);\n\n    var _this = _possibleConstructorReturn(this, _Readable.call(this, {}));\n    // Calls the stream.Readable(options) constructor. Consider exposing built-in\n    // features like highWaterMark in the future.\n\n\n    _this.partialRenderer = new ReactDOMServerRenderer(element, makeStaticMarkup);\n    return _this;\n  }\n\n  ReactMarkupReadableStream.prototype._read = function _read(size) {\n    try {\n      this.push(this.partialRenderer.read(size));\n    } catch (err) {\n      this.emit('error', err);\n    }\n  };\n\n  return ReactMarkupReadableStream;\n}(stream.Readable);\n/**\n * Render a ReactElement to its initial HTML. This should only be used on the\n * server.\n * See https://reactjs.org/docs/react-dom-stream.html#rendertonodestream\n */\n\n\nfunction renderToNodeStream(element) {\n  return new ReactMarkupReadableStream(element, false);\n}\n\n/**\n * Similar to renderToNodeStream, except this doesn't create extra DOM attributes\n * such as data-react-id that React uses internally.\n * See https://reactjs.org/docs/react-dom-stream.html#rendertostaticnodestream\n */\nfunction renderToStaticNodeStream(element) {\n  return new ReactMarkupReadableStream(element, true);\n}\n\n// Note: when changing this, also consider https://github.com/facebook/react/issues/11526\nvar ReactDOMServerNode = {\n  renderToString: renderToString,\n  renderToStaticMarkup: renderToStaticMarkup,\n  renderToNodeStream: renderToNodeStream,\n  renderToStaticNodeStream: renderToStaticNodeStream,\n  version: ReactVersion\n};\n\nvar ReactDOMServerNode$1 = Object.freeze({\n\tdefault: ReactDOMServerNode\n});\n\nvar ReactDOMServer = ( ReactDOMServerNode$1 && ReactDOMServerNode ) || ReactDOMServerNode$1;\n\n// TODO: decide on the top-level export form.\n// This is hacky but makes it work with both Rollup and Jest\nvar server_node = ReactDOMServer.default || ReactDOMServer;\n\nmodule.exports = server_node;\n  })();\n}\n","'use strict';\n\nmodule.exports = require('./server.node');\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-dom-server.node.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom-server.node.development.js');\n}\n","/** @license React v16.5.2\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar _assign = require('object-assign');\nvar checkPropTypes = require('prop-types/checkPropTypes');\n\n// TODO: this is special because it gets imported during build.\n\nvar ReactVersion = '16.5.2';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\n\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_PLACEHOLDER_TYPE = hasSymbol ? Symbol.for('react.placeholder') : 0xead1;\n\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n\n// Exports ReactDOM.createRoot\n\n\n// Experimental error-boundary API that can recover from errors within a single\n// render phase\n\n// Suspense\nvar enableSuspense = false;\n// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:\n\n\n// In some cases, StrictMode should also double-render lifecycles.\n// This can be confusing for tests though,\n// And it can be bad for performance in production.\n// This feature flag can be used to control the behavior:\n\n\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n// replay the begin phase of a failed component inside invokeGuardedCallback.\n\n\n// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\n\n\n// Warn about legacy context API\n\n\n// Gather advanced timing metrics for Profiler subtrees.\n\n\n// Trace which interactions trigger each commit.\n\n\n// Only used in www builds.\n\n\n// Only used in www builds.\n\n\n// React Fire: prevent the value and checked attributes from syncing\n// with their related DOM properties\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function () {};\n\n{\n  validateFormat = function (format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error = void 0;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\n// Relying on the `invariant()` implementation lets us\n// preserve the format and params in the www builds.\n\n/**\n * Forked from fbjs/warning:\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n *\n * Only change is we use console.warn instead of console.error,\n * and do nothing when 'console' is not supported.\n * This really simplifies the code.\n * ---\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar lowPriorityWarning = function () {};\n\n{\n  var printWarning = function (format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.warn(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  lowPriorityWarning = function (condition, format) {\n    if (format === undefined) {\n      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nvar lowPriorityWarning$1 = lowPriorityWarning;\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warningWithoutStack = function () {};\n\n{\n  warningWithoutStack = function (condition, format) {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    if (format === undefined) {\n      throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (args.length > 8) {\n      // Check before the condition to catch violations early.\n      throw new Error('warningWithoutStack() currently supports at most 8 arguments.');\n    }\n    if (condition) {\n      return;\n    }\n    if (typeof console !== 'undefined') {\n      var _args$map = args.map(function (item) {\n        return '' + item;\n      }),\n          a = _args$map[0],\n          b = _args$map[1],\n          c = _args$map[2],\n          d = _args$map[3],\n          e = _args$map[4],\n          f = _args$map[5],\n          g = _args$map[6],\n          h = _args$map[7];\n\n      var message = 'Warning: ' + format;\n\n      // We intentionally don't use spread (or .apply) because it breaks IE9:\n      // https://github.com/facebook/react/issues/13610\n      switch (args.length) {\n        case 0:\n          console.error(message);\n          break;\n        case 1:\n          console.error(message, a);\n          break;\n        case 2:\n          console.error(message, a, b);\n          break;\n        case 3:\n          console.error(message, a, b, c);\n          break;\n        case 4:\n          console.error(message, a, b, c, d);\n          break;\n        case 5:\n          console.error(message, a, b, c, d, e);\n          break;\n        case 6:\n          console.error(message, a, b, c, d, e, f);\n          break;\n        case 7:\n          console.error(message, a, b, c, d, e, f, g);\n          break;\n        case 8:\n          console.error(message, a, b, c, d, e, f, g, h);\n          break;\n        default:\n          throw new Error('warningWithoutStack() currently supports at most 8 arguments.');\n      }\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      var argIndex = 0;\n      var _message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      throw new Error(_message);\n    } catch (x) {}\n  };\n}\n\nvar warningWithoutStack$1 = warningWithoutStack;\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + '.' + callerName;\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n    warningWithoutStack$1(false, \"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar emptyObject = {};\n{\n  Object.freeze(emptyObject);\n}\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n        return undefined;\n      }\n    });\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\n\n/**\n * Convenience component with default shallow equality check for sCU.\n */\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n  {\n    Object.seal(refObject);\n  }\n  return refObject;\n}\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null,\n  currentDispatcher: null\n};\n\nvar BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\nvar describeComponentFrame = function (name, source, ownerName) {\n  var sourceInfo = '';\n  if (source) {\n    var path = source.fileName;\n    var fileName = path.replace(BEFORE_SLASH_RE, '');\n    {\n      // In DEV, include code for a common special case:\n      // prefer \"folder/index.js\" instead of just \"index.js\".\n      if (/^index\\./.test(fileName)) {\n        var match = path.match(BEFORE_SLASH_RE);\n        if (match) {\n          var pathBeforeSlash = match[1];\n          if (pathBeforeSlash) {\n            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n            fileName = folderName + '/' + fileName;\n          }\n        }\n      }\n    }\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n};\n\nvar Resolved = 1;\n\n\n\n\nfunction refineResolvedThenable(thenable) {\n  return thenable._reactStatus === Resolved ? thenable._reactResult : null;\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n  {\n    if (typeof type.tag === 'number') {\n      warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_ASYNC_MODE_TYPE:\n      return 'AsyncMode';\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n    case REACT_PLACEHOLDER_TYPE:\n      return 'Placeholder';\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return 'Context.Consumer';\n      case REACT_PROVIDER_TYPE:\n        return 'Context.Provider';\n      case REACT_FORWARD_REF_TYPE:\n        var renderFn = type.render;\n        var functionName = renderFn.displayName || renderFn.name || '';\n        return type.displayName || (functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef');\n    }\n    if (typeof type.then === 'function') {\n      var thenable = type;\n      var resolvedThenable = refineResolvedThenable(thenable);\n      if (resolvedThenable) {\n        return getComponentName(resolvedThenable);\n      }\n    }\n  }\n  return null;\n}\n\nvar ReactDebugCurrentFrame = {};\n\nvar currentlyValidatingElement = null;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    currentlyValidatingElement = element;\n  }\n}\n\n{\n  // Stack implementation injected by the current renderer.\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = '';\n\n    // Add an extra top frame while an element is being validated\n    if (currentlyValidatingElement) {\n      var name = getComponentName(currentlyValidatingElement.type);\n      var owner = currentlyValidatingElement._owner;\n      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));\n    }\n\n    // Delegate to the injected renderer-specific implementation\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\nvar ReactSharedInternals = {\n  ReactCurrentOwner: ReactCurrentOwner,\n  // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n  assign: _assign\n};\n\n{\n  _assign(ReactSharedInternals, {\n    // These should not be included in production.\n    ReactDebugCurrentFrame: ReactDebugCurrentFrame,\n    // Shim for React DOM 16.0.0 which still destructured (but not used) this.\n    // TODO: remove in React 17.0.\n    ReactComponentTreeHook: {}\n  });\n}\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = warningWithoutStack$1;\n\n{\n  warning = function (condition, format) {\n    if (condition) {\n      return;\n    }\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n    // eslint-disable-next-line react-internal/warning-and-invariant-args\n\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));\n  };\n}\n\nvar warning$1 = warning;\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\nvar specialPropKeyWarningShown = void 0;\nvar specialPropRefWarningShown = void 0;\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    if (!specialPropKeyWarningShown) {\n      specialPropKeyWarningShown = true;\n      warningWithoutStack$1(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    if (!specialPropRefWarningShown) {\n      specialPropRefWarningShown = true;\n      warningWithoutStack$1(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, no instanceof check\n * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    });\n    // self and source are DEV only properties.\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    });\n    // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\nfunction createElement(type, config, children) {\n  var propName = void 0;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://reactjs.org/docs/react-api.html#createfactory\n */\n\n\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n}\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\nfunction cloneElement(element, config, children) {\n  !!(element === null || element === undefined) ? invariant(false, 'React.cloneElement(...): The argument must be a React element, but you passed %s.', element) : void 0;\n\n  var propName = void 0;\n\n  // Original props are copied\n  var props = _assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    var defaultProps = void 0;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\nvar POOL_SIZE = 10;\nvar traverseContextPool = [];\nfunction getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {\n  if (traverseContextPool.length) {\n    var traverseContext = traverseContextPool.pop();\n    traverseContext.result = mapResult;\n    traverseContext.keyPrefix = keyPrefix;\n    traverseContext.func = mapFunction;\n    traverseContext.context = mapContext;\n    traverseContext.count = 0;\n    return traverseContext;\n  } else {\n    return {\n      result: mapResult,\n      keyPrefix: keyPrefix,\n      func: mapFunction,\n      context: mapContext,\n      count: 0\n    };\n  }\n}\n\nfunction releaseTraverseContext(traverseContext) {\n  traverseContext.result = null;\n  traverseContext.keyPrefix = null;\n  traverseContext.func = null;\n  traverseContext.context = null;\n  traverseContext.count = 0;\n  if (traverseContextPool.length < POOL_SIZE) {\n    traverseContextPool.push(traverseContext);\n  }\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n    }\n  }\n\n  if (invokeCallback) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child = void 0;\n  var nextName = void 0;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (typeof iteratorFn === 'function') {\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === children.entries) {\n          !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(children);\n      var step = void 0;\n      var ii = 0;\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\n        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();\n      }\n      var childrenString = '' + children;\n      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof component === 'object' && component !== null && component.key != null) {\n    // Explicit key\n    return escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n\n\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {\n      return c;\n    });\n  } else if (mappedChild != null) {\n    if (isValidElement(mappedChild)) {\n      mappedChild = cloneAndReplaceKey(mappedChild,\n      // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children) {\n  return traverseAllChildren(children, function () {\n    return null;\n  }, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, function (child) {\n    return child;\n  });\n  return result;\n}\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;\n  return children;\n}\n\nfunction readContext(context, observedBits) {\n  var dispatcher = ReactCurrentOwner.currentDispatcher;\n  !(dispatcher !== null) ? invariant(false, 'Context.unstable_read(): Context can only be read while React is rendering, e.g. inside the render method or getDerivedStateFromProps.') : void 0;\n  return dispatcher.readContext(context, observedBits);\n}\n\nfunction createContext(defaultValue, calculateChangedBits) {\n  if (calculateChangedBits === undefined) {\n    calculateChangedBits = null;\n  } else {\n    {\n      !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warningWithoutStack$1(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;\n    }\n  }\n\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _calculateChangedBits: calculateChangedBits,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // These are circular\n    Provider: null,\n    Consumer: null,\n    unstable_read: null\n  };\n\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  context.Consumer = context;\n  context.unstable_read = readContext.bind(null, context);\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nfunction lazy(ctor) {\n  var thenable = null;\n  return {\n    then: function (resolve, reject) {\n      if (thenable === null) {\n        // Lazily create thenable by wrapping in an extra thenable.\n        thenable = ctor();\n        ctor = null;\n      }\n      return thenable.then(resolve, reject);\n    },\n\n    // React uses these fields to store the result.\n    _reactStatus: -1,\n    _reactResult: null\n  };\n}\n\nfunction forwardRef(render) {\n  {\n    if (typeof render !== 'function') {\n      warningWithoutStack$1(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      !(\n      // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object\n      render.length === 0 || render.length === 2) ? warningWithoutStack$1(false, 'forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.') : void 0;\n    }\n\n    if (render != null) {\n      !(render.defaultProps == null && render.propTypes == null) ? warningWithoutStack$1(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;\n    }\n  }\n\n  return {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n}\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' ||\n  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_ASYNC_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_PLACEHOLDER_TYPE || typeof type === 'object' && type !== null && (typeof type.then === 'function' || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);\n}\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\nvar propTypesMisspellWarningShown = void 0;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentName(ReactCurrentOwner.current.type);\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(elementProps) {\n  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {\n    var source = elementProps.__source;\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n    if (parentName) {\n      info = '\\n\\nCheck the top-level render call using <' + parentName + '>.';\n    }\n  }\n  return info;\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  var childOwner = '';\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = ' It was passed a child from ' + getComponentName(element._owner.type) + '.';\n  }\n\n  setCurrentlyValidatingElement(element);\n  {\n    warning$1(false, 'Each child in an array or iterator should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);\n  }\n  setCurrentlyValidatingElement(null);\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step = void 0;\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  var type = element.type;\n  var name = void 0,\n      propTypes = void 0;\n  if (typeof type === 'function') {\n    // Class or functional component\n    name = type.displayName || type.name;\n    propTypes = type.propTypes;\n  } else if (typeof type === 'object' && type !== null && type.$$typeof === REACT_FORWARD_REF_TYPE) {\n    // ForwardRef\n    var functionName = type.render.displayName || type.render.name || '';\n    name = type.displayName || (functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef');\n    propTypes = type.propTypes;\n  } else {\n    return;\n  }\n  if (propTypes) {\n    setCurrentlyValidatingElement(element);\n    checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);\n    setCurrentlyValidatingElement(null);\n  } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n    propTypesMisspellWarningShown = true;\n    warningWithoutStack$1(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\n  }\n  if (typeof type.getDefaultProps === 'function') {\n    !type.getDefaultProps.isReactClassApproved ? warningWithoutStack$1(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;\n  }\n}\n\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\nfunction validateFragmentProps(fragment) {\n  setCurrentlyValidatingElement(fragment);\n\n  var keys = Object.keys(fragment.props);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (key !== 'children' && key !== 'key') {\n      warning$1(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n      break;\n    }\n  }\n\n  if (fragment.ref !== null) {\n    warning$1(false, 'Invalid attribute `ref` supplied to `React.Fragment`.');\n  }\n\n  setCurrentlyValidatingElement(null);\n}\n\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type);\n\n  // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n  if (!validType) {\n    var info = '';\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendum(props);\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString = void 0;\n    if (type === null) {\n      typeString = 'null';\n    } else if (Array.isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = '<' + (getComponentName(type.type) || 'Unknown') + ' />';\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    warning$1(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n  }\n\n  var element = createElement.apply(this, arguments);\n\n  // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n  if (element == null) {\n    return element;\n  }\n\n  // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\n\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n  // Legacy hook: remove it\n  {\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\n\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n  validatePropTypes(newElement);\n  return newElement;\n}\n\nvar React = {\n  Children: {\n    map: mapChildren,\n    forEach: forEachChildren,\n    count: countChildren,\n    toArray: toArray,\n    only: onlyChild\n  },\n\n  createRef: createRef,\n  Component: Component,\n  PureComponent: PureComponent,\n\n  createContext: createContext,\n  forwardRef: forwardRef,\n\n  Fragment: REACT_FRAGMENT_TYPE,\n  StrictMode: REACT_STRICT_MODE_TYPE,\n  unstable_AsyncMode: REACT_ASYNC_MODE_TYPE,\n  unstable_Profiler: REACT_PROFILER_TYPE,\n\n  createElement: createElementWithValidation,\n  cloneElement: cloneElementWithValidation,\n  createFactory: createFactoryWithValidation,\n  isValidElement: isValidElement,\n\n  version: ReactVersion,\n\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals\n};\n\nif (enableSuspense) {\n  React.Placeholder = REACT_PLACEHOLDER_TYPE;\n  React.lazy = lazy;\n}\n\n\n\nvar React$2 = Object.freeze({\n\tdefault: React\n});\n\nvar React$3 = ( React$2 && React ) || React$2;\n\n// TODO: decide on the top-level export form.\n// This is hacky but makes it work with both Rollup and Jest.\nvar react = React$3.default || React$3;\n\nmodule.exports = react;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\nconst Joi = require('joi');\n\nconst Request = require('./request');\nconst Response = require('./response');\nconst Symbols = require('./symbols');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.options = Joi.object().keys({\n    url: Joi.alternatives([\n        Joi.string(),\n        Joi.object().keys({\n            protocol: Joi.string(),\n            hostname: Joi.string(),\n            port: Joi.any(),\n            pathname: Joi.string().required(),\n            query: Joi.any()\n        })\n    ])\n        .required(),\n    headers: Joi.object(),\n    payload: Joi.any(),\n    simulate: {\n        end: Joi.boolean(),\n        split: Joi.boolean(),\n        error: Joi.boolean(),\n        close: Joi.boolean()\n    },\n    authority: Joi.string(),\n    remoteAddress: Joi.string(),\n    method: Joi.string(),\n    validate: Joi.boolean()\n});\n\n\nexports.inject = function (dispatchFunc, options) {\n\n    options = (typeof options === 'string' ? { url: options } : options);\n\n    if (options.validate !== false) {                                                           // Defaults to true\n        try {\n            Hoek.assert(typeof dispatchFunc === 'function', 'Invalid dispatch function');\n            Joi.assert(options, internals.options);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n\n    return new Promise((resolve) => {\n\n        const req = new Request(options);\n        const res = new Response(req, resolve);\n\n        req.prepare(() => dispatchFunc(req, res));\n    });\n};\n\n\nexports.isInjection = function (obj) {\n\n    return !!obj[Symbols.injection];\n};\n","'use strict';\n\n// Load modules\n\nconst Stream = require('stream');\nconst Url = require('url');\nconst Util = require('util');\n\nconst Symbols = require('./symbols');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports = module.exports = internals.Request = function (options) {\n\n    Stream.Readable.call(this);\n\n    // options: method, url, payload, headers, remoteAddress\n\n    let url = options.url;\n    if (typeof url === 'object') {\n        url = Url.format(url);\n    }\n\n    const uri = Url.parse(url);\n    this.url = uri.path;\n\n    this.httpVersion = '1.1';\n    this.method = (options.method ? options.method.toUpperCase() : 'GET');\n\n    this.headers = {};\n    const headers = options.headers || {};\n    const fields = Object.keys(headers);\n    fields.forEach((field) => {\n\n        this.headers[field.toLowerCase()] = headers[field];\n    });\n\n    this.headers['user-agent'] = this.headers['user-agent'] || 'shot';\n\n    const hostHeaderFromUri = function () {\n\n        if (uri.port) {\n            return uri.host;\n        }\n\n        if (uri.protocol) {\n            return uri.hostname + (uri.protocol === 'https:' ? ':443' : ':80');\n        }\n\n        return null;\n    };\n\n    this.headers.host = this.headers.host || hostHeaderFromUri() || options.authority || 'localhost:80';\n\n    this.connection = {\n        remoteAddress: options.remoteAddress || '127.0.0.1'\n    };\n\n    let payload = options.payload || null;\n    if (payload &&\n        typeof payload !== 'string' &&\n        !(payload instanceof Stream) &&\n        !Buffer.isBuffer(payload)) {\n\n        payload = JSON.stringify(payload);\n        this.headers['content-type'] = this.headers['content-type'] || 'application/json';\n    }\n\n    // Set the content-length for the corresponding payload if none set\n\n    if (payload &&\n        !(payload instanceof Stream) &&\n        !this.headers.hasOwnProperty('content-length')) {\n\n        this.headers['content-length'] = (Buffer.isBuffer(payload) ? payload.length : Buffer.byteLength(payload)).toString();\n    }\n\n    // Use _shot namespace to avoid collision with Node\n\n    this._shot = {\n        payload,\n        isDone: false,\n        simulate: options.simulate || {}\n    };\n\n    return this;\n};\n\nUtil.inherits(internals.Request, Stream.Readable);\n\n\ninternals.Request.prototype[Symbols.injection] = true;\n\n\ninternals.Request.prototype.prepare = function (next) {\n\n    if (this._shot.payload instanceof Stream === false) {\n        return next();\n    }\n\n    const chunks = [];\n\n    this._shot.payload.on('data', (chunk) => chunks.push(Buffer.from(chunk)));\n\n    this._shot.payload.on('end', () => {\n\n        const payload = Buffer.concat(chunks);\n        this.headers['content-length'] = this.headers['content-length'] || payload.length;\n        this._shot.payload = payload;\n        return next();\n    });\n};\n\n\ninternals.Request.prototype._read = function (size) {\n\n    setImmediate(() => {\n\n        if (this._shot.isDone) {\n            /* $lab:coverage:off$ */\n            if (this._shot.simulate.end !== false) {        // 'end' defaults to true\n                this.push(null);\n            }\n            /* $lab:coverage:on$ */\n\n            return;\n        }\n\n        this._shot.isDone = true;\n\n        if (this._shot.payload) {\n            if (this._shot.simulate.split) {\n                this.push(this._shot.payload.slice(0, 1));\n                this.push(this._shot.payload.slice(1));\n            }\n            else {\n                this.push(this._shot.payload);\n            }\n        }\n\n        if (this._shot.simulate.error) {\n            this.emit('error', new Error('Simulated'));\n        }\n\n        if (this._shot.simulate.close) {\n            this.emit('close');\n        }\n\n        if (this._shot.simulate.end !== false) {        // 'end' defaults to true\n            this.push(null);\n        }\n    });\n};\n\n\ninternals.Request.prototype.destroy = function () {\n\n};\n","'use strict';\n\n// Load modules\n\nconst Http = require('http');\nconst Stream = require('stream');\n\nconst Symbols = require('./symbols');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports = module.exports = internals.Response = class extends Http.ServerResponse {\n\n    constructor(req, onEnd) {\n\n        super({ method: req.method, httpVersionMajor: 1, httpVersionMinor: 1 });\n        this._shot = { headers: null, trailers: {}, payloadChunks: [] };\n        this._headers = {};      // This forces node@8 to always render the headers\n        this.assignSocket(internals.nullSocket());\n\n        this.once('finish', () => {\n\n            const res = internals.payload(this);\n            res.raw.req = req;\n            process.nextTick(() => onEnd(res));\n        });\n    }\n\n    writeHead() {\n\n        const result = super.writeHead.apply(this, arguments);\n\n        this._shot.headers = Object.assign({}, this._headers);       // Should be .getHeaders() since node v7.7\n\n        // Add raw headers\n\n        ['Date', 'Connection', 'Transfer-Encoding'].forEach((name) => {\n\n            const regex = new RegExp('\\\\r\\\\n' + name + ': ([^\\\\r]*)\\\\r\\\\n');\n            const field = this._header.match(regex);\n            if (field) {\n                this._shot.headers[name.toLowerCase()] = field[1];\n            }\n        });\n\n        return result;\n    }\n\n    write(data, encoding, callback) {\n\n        super.write(data, encoding, callback);\n        this._shot.payloadChunks.push(new Buffer(data, encoding));\n        return true;                                                    // Write always returns false when disconnected\n    }\n\n    end(data, encoding, callback) {\n\n        if (data) {\n            this.write(data, encoding);\n        }\n\n        super.end(callback);\n        this.emit('finish');\n    }\n\n    destroy() {\n\n    }\n\n    addTrailers(trailers) {\n\n        for (const key in trailers) {\n            this._shot.trailers[key.toLowerCase().trim()] = trailers[key].toString().trim();\n        }\n    }\n};\n\n\ninternals.Response.prototype[Symbols.injection] = true;\n\n\ninternals.payload = function (response) {\n\n    // Prepare response object\n\n    const res = {\n        raw: {\n            res: response\n        },\n        headers: response._shot.headers,\n        statusCode: response.statusCode,\n        statusMessage: response.statusMessage,\n        trailers: {}\n    };\n\n    // Prepare payload and trailers\n\n    const rawBuffer = Buffer.concat(response._shot.payloadChunks);\n    res.rawPayload = rawBuffer;\n    res.payload = rawBuffer.toString();\n    res.trailers = response._shot.trailers;\n\n    return res;\n};\n\n\n// Throws away all written data to prevent response from buffering payload\n\ninternals.nullSocket = function () {\n\n    return new Stream.Writable({\n        write(chunk, encoding, callback) {\n\n            setImmediate(callback);\n        }\n    });\n};\n","'use strict';\n\n// Load modules\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports.injection = Symbol('injection');\n","'use strict';\n\n// Load modules\n\nconst Querystring = require('querystring');\n\nconst Boom = require('boom');\nconst Bounce = require('bounce');\nconst Cryptiles = require('cryptiles');\nconst Hoek = require('hoek');\nconst Iron = require('iron');\nconst Joi = require('joi');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.schema = Joi.object({\n    strictHeader: Joi.boolean(),\n    ignoreErrors: Joi.boolean(),\n    isSecure: Joi.boolean(),\n    isHttpOnly: Joi.boolean(),\n    isSameSite: Joi.valid('Strict', 'Lax').allow(false),\n    path: Joi.string().allow(null),\n    domain: Joi.string().allow(null),\n    ttl: Joi.number().allow(null),\n    encoding: Joi.string().valid('base64json', 'base64', 'form', 'iron', 'none'),\n    sign: Joi.object({\n        password: [Joi.string(), Joi.binary(), Joi.object()],\n        integrity: Joi.object()\n    }),\n    iron: Joi.object(),\n    password: [Joi.string(), Joi.binary(), Joi.object()],\n\n    // Used by hapi\n\n    clearInvalid: Joi.boolean(),\n    autoValue: Joi.any(),\n    passThrough: Joi.boolean()\n});\n\n\ninternals.defaults = {\n    strictHeader: true,                             // Require an RFC 6265 compliant header format\n    ignoreErrors: false,\n    isSecure: true,\n    isHttpOnly: true,\n    isSameSite: 'Strict',\n    path: null,\n    domain: null,\n    ttl: null,                                      // MSecs, 0 means remove\n    encoding: 'none'                                // options: 'base64json', 'base64', 'form', 'iron', 'none'\n};\n\n\nexports.Definitions = internals.Definitions = function (options) {\n\n    this.settings = Hoek.applyToDefaults(internals.defaults, options || {});\n    Joi.assert(this.settings, internals.schema, 'Invalid state definition defaults');\n\n    this.cookies = {};\n    this.names = [];\n};\n\n\ninternals.Definitions.prototype.add = function (name, options) {\n\n    Hoek.assert(name && typeof name === 'string', 'Invalid name');\n    Hoek.assert(!this.cookies[name], 'State already defined:', name);\n\n    const settings = Hoek.applyToDefaults(this.settings, options || {}, true);\n    Joi.assert(settings, internals.schema, 'Invalid state definition: ' + name);\n\n    this.cookies[name] = settings;\n    this.names.push(name);\n};\n\n\ninternals.empty = new internals.Definitions();\n\n\n// Header format\n\n//                      1: name                2: quoted  3: value\ninternals.parseRx = /\\s*([^=\\s]*)\\s*=\\s*(?:(?:\"([^\\\"]*)\")|([^\\;]*))(?:(?:;\\s*)|$)/g;\n\ninternals.validateRx = {\n    nameRx: {\n        strict: /^[^\\x00-\\x20\\(\\)<>@\\,;\\:\\\\\"\\/\\[\\]\\?\\=\\{\\}\\x7F]+$/,\n        loose: /^[^=\\s]*$/\n    },\n    valueRx: {\n        strict: /^[^\\x00-\\x20\\\"\\,\\;\\\\\\x7F]*$/,\n        loose: /^(?:\"([^\\\"]*)\")|(?:[^\\;]*)$/\n    },\n    domainRx: /^\\.?[a-z\\d]+(?:(?:[a-z\\d]*)|(?:[a-z\\d\\-]*[a-z\\d]))(?:\\.[a-z\\d]+(?:(?:[a-z\\d]*)|(?:[a-z\\d\\-]*[a-z\\d])))*$/,\n    domainLabelLenRx: /^\\.?[a-z\\d\\-]{1,63}(?:\\.[a-z\\d\\-]{1,63})*$/,\n    pathRx: /^\\/[^\\x00-\\x1F\\;]*$/\n};\n\n//                      1: name         2: value\ninternals.pairsRx = /\\s*([^=\\s]*)\\s*=\\s*([^\\;]*)(?:(?:;\\s*)|$)/g;\n\n\ninternals.Definitions.prototype.parse = async function (cookies) {\n\n    const state = {};\n    const names = [];\n    const verify = cookies.replace(internals.parseRx, ($0, $1, $2, $3) => {\n\n        const name = $1;\n        const value = $2 || $3 || '';\n\n        if (state[name]) {\n            if (!Array.isArray(state[name])) {\n                state[name] = [state[name]];\n            }\n\n            state[name].push(value);\n        }\n        else {\n            state[name] = value;\n            names.push(name);\n        }\n\n        return '';\n    });\n\n    // Validate cookie header syntax\n\n    const failed = [];                                                // All errors\n\n    if (verify !== '') {\n        if (!this.settings.ignoreErrors) {\n            throw Boom.badRequest('Invalid cookie header');\n        }\n\n        failed.push({ settings: this.settings, reason: `Header contains unexpected syntax: ${verify}` });\n    }\n\n    // Collect errors\n\n    const errored = [];                                               // Unignored errors\n    const record = (reason, name, value, definition) => {\n\n        const details = {\n            name,\n            value,\n            settings: definition,\n            reason: typeof reason === 'string' ? reason : reason.message\n        };\n\n        failed.push(details);\n        if (!definition.ignoreErrors) {\n            errored.push(details);\n        }\n    };\n\n    // Parse cookies\n\n    const parsed = {};\n    for (let i = 0; i < names.length; ++i) {\n        const name = names[i];\n        const value = state[name];\n        const definition = this.cookies[name] || this.settings;\n\n        // Validate cookie\n\n        if (definition.strictHeader) {\n            const reason = internals.validate(name, state);\n            if (reason) {\n                record(reason, name, value, definition);\n                continue;\n            }\n        }\n\n        // Check cookie format\n\n        if (definition.encoding === 'none') {\n            parsed[name] = value;\n            continue;\n        }\n\n        // Single value\n\n        if (!Array.isArray(value)) {\n            try {\n                const unsigned = await internals.unsign(name, value, definition);\n                const result = await internals.decode(unsigned, definition);\n                parsed[name] = result;\n            }\n            catch (err) {\n                Bounce.rethrow(err, 'system');\n                record(err, name, value, definition);\n            }\n\n            continue;\n        }\n\n        // Array\n\n        const arrayResult = [];\n        for (let j = 0; j < value.length; ++j) {\n            const arrayValue = value[j];\n\n            try {\n                const unsigned = await internals.unsign(name, arrayValue, definition);\n                const result = await internals.decode(unsigned, definition);\n                arrayResult.push(result);\n            }\n            catch (err) {\n                Bounce.rethrow(err, 'system');\n                record(err, name, value, definition);\n            }\n        }\n\n        parsed[name] = arrayResult;\n    }\n\n    if (errored.length) {\n        const error = Boom.badRequest('Invalid cookie value', errored);\n        error.states = parsed;\n        error.failed = failed;\n        throw error;\n    }\n\n    return { states: parsed, failed };\n};\n\n\ninternals.validate = function (name, state) {\n\n    if (!name.match(internals.validateRx.nameRx.strict)) {\n        return 'Invalid cookie name';\n    }\n\n    const values = [].concat(state[name]);\n    for (let i = 0; i < values.length; ++i) {\n        if (!values[i].match(internals.validateRx.valueRx.strict)) {\n            return 'Invalid cookie value';\n        }\n    }\n\n    return null;\n};\n\n\ninternals.macPrefix = 'hapi.signed.cookie.1';\n\n\ninternals.unsign = async function (name, value, definition) {\n\n    if (!definition.sign) {\n        return value;\n    }\n\n    const pos = value.lastIndexOf('.');\n    if (pos === -1) {\n        throw Boom.badRequest('Missing signature separator');\n    }\n\n    const unsigned = value.slice(0, pos);\n    const sig = value.slice(pos + 1);\n\n    if (!sig) {\n        throw Boom.badRequest('Missing signature');\n    }\n\n    const sigParts = sig.split('*');\n    if (sigParts.length !== 2) {\n        throw Boom.badRequest('Invalid signature format');\n    }\n\n    const hmacSalt = sigParts[0];\n    const hmac = sigParts[1];\n\n    const macOptions = Hoek.clone(definition.sign.integrity || Iron.defaults.integrity);\n    macOptions.salt = hmacSalt;\n    const mac = await Iron.hmacWithPassword(definition.sign.password, macOptions, [internals.macPrefix, name, unsigned].join('\\n'));\n    if (!Cryptiles.fixedTimeComparison(mac.digest, hmac)) {\n        throw Boom.badRequest('Invalid hmac value');\n    }\n\n    return unsigned;\n};\n\n\ninternals.decode = async function (value, definition) {\n\n    if (!value &&\n        definition.encoding === 'form') {\n\n        return {};\n    }\n\n    Hoek.assert(typeof value === 'string', 'Invalid string');\n\n    // Encodings: 'base64json', 'base64', 'form', 'iron', 'none'\n\n    if (definition.encoding === 'iron') {\n        return await Iron.unseal(value, definition.password, definition.iron || Iron.defaults);\n    }\n\n    if (definition.encoding === 'base64json') {\n        const decoded = (Buffer.from(value, 'base64')).toString('binary');\n        try {\n            return JSON.parse(decoded);\n        }\n        catch (err) {\n            throw Boom.badRequest('Invalid JSON payload');\n        }\n    }\n\n    if (definition.encoding === 'base64') {\n        return (Buffer.from(value, 'base64')).toString('binary');\n    }\n\n    // encoding: 'form'\n\n    return Querystring.parse(value);\n};\n\n\ninternals.Definitions.prototype.format = async function (cookies) {\n\n    if (!cookies ||\n        (Array.isArray(cookies) && !cookies.length)) {\n\n        return [];\n    }\n\n    if (!Array.isArray(cookies)) {\n        cookies = [cookies];\n    }\n\n    const header = [];\n    for (let i = 0; i < cookies.length; ++i) {\n        const cookie = cookies[i];\n\n        // Apply definition to local configuration\n\n        const base = this.cookies[cookie.name] || this.settings;\n        const definition = cookie.options ? Hoek.applyToDefaults(base, cookie.options, true) : base;\n\n        // Validate name\n\n        const nameRx = (definition.strictHeader ? internals.validateRx.nameRx.strict : internals.validateRx.nameRx.loose);\n        if (!nameRx.test(cookie.name)) {\n            throw Boom.badImplementation('Invalid cookie name: ' + cookie.name);\n        }\n\n        // Prepare value (encode, sign)\n\n        const value = await exports.prepareValue(cookie.name, cookie.value, definition);\n\n        // Validate prepared value\n\n        const valueRx = (definition.strictHeader ? internals.validateRx.valueRx.strict : internals.validateRx.valueRx.loose);\n        if (value &&\n            (typeof value !== 'string' || !value.match(valueRx))) {\n\n            throw Boom.badImplementation('Invalid cookie value: ' + cookie.value);\n        }\n\n        // Construct cookie\n\n        let segment = cookie.name + '=' + (value || '');\n\n        if (definition.ttl !== null &&\n            definition.ttl !== undefined) {            // Can be zero\n\n            const expires = new Date(definition.ttl ? Date.now() + definition.ttl : 0);\n            segment = segment + '; Max-Age=' + Math.floor(definition.ttl / 1000) + '; Expires=' + expires.toUTCString();\n        }\n\n        if (definition.isSecure) {\n            segment = segment + '; Secure';\n        }\n\n        if (definition.isHttpOnly) {\n            segment = segment + '; HttpOnly';\n        }\n\n        if (definition.isSameSite) {\n            segment = segment + `; SameSite=${definition.isSameSite}`;\n        }\n\n        if (definition.domain) {\n            const domain = definition.domain.toLowerCase();\n            if (!domain.match(internals.validateRx.domainLabelLenRx)) {\n                throw Boom.badImplementation('Cookie domain too long: ' + definition.domain);\n            }\n\n            if (!domain.match(internals.validateRx.domainRx)) {\n                throw Boom.badImplementation('Invalid cookie domain: ' + definition.domain);\n            }\n\n            segment = segment + '; Domain=' + domain;\n        }\n\n        if (definition.path) {\n            if (!definition.path.match(internals.validateRx.pathRx)) {\n                throw Boom.badImplementation('Invalid cookie path: ' + definition.path);\n            }\n\n            segment = segment + '; Path=' + definition.path;\n        }\n\n        header.push(segment);\n    }\n\n    return header;\n};\n\n\nexports.prepareValue = async function (name, value, options) {\n\n    Hoek.assert(options && typeof options === 'object', 'Missing or invalid options');\n\n    try {\n        const encoded = await internals.encode(value, options);\n        const signed = await internals.sign(name, encoded, options.sign);\n        return signed;\n    }\n    catch (err) {\n        throw Boom.badImplementation('Failed to encode cookie (' + name + ') value: ' + err.message);\n    }\n};\n\n\ninternals.encode = function (value, options) {\n\n    // Encodings: 'base64json', 'base64', 'form', 'iron', 'none'\n\n    if (value === undefined ||\n        options.encoding === 'none') {\n\n        return value;\n    }\n\n    if (options.encoding === 'iron') {\n        return Iron.seal(value, options.password, options.iron || Iron.defaults);\n    }\n\n    if (options.encoding === 'base64') {\n        return (Buffer.from(value, 'binary')).toString('base64');\n    }\n\n    if (options.encoding === 'base64json') {\n        const stringified = JSON.stringify(value);\n        return (Buffer.from(stringified, 'binary')).toString('base64');\n    }\n\n    // encoding: 'form'\n\n    return Querystring.stringify(value);\n};\n\n\ninternals.sign = async function (name, value, options) {\n\n    if (value === undefined ||\n        !options) {\n\n        return value;\n    }\n\n    const mac = await Iron.hmacWithPassword(options.password, options.integrity || Iron.defaults.integrity, [internals.macPrefix, name, value].join('\\n'));\n    const signed = value + '.' + mac.salt + '*' + mac.digest;\n    return signed;\n};\n\n\ninternals.Definitions.prototype.passThrough = function (header, fallback) {\n\n    if (!this.names.length) {\n        return header;\n    }\n\n    const exclude = [];\n    for (let i = 0; i < this.names.length; ++i) {\n        const name = this.names[i];\n        const definition = this.cookies[name];\n        const passCookie = definition.passThrough !== undefined ? definition.passThrough : fallback;\n        if (!passCookie) {\n            exclude.push(name);\n        }\n    }\n\n    return exports.exclude(header, exclude);\n};\n\n\nexports.exclude = function (cookies, excludes) {\n\n    let result = '';\n    const verify = cookies.replace(internals.pairsRx, ($0, $1, $2) => {\n\n        if (excludes.indexOf($1) === -1) {\n            result = result + (result ? ';' : '') + $1 + '=' + $2;\n        }\n\n        return '';\n    });\n\n    return verify === '' ? result : Boom.badRequest('Invalid cookie header');\n};\n","'use strict';\n\n// Load modules\n\nconst Fs = require('fs');\nconst Os = require('os');\nconst Querystring = require('querystring');\nconst Stream = require('stream');\nconst Zlib = require('zlib');\n\nconst Boom = require('boom');\nconst Content = require('content');\nconst Hoek = require('hoek');\nconst Pez = require('pez');\nconst Wreck = require('wreck');\n\n\n// Declare internals\n\nconst internals = {\n    decoders: {\n        gzip: (options) => Zlib.createGunzip(options),\n        deflate: (options) => Zlib.createInflate(options)\n    }\n};\n\n\nexports.parse = async function (req, tap, options) {\n\n    Hoek.assert(options, 'Missing options');\n    Hoek.assert(options.parse !== undefined, 'Missing parse option setting');\n    Hoek.assert(options.output !== undefined, 'Missing output option setting');\n\n    // Content size\n\n    const contentLength = req.headers['content-length'];\n    if (options.maxBytes !== undefined &&\n        contentLength &&\n        parseInt(contentLength, 10) > options.maxBytes) {\n\n        throw Boom.entityTooLarge('Payload content length greater than maximum allowed: ' + options.maxBytes);\n    }\n\n    // Content type\n\n    const contentType = Content.type(options.override || req.headers['content-type'] || options.defaultContentType || 'application/octet-stream');\n    try {\n        if (options.allow &&\n            options.allow.indexOf(contentType.mime) === -1) {\n\n            throw Boom.unsupportedMediaType();\n        }\n\n        const parsed = { mime: contentType.mime };\n\n        // Parse: true\n\n        if (options.parse === true) {\n            parsed.payload = await internals.parse(req, tap, options, contentType);\n            return parsed;\n        }\n\n        // Parse: false, 'gunzip'\n\n        parsed.payload = await internals.raw(req, tap, options);\n        return parsed;\n    }\n    catch (err) {\n        err.mime = contentType.mime;\n        throw err;\n    }\n};\n\n\ninternals.parse = async function (req, tap, options, contentType) {\n\n    const output = options.output;        // Output: 'data', 'stream', 'file'\n    let source = internals.decoder(req, options);\n\n    // Tap request\n\n    if (tap) {\n        source = internals.pipe(source, tap);\n    }\n\n    // Multipart\n\n    if (contentType.mime === 'multipart/form-data') {\n        if (options.multipart === false) {                            // Defaults to true\n            throw Boom.unsupportedMediaType();\n        }\n\n        return await internals.multipart(req, options, source, contentType);\n    }\n\n    // Output: 'stream'\n\n    if (output === 'stream') {\n        return source;\n    }\n\n    // Output: 'file'\n\n    if (output === 'file') {\n        return await internals.writeFile(req, options, source);\n    }\n\n    // Output: 'data'\n\n    const payload = await Wreck.read(source, { timeout: options.timeout, maxBytes: options.maxBytes });\n    return internals.object(options, payload, contentType.mime);\n};\n\n\ninternals.decoder = function (source, options) {\n\n    const contentEncoding = source.headers['content-encoding'];\n    const decoder = (options.decoders || internals.decoders)[contentEncoding];\n    if (!decoder) {\n        return source;\n    }\n\n    const decoderOptions = (options.compression && options.compression[contentEncoding]) || null;\n    const stream = decoder(decoderOptions);\n\n    const orig = stream.emit;\n    stream.emit = (event, ...args) => {\n\n        if (event === 'error') {\n            args = [Boom.badRequest('Invalid compressed payload', args[0])];\n        }\n\n        return orig.call(stream, event, ...args);\n    };\n\n    return internals.pipe(source, stream);\n};\n\n\ninternals.raw = async function (req, tap, options) {\n\n    const output = options.output;      // Output: 'data', 'stream', 'file'\n    let source = req;\n\n    // Content-encoding (optional)\n\n    if (options.parse === 'gunzip') {\n        source = internals.decoder(source, options);\n    }\n\n    // Setup source\n\n    if (tap) {\n        source = internals.pipe(source, tap);\n    }\n\n    // Output: 'stream'\n\n    if (output === 'stream') {\n        return source;\n    }\n\n    // Output: 'file'\n\n    if (output === 'file') {\n        return await internals.writeFile(req, options, source);\n    }\n\n    // Output: 'data'\n\n    return await Wreck.read(source, { timeout: options.timeout, maxBytes: options.maxBytes });\n};\n\n\ninternals.object = function (options, payload, mime) {\n\n    // Binary\n\n    if (mime === 'application/octet-stream') {\n        return (payload.length ? payload : null);\n    }\n\n    // Text\n\n    if (mime.match(/^text\\/.+$/)) {\n        return payload.toString('utf8');\n    }\n\n    // JSON\n\n    if (/^application\\/(?:.+\\+)?json$/.test(mime)) {\n        if (!payload.length) {\n            return null;\n        }\n\n        try {\n            return JSON.parse(payload.toString('utf8'));\n        }\n        catch (err) {\n            const error = Boom.badRequest('Invalid request payload JSON format', err);\n            error.raw = payload;\n            throw error;\n        }\n    }\n\n    // Form-encoded\n\n    if (mime === 'application/x-www-form-urlencoded') {\n        const parse = (options.querystring || Querystring.parse);\n        return (payload.length ? parse(payload.toString('utf8')) : {});\n    }\n\n    const error = Boom.unsupportedMediaType();\n    error.raw = payload;\n    throw error;\n};\n\n\ninternals.multipart = function (req, options, source, contentType) {\n\n    return new Promise((resolve, reject) => {\n\n        internals._multipart(req, options, source, contentType, (err, payload) => {\n\n            if (err) {\n                return reject(err);\n            }\n\n            return resolve(payload);\n        });\n    });\n};\n\n\ninternals._multipart = function (req, options, source, contentType, next) {\n\n    // Set stream timeout\n\n    const clientTimeout = options.timeout;\n    let clientTimeoutId = null;\n\n    const dispenserOptions = Hoek.applyToDefaults(contentType, { maxBytes: options.maxBytes });\n    const dispenser = new Pez.Dispenser(dispenserOptions);\n\n    const onError = (err) => {\n\n        return next(Boom.badRequest('Invalid multipart payload format', err));\n    };\n\n    dispenser.once('error', onError);\n\n    const data = {};\n    const finalize = () => {\n\n        clearTimeout(clientTimeoutId);\n        dispenser.removeListener('error', onError);\n        dispenser.removeListener('part', onPart);\n        dispenser.removeListener('field', onField);\n        dispenser.removeListener('close', onClose);\n\n        return next(null, data);\n    };\n\n    if (clientTimeout &&\n        clientTimeout > 0) {\n\n        clientTimeoutId = setTimeout(() => {\n\n            return next(Boom.clientTimeout());\n        }, clientTimeout);\n    }\n\n    const set = (name, value) => {\n\n        if (!data.hasOwnProperty(name)) {\n            data[name] = value;\n        }\n        else if (Array.isArray(data[name])) {\n            data[name].push(value);\n        }\n        else {\n            data[name] = [data[name], value];\n        }\n    };\n\n    const pendingFiles = {};\n    let nextId = 0;\n    let closed = false;\n\n    const output = (options.multipart ? options.multipart.output : options.output);\n\n    const onPart = async (part) => {\n\n        if (output === 'file') {                                                                // Output: 'file'\n            const id = nextId++;\n            pendingFiles[id] = true;\n            try {\n                const { path, bytes } = await internals.writeFile(req, options, part);\n\n                const item = {\n                    filename: part.filename,\n                    path,\n                    headers: part.headers,\n                    bytes\n                };\n\n                set(part.name, item);\n            }\n            catch (err) {\n                return next(err);\n            }\n\n            delete pendingFiles[id];\n\n            if (closed &&\n                !Object.keys(pendingFiles).length) {\n\n                return finalize(data);\n            }\n        }\n        else {                                                                                  // Output: 'data'\n            const payload = await Wreck.read(part); // Error handled by dispenser.once('error')\n\n            if (output === 'stream') {                                                      // Output: 'stream'\n                const item = Wreck.toReadableStream(payload);\n\n                item.hapi = {\n                    filename: part.filename,\n                    headers: part.headers\n                };\n\n                return set(part.name, item);\n            }\n\n            const ct = part.headers['content-type'] || '';\n            const mime = ct.split(';')[0].trim().toLowerCase();\n            const annotate = (value) => set(part.name, output === 'annotated' ? { filename: part.filename, headers: part.headers, payload: value } : value);\n\n            if (!mime) {\n                return annotate(payload);\n            }\n\n            if (!payload.length) {\n                return annotate({});\n            }\n\n            try {\n                const object = internals.object(options, payload, mime);\n                annotate(object);\n            }\n            catch (err) {\n                annotate(payload);\n            }\n        }\n    };\n\n    dispenser.on('part', onPart);\n\n    const onField = (name, value) => set(name, value);\n\n    dispenser.on('field', onField);\n\n    const onClose = () => {\n\n        if (Object.keys(pendingFiles).length) {\n            closed = true;\n            return;\n        }\n\n        return finalize(data);\n    };\n\n    dispenser.once('close', onClose);\n\n    source.pipe(dispenser);\n};\n\n\ninternals.writeFile = function (req, options, stream) {\n\n    return new Promise((resolve, reject) => {\n\n        const path = Hoek.uniqueFilename(options.uploads || Os.tmpdir());\n        const file = Fs.createWriteStream(path, { flags: 'wx' });\n        const counter = new internals.Counter();\n\n        const finalize = Hoek.once((err) => {\n\n            req.removeListener('aborted', onAbort);\n            file.removeListener('close', finalize);\n            file.removeListener('error', finalize);\n\n            if (!err) {\n                return resolve({ path, bytes: counter.bytes });\n            }\n\n            file.destroy();\n            Fs.unlink(path, (/* fsErr */) => reject(err));      // Ignore unlink errors\n        });\n\n        file.once('close', finalize);\n        file.once('error', finalize);\n\n        const onAbort = () => finalize(Boom.badRequest('Client connection aborted'));\n        req.once('aborted', onAbort);\n\n        stream.pipe(counter).pipe(file);\n    });\n};\n\n\ninternals.pipe = function (from, to) {\n\n    from.once('error', (err) => to.emit('error', err));\n    return from.pipe(to);\n};\n\n\ninternals.Counter = function () {\n\n    Stream.Transform.call(this);\n    this.bytes = 0;\n};\n\nHoek.inherits(internals.Counter, Stream.Transform);\n\n\ninternals.Counter.prototype._transform = function (chunk, encoding, next) {\n\n    this.bytes = this.bytes + chunk.length;\n    return next(null, chunk);\n};\n","'use strict';\n\n// Load modules\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports = module.exports = internals.Team = function (options = {}) {\n\n    this.work = new Promise((resolve, reject) => {\n\n        this._resolve = resolve;\n        this._reject = reject;\n    });\n\n    const meetings = options.meetings || 1;\n    this._meetings = meetings;\n    this._count = meetings;\n    this._notes = [];\n};\n\n\ninternals.Team.prototype.attend = function (note) {\n\n    if (note instanceof Error) {\n        return this._reject(note);\n    }\n\n    this._notes.push(note);\n\n    if (--this._count) {\n        return;\n    }\n\n    return this._resolve(this._meetings === 1 ? this._notes[0] : this._notes);\n};\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports = module.exports = internals.Topo = function () {\n\n    this._items = [];\n    this.nodes = [];\n};\n\n\ninternals.Topo.prototype.add = function (nodes, options) {\n\n    options = options || {};\n\n    // Validate rules\n\n    const before = [].concat(options.before || []);\n    const after = [].concat(options.after || []);\n    const group = options.group || '?';\n    const sort = options.sort || 0;                   // Used for merging only\n\n    Hoek.assert(before.indexOf(group) === -1, 'Item cannot come before itself:', group);\n    Hoek.assert(before.indexOf('?') === -1, 'Item cannot come before unassociated items');\n    Hoek.assert(after.indexOf(group) === -1, 'Item cannot come after itself:', group);\n    Hoek.assert(after.indexOf('?') === -1, 'Item cannot come after unassociated items');\n\n    ([].concat(nodes)).forEach((node, i) => {\n\n        const item = {\n            seq: this._items.length,\n            sort,\n            before,\n            after,\n            group,\n            node\n        };\n\n        this._items.push(item);\n    });\n\n    // Insert event\n\n    const error = this._sort();\n    Hoek.assert(!error, 'item', (group !== '?' ? 'added into group ' + group : ''), 'created a dependencies error');\n\n    return this.nodes;\n};\n\n\ninternals.Topo.prototype.merge = function (others) {\n\n    others = [].concat(others);\n    for (let i = 0; i < others.length; ++i) {\n        const other = others[i];\n        if (other) {\n            for (let j = 0; j < other._items.length; ++j) {\n                const item = Hoek.shallow(other._items[j]);\n                this._items.push(item);\n            }\n        }\n    }\n\n    // Sort items\n\n    this._items.sort(internals.mergeSort);\n    for (let i = 0; i < this._items.length; ++i) {\n        this._items[i].seq = i;\n    }\n\n    const error = this._sort();\n    Hoek.assert(!error, 'merge created a dependencies error');\n\n    return this.nodes;\n};\n\n\ninternals.mergeSort = function (a, b) {\n\n    return a.sort === b.sort ? 0 : (a.sort < b.sort ? -1 : 1);\n};\n\n\ninternals.Topo.prototype._sort = function () {\n\n    // Construct graph\n\n    const graph = {};\n    const graphAfters = Object.create(null); // A prototype can bungle lookups w/ false positives\n    const groups = Object.create(null);\n\n    for (let i = 0; i < this._items.length; ++i) {\n        const item = this._items[i];\n        const seq = item.seq;                         // Unique across all items\n        const group = item.group;\n\n        // Determine Groups\n\n        groups[group] = groups[group] || [];\n        groups[group].push(seq);\n\n        // Build intermediary graph using 'before'\n\n        graph[seq] = item.before;\n\n        // Build second intermediary graph with 'after'\n\n        const after = item.after;\n        for (let j = 0; j < after.length; ++j) {\n            graphAfters[after[j]] = (graphAfters[after[j]] || []).concat(seq);\n        }\n    }\n\n    // Expand intermediary graph\n\n    let graphNodes = Object.keys(graph);\n    for (let i = 0; i < graphNodes.length; ++i) {\n        const node = graphNodes[i];\n        const expandedGroups = [];\n\n        const graphNodeItems = Object.keys(graph[node]);\n        for (let j = 0; j < graphNodeItems.length; ++j) {\n            const group = graph[node][graphNodeItems[j]];\n            groups[group] = groups[group] || [];\n\n            for (let k = 0; k < groups[group].length; ++k) {\n                expandedGroups.push(groups[group][k]);\n            }\n        }\n        graph[node] = expandedGroups;\n    }\n\n    // Merge intermediary graph using graphAfters into final graph\n\n    const afterNodes = Object.keys(graphAfters);\n    for (let i = 0; i < afterNodes.length; ++i) {\n        const group = afterNodes[i];\n\n        if (groups[group]) {\n            for (let j = 0; j < groups[group].length; ++j) {\n                const node = groups[group][j];\n                graph[node] = graph[node].concat(graphAfters[group]);\n            }\n        }\n    }\n\n    // Compile ancestors\n\n    let children;\n    const ancestors = {};\n    graphNodes = Object.keys(graph);\n    for (let i = 0; i < graphNodes.length; ++i) {\n        const node = graphNodes[i];\n        children = graph[node];\n\n        for (let j = 0; j < children.length; ++j) {\n            ancestors[children[j]] = (ancestors[children[j]] || []).concat(node);\n        }\n    }\n\n    // Topo sort\n\n    const visited = {};\n    const sorted = [];\n\n    for (let i = 0; i < this._items.length; ++i) {          // Really looping thru item.seq values out of order\n        let next = i;\n\n        if (ancestors[i]) {\n            next = null;\n            for (let j = 0; j < this._items.length; ++j) {  // As above, these are item.seq values\n                if (visited[j] === true) {\n                    continue;\n                }\n\n                if (!ancestors[j]) {\n                    ancestors[j] = [];\n                }\n\n                const shouldSeeCount = ancestors[j].length;\n                let seenCount = 0;\n                for (let k = 0; k < shouldSeeCount; ++k) {\n                    if (visited[ancestors[j][k]]) {\n                        ++seenCount;\n                    }\n                }\n\n                if (seenCount === shouldSeeCount) {\n                    next = j;\n                    break;\n                }\n            }\n        }\n\n        if (next !== null) {\n            visited[next] = true;\n            sorted.push(next);\n        }\n    }\n\n    if (sorted.length !== this._items.length) {\n        return new Error('Invalid dependencies');\n    }\n\n    const seqIndex = {};\n    for (let i = 0; i < this._items.length; ++i) {\n        const item = this._items[i];\n        seqIndex[item.seq] = item;\n    }\n\n    const sortedNodes = [];\n    this._items = sorted.map((value) => {\n\n        const sortedItem = seqIndex[value];\n        sortedNodes.push(sortedItem.node);\n        return sortedItem;\n    });\n\n    this.nodes = sortedNodes;\n};\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports = module.exports = internals.Vise = function (chunks) {\n\n    this.length = 0;\n    this._chunks = [];\n    this._offset = 0;\n\n    if (chunks) {\n        chunks = [].concat(chunks);\n        for (let i = 0; i < chunks.length; ++i) {\n            this.push(chunks[i]);\n        }\n    }\n};\n\n\ninternals.Vise.prototype.push = function (chunk) {\n\n    Hoek.assert(Buffer.isBuffer(chunk), 'Chunk must be a buffer');\n\n    const item = {\n        data: chunk,\n        length: chunk.length,\n        offset: this.length + this._offset,\n        index: this._chunks.length\n    };\n\n    this._chunks.push(item);\n    this.length += chunk.length;\n};\n\n\ninternals.Vise.prototype.shift = function (length) {\n\n    if (!length) {\n        return [];\n    }\n\n    const prevOffset = this._offset;\n    const item = this._chunkAt(length);\n\n    let dropTo = this._chunks.length;\n    this._offset = 0;\n\n    if (item) {\n        dropTo = item.chunk.index;\n        this._offset = item.offset;\n    }\n\n    // Drop lower chunks\n\n    const chunks = [];\n    for (let i = 0; i < dropTo; ++i) {\n        const chunk = this._chunks.shift();\n        if (i === 0 &&\n            prevOffset) {\n\n            chunks.push(chunk.data.slice(prevOffset));\n        }\n        else {\n            chunks.push(chunk.data);\n        }\n    }\n\n    if (this._offset) {\n        chunks.push(item.chunk.data.slice(dropTo ? 0 : prevOffset, this._offset));\n    }\n\n    // Recalculate existing chunks\n\n    this.length = 0;\n    for (let i = 0; i < this._chunks.length; ++i) {\n        const chunk = this._chunks[i];\n        chunk.offset = this.length,\n        chunk.index = i;\n\n        this.length += chunk.length;\n    }\n\n    this.length -= this._offset;\n\n    return chunks;\n};\n\n\ninternals.Vise.prototype.at = internals.Vise.prototype.readUInt8 = function (pos) {\n\n    const item = this._chunkAt(pos);\n    return item ? item.chunk.data[item.offset] : undefined;\n};\n\n\ninternals.Vise.prototype._chunkAt = function (pos) {\n\n    if (pos < 0) {\n        return null;\n    }\n\n    pos = pos + this._offset;\n\n    for (let i = 0; i < this._chunks.length; ++i) {\n        const chunk = this._chunks[i];\n        const offset = pos - chunk.offset;\n        if (offset < chunk.length) {\n            return { chunk, offset };\n        }\n    }\n\n    return null;\n};\n\n\ninternals.Vise.prototype.chunks = function () {\n\n    const chunks = [];\n\n    for (let i = 0; i < this._chunks.length; ++i) {\n        const chunk = this._chunks[i];\n        if (i === 0 &&\n            this._offset) {\n\n            chunks.push(chunk.data.slice(this._offset));\n        }\n        else {\n            chunks.push(chunk.data);\n        }\n    }\n\n    return chunks;\n};\n\n\ninternals.Vise.prototype.startsWith = function (value, pos, length) {\n\n    pos = pos || 0;\n\n    length = length ? Math.min(value.length, length) : value.length;\n    if (pos + length > this.length) {                                   // Not enough length to fit value\n        return false;\n    }\n\n    const start = this._chunkAt(pos);\n    if (!start) {\n        return false;\n    }\n\n    let j = start.chunk.index;\n    for (let i = 0; j < this._chunks.length && i < length; ++j) {\n        const chunk = this._chunks[j];\n\n        let k = (j === start.chunk.index ? start.offset : 0);\n        for (; k < chunk.length && i < length; ++k, ++i) {\n            if (chunk.data[k] !== value[i]) {\n                return false;\n            }\n        }\n    }\n\n    return true;\n};\n","'use strict';\n\n// Load modules\n\nconst Events = require('events');\nconst Http = require('http');\nconst Https = require('https');\nconst Stream = require('stream');\nconst Url = require('url');\nconst Zlib = require('zlib');\n\nconst Boom = require('boom');\nconst Hoek = require('hoek');\n\nconst Payload = require('./payload');\nconst Recorder = require('./recorder');\nconst Tap = require('./tap');\n\n\n// Declare internals\n\nconst internals = {\n    jsonRegex: /^application\\/([a-z0-9.]*[+-]json|json)$/,\n    shallowOptions: ['agent', 'agents', 'beforeRedirect', 'downstreamRes', 'payload', 'redirected']\n};\n\n\n// New instance is exported as module.exports\n\ninternals.Client = function (options = {}) {\n\n    Hoek.assert(!options.agents || (options.agents.https && options.agents.http && options.agents.httpsAllowUnauthorized), 'Option agents must include \"http\", \"https\", and \"httpsAllowUnauthorized\"');\n\n    this._defaults = Hoek.cloneWithShallow(options, internals.shallowOptions);\n\n    this.agents = this._defaults.agents || {\n        https: new Https.Agent({ maxSockets: Infinity }),\n        http: new Http.Agent({ maxSockets: Infinity }),\n        httpsAllowUnauthorized: new Https.Agent({ maxSockets: Infinity, rejectUnauthorized: false })\n    };\n\n    if (!options.events) {\n        return;\n    }\n\n    this.events = new Events.EventEmitter();\n    this._emit = function (...args) {\n\n        this.events.emit(...args);\n    };\n};\n\n\ninternals.Client.prototype.defaults = function (options) {\n\n    Hoek.assert(options && (typeof options === 'object'), 'options must be provided to defaults');\n\n    options = Hoek.applyToDefaultsWithShallow(this._defaults, options, internals.shallowOptions);\n    return new internals.Client(options);\n};\n\n\ninternals.resolveUrl = function (baseUrl, path) {\n\n    if (!path) {\n        return baseUrl;\n    }\n\n    const parsedPath = Url.parse(path);\n    if (parsedPath.host &&\n        parsedPath.protocol) {\n\n        return Url.format(parsedPath);\n    }\n\n    const parsedBase = Url.parse(baseUrl);\n    parsedBase.pathname = parsedBase.pathname + parsedPath.pathname;\n    parsedBase.pathname = parsedBase.pathname.replace(/[/]{2,}/g, '/');\n    parsedBase.search = parsedPath.search;      // Always use the querystring from the path argument\n\n    return Url.format(parsedBase);\n};\n\n\ninternals.Client.prototype.request = function (method, url, options = {}) {\n\n    try {\n        options = Hoek.applyToDefaultsWithShallow(this._defaults, options, internals.shallowOptions);\n\n        Hoek.assert(options.payload === undefined || typeof options.payload === 'string' || typeof options.payload === 'object', 'options.payload must be a string, a Buffer, a Stream, or an Object');\n        Hoek.assert((options.agent === undefined || options.agent === null) || (typeof options.rejectUnauthorized !== 'boolean'), 'options.agent cannot be set to an Agent at the same time as options.rejectUnauthorized is set');\n        Hoek.assert(options.beforeRedirect === undefined || options.beforeRedirect === null || typeof options.beforeRedirect === 'function', 'options.beforeRedirect must be a function');\n        Hoek.assert(options.redirected === undefined || options.redirected === null || typeof options.redirected === 'function', 'options.redirected must be a function');\n        Hoek.assert(options.gunzip === undefined || typeof options.gunzip === 'boolean' || options.gunzip === 'force', 'options.gunzip must be a boolean or \"force\"');\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n\n    options.beforeRedirect = options.beforeRedirect || ((redirectMethod, statusCode, location, resHeaders, redirectOptions, next) => next());\n\n    if (options.baseUrl) {\n        url = internals.resolveUrl(options.baseUrl, url);\n        delete options.baseUrl;\n    }\n\n    const relay = {};\n    const req = this._request(method, url, options, relay);\n    const promise = new Promise((resolve, reject) => {\n\n        relay.callback = (err, res) => {\n\n            if (err) {\n                reject(err);\n                return;\n            }\n\n            resolve(res);\n            return;\n        };\n    });\n\n    promise.req = req;\n    return promise;\n};\n\n\ninternals.Client.prototype._request = function (method, url, options, relay, _trace) {\n\n    const uri = Url.parse(url);\n\n    if (options.socketPath) {\n        uri.socketPath = options.socketPath;\n        delete options.socketPath;\n    }\n\n    uri.method = method.toUpperCase();\n    uri.headers = options.headers || {};\n    const hasContentLength = internals.findHeader('content-length', uri.headers) !== undefined;\n\n    if (options.payload && typeof options.payload === 'object' && !(options.payload instanceof Stream) && !Buffer.isBuffer(options.payload)) {\n        options.payload = JSON.stringify(options.payload);\n        if (!internals.findHeader('content-type', uri.headers)) {\n            uri.headers['content-type'] = 'application/json';\n        }\n    }\n\n    if (options.gunzip && internals.findHeader('accept-encoding', uri.headers) === undefined) {\n        uri.headers['accept-encoding'] = 'gzip';\n    }\n\n    const payloadSupported = (uri.method !== 'GET' && uri.method !== 'HEAD' && options.payload !== null && options.payload !== undefined);\n    if (payloadSupported &&\n        (typeof options.payload === 'string' || Buffer.isBuffer(options.payload)) &&\n        (!hasContentLength)) {\n\n        uri.headers = Hoek.clone(uri.headers);\n        uri.headers['content-length'] = Buffer.isBuffer(options.payload) ? options.payload.length : Buffer.byteLength(options.payload);\n    }\n\n    let redirects = (options.hasOwnProperty('redirects') ? options.redirects : false);      // Needed to allow 0 as valid value when passed recursively\n\n    _trace = (_trace || []);\n    _trace.push({ method: uri.method, url });\n\n    const client = (uri.protocol === 'https:' ? Https : Http);\n\n    if (options.rejectUnauthorized !== undefined && uri.protocol === 'https:') {\n        uri.agent = options.rejectUnauthorized ? this.agents.https : this.agents.httpsAllowUnauthorized;\n    }\n    else if (options.agent || options.agent === false) {\n        uri.agent = options.agent;\n    }\n    else {\n        uri.agent = uri.protocol === 'https:' ? this.agents.https : this.agents.http;\n    }\n\n    if (options.secureProtocol !== undefined) {\n        uri.secureProtocol = options.secureProtocol;\n    }\n\n    if (options.ciphers !== undefined) {\n        uri.ciphers = options.ciphers;\n    }\n\n    if (this._emit) {\n        this._emit('request', uri, options);\n    }\n\n    const start = Date.now();\n    const req = client.request(uri);\n\n    let shadow = null;                                                                      // A copy of the streamed request payload when redirects are enabled\n    let timeoutId;\n\n    const onError = (err) => {\n\n        err.trace = _trace;\n        return finishOnce(Boom.badGateway('Client request error', err));\n    };\n\n    req.once('error', onError);\n\n    const onResponse = (res) => {\n\n        // Pass-through response\n\n        const statusCode = res.statusCode;\n        const redirectMethod = internals.redirectMethod(statusCode, uri.method, options);\n\n        if (redirects === false ||\n            !redirectMethod) {\n\n            return finishOnce(null, res);\n        }\n\n        // Redirection\n\n        res.destroy();\n\n        if (redirects === 0) {\n            return finishOnce(Boom.badGateway('Maximum redirections reached', _trace));\n        }\n\n        let location = res.headers.location;\n        if (!location) {\n            return finishOnce(Boom.badGateway('Received redirection without location', _trace));\n        }\n\n        if (!/^https?:/i.test(location)) {\n            location = Url.resolve(uri.href, location);\n        }\n\n        const redirectOptions = Hoek.cloneWithShallow(options, internals.shallowOptions);\n        redirectOptions.payload = shadow || options.payload;                                    // shadow must be ready at this point if set\n        redirectOptions.redirects = --redirects;\n\n        return options.beforeRedirect(redirectMethod, statusCode, location, res.headers, redirectOptions, () => {\n\n            const redirectReq = this._request(redirectMethod, location, redirectOptions, { callback: finishOnce }, _trace);\n\n            if (options.redirected) {\n                options.redirected(statusCode, location, redirectReq);\n            }\n        });\n    };\n\n    // Register handlers\n\n    const finish = (err, res) => {\n\n        if (err) {\n            req.abort();\n        }\n\n        req.removeListener('response', onResponse);\n        req.removeListener('error', onError);\n        req.on('error', Hoek.ignore);\n        clearTimeout(timeoutId);\n\n        if (this._emit) {\n            this._emit('response', err, { req, res, start, uri });\n        }\n\n        return relay.callback(err, res);\n    };\n\n    const finishOnce = Hoek.once(finish);\n\n    req.once('response', onResponse);\n\n    if (options.timeout) {\n        timeoutId = setTimeout(() => {\n\n            return finishOnce(Boom.gatewayTimeout('Client request timeout'));\n        }, options.timeout);\n        delete options.timeout;\n    }\n\n    // Custom abort method to detect early aborts\n\n    const _abort = req.abort;\n    let aborted = false;\n    req.abort = () => {\n\n        if (!aborted && !req.res && !req.socket) {\n            process.nextTick(() => {\n\n                // Fake an ECONNRESET error\n\n                const error = new Error('socket hang up');\n                error.code = 'ECONNRESET';\n                finishOnce(error);\n            });\n        }\n\n        aborted = true;\n        return _abort.call(req);\n    };\n\n    // Write payload\n\n    if (payloadSupported) {\n        if (options.payload instanceof Stream) {\n            let stream = options.payload;\n\n            if (redirects) {\n                const collector = new Tap();\n                collector.once('finish', () => {\n\n                    shadow = collector.collect();\n                });\n\n                stream = options.payload.pipe(collector);\n            }\n\n            internals.deferPipeUntilSocketConnects(req, stream);\n            return req;\n        }\n\n        req.write(options.payload);\n    }\n\n    // Finalize request\n\n    req.end();\n    return req;\n};\n\n\ninternals.deferPipeUntilSocketConnects = function (req, stream) {\n\n    const onSocket = (socket) => {\n\n        if (!socket.connecting) {\n            return onSocketConnect();\n        }\n\n        socket.once('connect', onSocketConnect);\n    };\n    const onSocketConnect = () => {\n\n        stream.pipe(req);\n        stream.removeListener('error', onStreamError);\n    };\n    const onStreamError = (err) => {\n\n        req.emit('error', err);\n    };\n\n    req.once('socket', onSocket);\n    stream.on('error', onStreamError);\n};\n\n\ninternals.redirectMethod = function (code, method, options) {\n\n    switch (code) {\n        case 301:\n        case 302:\n            return method;\n\n        case 303:\n            if (options.redirect303) {\n                return 'GET';\n            }\n            break;\n\n        case 307:\n        case 308:\n            return method;\n    }\n\n    return null;\n};\n\n\ninternals.Client.prototype.read = function (res, options = {}) {\n\n    return new Promise((resolve, reject) => {\n\n        this._read(res, options, (err, payload) => {\n\n            if (err) {\n                reject(err);\n                return;\n            }\n\n            resolve(payload);\n            return;\n        });\n    });\n};\n\n\ninternals.Client.prototype._read = function (res, options, callback) {\n\n    options = Hoek.applyToDefaultsWithShallow(this._defaults, options, internals.shallowOptions);\n\n    // Finish once\n\n    let clientTimeoutId = null;\n\n    const finish = (err, buffer) => {\n\n        clearTimeout(clientTimeoutId);\n        reader.removeListener('error', onReaderError);\n        reader.removeListener('finish', onReaderFinish);\n        res.removeListener('error', onResError);\n        res.removeListener('close', onResAborted);\n        res.removeListener('aborted', onResAborted);\n        res.on('error', Hoek.ignore);\n\n        if (err) {\n            return callback(err);\n        }\n\n        if (!options.json) {\n            return callback(null, buffer);\n        }\n\n        // Parse JSON\n\n        if (buffer.length === 0) {\n            return callback(null, null);\n        }\n\n        if (options.json === 'force') {\n            return internals.tryParseBuffer(buffer, callback);\n        }\n\n        // mode is \"smart\", \"strict\" or true\n\n        const contentType = (res.headers && internals.findHeader('content-type', res.headers)) || '';\n        const mime = contentType.split(';')[0].trim().toLowerCase();\n\n        if (!internals.jsonRegex.test(mime)) {\n            if (options.json === 'strict') {\n                return callback(Boom.notAcceptable('The content-type is not JSON compatible'));\n            }\n\n            return callback(null, buffer);\n        }\n\n        return internals.tryParseBuffer(buffer, callback);\n    };\n\n    const finishOnce = Hoek.once(finish);\n\n    const clientTimeout = options.timeout;\n    if (clientTimeout &&\n        clientTimeout > 0) {\n\n        clientTimeoutId = setTimeout(() => {\n\n            finishOnce(Boom.clientTimeout());\n        }, clientTimeout);\n    }\n\n    // Hander errors\n\n    const onResError = (err) => {\n\n        return finishOnce(err.isBoom ? err : Boom.internal('Payload stream error', err));\n    };\n\n    const onResAborted = () => {\n\n        // Workaround https://github.com/nodejs/node/pull/20611\n        // This is covered in node 10\n        /* $lab:coverage:off$ */\n        if (res.complete) {\n            return;\n        }\n        /* $lab:coverage:on$ */\n\n        return finishOnce(Boom.internal('Payload stream closed prematurely'));\n    };\n\n    res.once('error', onResError);\n    res.once('close', onResAborted);\n    res.once('aborted', onResAborted);\n\n    // Read payload\n\n    const reader = new Recorder({ maxBytes: options.maxBytes });\n\n    const onReaderError = (err) => {\n\n        if (res.destroy) {                          // GZip stream has no destroy() method\n            res.destroy();\n        }\n\n        return finishOnce(err);\n    };\n\n    reader.once('error', onReaderError);\n\n    const onReaderFinish = () => {\n\n        return finishOnce(null, reader.collect());\n    };\n\n    reader.once('finish', onReaderFinish);\n\n    if (options.gunzip) {\n        const contentEncoding = options.gunzip === 'force' ?\n            'gzip' :\n            (res.headers && internals.findHeader('content-encoding', res.headers)) || '';\n\n        if (/^(x-)?gzip(\\s*,\\s*identity)?$/.test(contentEncoding)) {\n            const gunzip = Zlib.createGunzip();\n\n            gunzip.once('error', onReaderError);\n\n            res.pipe(gunzip).pipe(reader);\n            return;\n        }\n    }\n\n    res.pipe(reader);\n};\n\n\ninternals.Client.prototype.toReadableStream = function (payload, encoding) {\n\n    return new Payload(payload, encoding);\n};\n\n\ninternals.Client.prototype.parseCacheControl = function (field) {\n\n    /*\n        Cache-Control   = 1#cache-directive\n        cache-directive = token [ \"=\" ( token / quoted-string ) ]\n        token           = [^\\x00-\\x20\\(\\)<>@\\,;\\:\\\\\"\\/\\[\\]\\?\\=\\{\\}\\x7F]+\n        quoted-string   = \"(?:[^\"\\\\]|\\\\.)*\"\n    */\n\n    //                             1: directive                                        =   2: token                                              3: quoted-string\n    const regex = /(?:^|(?:\\s*\\,\\s*))([^\\x00-\\x20\\(\\)<>@\\,;\\:\\\\\"\\/\\[\\]\\?\\=\\{\\}\\x7F]+)(?:\\=(?:([^\\x00-\\x20\\(\\)<>@\\,;\\:\\\\\"\\/\\[\\]\\?\\=\\{\\}\\x7F]+)|(?:\\\"((?:[^\"\\\\]|\\\\.)*)\\\")))?/g;\n\n    const header = {};\n    const error = field.replace(regex, ($0, $1, $2, $3) => {\n\n        const value = $2 || $3;\n        header[$1] = value ? value.toLowerCase() : true;\n        return '';\n    });\n\n    if (header['max-age']) {\n        try {\n            const maxAge = parseInt(header['max-age'], 10);\n            if (isNaN(maxAge)) {\n                return null;\n            }\n\n            header['max-age'] = maxAge;\n        }\n        catch (err) { }\n    }\n\n    return (error ? null : header);\n};\n\n\n// Shortcuts\n\ninternals.Client.prototype.get = function (uri, options) {\n\n    return this._shortcut('GET', uri, options);\n};\n\n\ninternals.Client.prototype.post = function (uri, options) {\n\n    return this._shortcut('POST', uri, options);\n};\n\n\ninternals.Client.prototype.patch = function (uri, options) {\n\n    return this._shortcut('PATCH', uri, options);\n};\n\n\ninternals.Client.prototype.put = function (uri, options) {\n\n    return this._shortcut('PUT', uri, options);\n};\n\n\ninternals.Client.prototype.delete = function (uri, options) {\n\n    return this._shortcut('DELETE', uri, options);\n};\n\n\ninternals.Client.prototype._shortcut = async function (method, uri, options = {}) {\n\n    const res = await this.request(method, uri, options);\n\n    let payload;\n    try {\n        payload = await this.read(res, options);\n    }\n    catch (err) {\n        err.data = err.data || {};\n        err.data.res = res;\n        throw err;\n    }\n\n    if (res.statusCode < 400) {\n        return { res, payload };\n    }\n\n    // Response error\n\n    const data = {\n        isResponseError: true,\n        headers: res.headers,\n        res,\n        payload\n    };\n\n    throw new Boom(`Response Error: ${res.statusCode} ${res.statusMessage}`, { statusCode: res.statusCode, data });\n};\n\n\ninternals.tryParseBuffer = function (buffer, next) {\n\n    let payload;\n    try {\n        payload = JSON.parse(buffer.toString());\n    }\n    catch (err) {\n        return next(Boom.badGateway(err.message, { payload: buffer }));\n    }\n\n    return next(null, payload);\n};\n\n\ninternals.findHeader = function (headerName, headers) {\n\n    const foundKey = Object.keys(headers)\n        .find((key) => key.toLowerCase() === headerName.toLowerCase());\n\n    return foundKey && headers[foundKey];\n};\n\n\nmodule.exports = new internals.Client();\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\nconst Stream = require('stream');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nmodule.exports = internals.Payload = function (payload, encoding) {\n\n    Stream.Readable.call(this);\n\n    const data = [].concat(payload || '');\n    let size = 0;\n    for (let i = 0; i < data.length; ++i) {\n        const chunk = data[i];\n        size = size + chunk.length;\n        data[i] = Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk);\n    }\n\n    this._data = Buffer.concat(data, size);\n    this._position = 0;\n    this._encoding = encoding || 'utf8';\n};\n\nHoek.inherits(internals.Payload, Stream.Readable);\n\n\ninternals.Payload.prototype._read = function (size) {\n\n    const chunk = this._data.slice(this._position, this._position + size);\n    this.push(chunk, this._encoding);\n    this._position = this._position + chunk.length;\n\n    if (this._position >= this._data.length) {\n        this.push(null);\n    }\n};\n","'use strict';\n\n// Load modules\n\nconst Boom = require('boom');\nconst Hoek = require('hoek');\nconst Stream = require('stream');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nmodule.exports = internals.Recorder = function (options) {\n\n    Stream.Writable.call(this);\n\n    this.settings = options;                // No need to clone since called internally with new object\n    this.buffers = [];\n    this.length = 0;\n};\n\nHoek.inherits(internals.Recorder, Stream.Writable);\n\n\ninternals.Recorder.prototype._write = function (chunk, encoding, next) {\n\n    if (this.settings.maxBytes &&\n        this.length + chunk.length > this.settings.maxBytes) {\n\n        return this.emit('error', Boom.entityTooLarge('Payload content length greater than maximum allowed: ' + this.settings.maxBytes));\n    }\n\n    this.length = this.length + chunk.length;\n    this.buffers.push(chunk);\n    next();\n};\n\n\ninternals.Recorder.prototype.collect = function () {\n\n    const buffer = (this.buffers.length === 0 ? Buffer.alloc(0) : (this.buffers.length === 1 ? this.buffers[0] : Buffer.concat(this.buffers, this.length)));\n    return buffer;\n};\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\nconst Stream = require('stream');\nconst Payload = require('./payload');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nmodule.exports = internals.Tap = function () {\n\n    Stream.Transform.call(this);\n    this.buffers = [];\n};\n\nHoek.inherits(internals.Tap, Stream.Transform);\n\n\ninternals.Tap.prototype._transform = function (chunk, encoding, next) {\n\n    this.buffers.push(chunk);\n    next(null, chunk);\n};\n\n\ninternals.Tap.prototype.collect = function () {\n\n    return new Payload(this.buffers);\n};\n","module.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n","module.exports = require(\"assert\");","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"punycode\");","module.exports = require(\"querystring\");","module.exports = require(\"stream\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"zlib\");"],"sourceRoot":""}